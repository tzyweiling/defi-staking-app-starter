{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\nvar core = require('web3-core');\nvar Subscriptions = require('web3-core-subscriptions').subscriptions;\nvar Method = require('web3-core-method');\n// var formatters = require('web3-core-helpers').formatters;\nvar Net = require('web3-net');\nvar Shh = function Shh() {\n  var _this = this;\n\n  // sets _requestmanager\n  core.packageInit(this, arguments);\n\n  // overwrite package setRequestManager\n  var setRequestManager = this.setRequestManager;\n  this.setRequestManager = function (manager) {\n    setRequestManager(manager);\n    _this.net.setRequestManager(manager);\n    return true;\n  };\n\n  // overwrite setProvider\n  var setProvider = this.setProvider;\n  this.setProvider = function () {\n    setProvider.apply(_this, arguments);\n    _this.setRequestManager(_this._requestManager);\n  };\n  this.net = new Net(this);\n  [new Subscriptions({\n    name: 'subscribe',\n    type: 'shh',\n    subscriptions: {\n      'messages': {\n        params: 1\n        // inputFormatter: [formatters.inputPostFormatter],\n        // outputFormatter: formatters.outputPostFormatter\n      }\n    }\n  }), new Method({\n    name: 'getVersion',\n    call: 'shh_version',\n    params: 0\n  }), new Method({\n    name: 'getInfo',\n    call: 'shh_info',\n    params: 0\n  }), new Method({\n    name: 'setMaxMessageSize',\n    call: 'shh_setMaxMessageSize',\n    params: 1\n  }), new Method({\n    name: 'setMinPoW',\n    call: 'shh_setMinPoW',\n    params: 1\n  }), new Method({\n    name: 'markTrustedPeer',\n    call: 'shh_markTrustedPeer',\n    params: 1\n  }), new Method({\n    name: 'newKeyPair',\n    call: 'shh_newKeyPair',\n    params: 0\n  }), new Method({\n    name: 'addPrivateKey',\n    call: 'shh_addPrivateKey',\n    params: 1\n  }), new Method({\n    name: 'deleteKeyPair',\n    call: 'shh_deleteKeyPair',\n    params: 1\n  }), new Method({\n    name: 'hasKeyPair',\n    call: 'shh_hasKeyPair',\n    params: 1\n  }), new Method({\n    name: 'getPublicKey',\n    call: 'shh_getPublicKey',\n    params: 1\n  }), new Method({\n    name: 'getPrivateKey',\n    call: 'shh_getPrivateKey',\n    params: 1\n  }), new Method({\n    name: 'newSymKey',\n    call: 'shh_newSymKey',\n    params: 0\n  }), new Method({\n    name: 'addSymKey',\n    call: 'shh_addSymKey',\n    params: 1\n  }), new Method({\n    name: 'generateSymKeyFromPassword',\n    call: 'shh_generateSymKeyFromPassword',\n    params: 1\n  }), new Method({\n    name: 'hasSymKey',\n    call: 'shh_hasSymKey',\n    params: 1\n  }), new Method({\n    name: 'getSymKey',\n    call: 'shh_getSymKey',\n    params: 1\n  }), new Method({\n    name: 'deleteSymKey',\n    call: 'shh_deleteSymKey',\n    params: 1\n  }), new Method({\n    name: 'newMessageFilter',\n    call: 'shh_newMessageFilter',\n    params: 1\n  }), new Method({\n    name: 'getFilterMessages',\n    call: 'shh_getFilterMessages',\n    params: 1\n  }), new Method({\n    name: 'deleteMessageFilter',\n    call: 'shh_deleteMessageFilter',\n    params: 1\n  }), new Method({\n    name: 'post',\n    call: 'shh_post',\n    params: 1,\n    inputFormatter: [null]\n  }), new Method({\n    name: 'unsubscribe',\n    call: 'shh_unsubscribe',\n    params: 1\n  })].forEach(function (method) {\n    method.attachToObject(_this);\n    method.setRequestManager(_this._requestManager);\n  });\n};\nShh.prototype.clearSubscriptions = function () {\n  this._requestManager.clearSubscriptions();\n};\ncore.addProviders(Shh);\nmodule.exports = Shh;","map":{"version":3,"names":["core","require","Subscriptions","subscriptions","Method","Net","Shh","_this","packageInit","arguments","setRequestManager","manager","net","setProvider","apply","_requestManager","name","type","params","call","inputFormatter","forEach","method","attachToObject","prototype","clearSubscriptions","addProviders","module","exports"],"sources":["D:/Documents/defi-staking-app-starter/defi-staking-app-starter/node_modules/web3-shh/src/index.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\nvar core = require('web3-core');\nvar Subscriptions = require('web3-core-subscriptions').subscriptions;\nvar Method = require('web3-core-method');\n// var formatters = require('web3-core-helpers').formatters;\nvar Net = require('web3-net');\n\n\nvar Shh = function Shh() {\n    var _this = this;\n\n    // sets _requestmanager\n    core.packageInit(this, arguments);\n\n    // overwrite package setRequestManager\n    var setRequestManager = this.setRequestManager;\n    this.setRequestManager = function (manager) {\n        setRequestManager(manager);\n\n        _this.net.setRequestManager(manager);\n\n        return true;\n    };\n\n    // overwrite setProvider\n    var setProvider = this.setProvider;\n    this.setProvider = function () {\n        setProvider.apply(_this, arguments);\n\n        _this.setRequestManager(_this._requestManager);\n    };\n\n    this.net = new Net(this);\n\n    [\n        new Subscriptions({\n            name: 'subscribe',\n            type: 'shh',\n            subscriptions: {\n                'messages': {\n                    params: 1\n                    // inputFormatter: [formatters.inputPostFormatter],\n                    // outputFormatter: formatters.outputPostFormatter\n                }\n            }\n        }),\n\n        new Method({\n            name: 'getVersion',\n            call: 'shh_version',\n            params: 0\n        }),\n        new Method({\n            name: 'getInfo',\n            call: 'shh_info',\n            params: 0\n        }),\n        new Method({\n            name: 'setMaxMessageSize',\n            call: 'shh_setMaxMessageSize',\n            params: 1\n        }),\n        new Method({\n            name: 'setMinPoW',\n            call: 'shh_setMinPoW',\n            params: 1\n        }),\n        new Method({\n            name: 'markTrustedPeer',\n            call: 'shh_markTrustedPeer',\n            params: 1\n        }),\n        new Method({\n            name: 'newKeyPair',\n            call: 'shh_newKeyPair',\n            params: 0\n        }),\n        new Method({\n            name: 'addPrivateKey',\n            call: 'shh_addPrivateKey',\n            params: 1\n        }),\n        new Method({\n            name: 'deleteKeyPair',\n            call: 'shh_deleteKeyPair',\n            params: 1\n        }),\n        new Method({\n            name: 'hasKeyPair',\n            call: 'shh_hasKeyPair',\n            params: 1\n        }),\n        new Method({\n            name: 'getPublicKey',\n            call: 'shh_getPublicKey',\n            params: 1\n        }),\n        new Method({\n            name: 'getPrivateKey',\n            call: 'shh_getPrivateKey',\n            params: 1\n        }),\n        new Method({\n            name: 'newSymKey',\n            call: 'shh_newSymKey',\n            params: 0\n        }),\n        new Method({\n            name: 'addSymKey',\n            call: 'shh_addSymKey',\n            params: 1\n        }),\n        new Method({\n            name: 'generateSymKeyFromPassword',\n            call: 'shh_generateSymKeyFromPassword',\n            params: 1\n        }),\n        new Method({\n            name: 'hasSymKey',\n            call: 'shh_hasSymKey',\n            params: 1\n        }),\n        new Method({\n            name: 'getSymKey',\n            call: 'shh_getSymKey',\n            params: 1\n        }),\n        new Method({\n            name: 'deleteSymKey',\n            call: 'shh_deleteSymKey',\n            params: 1\n        }),\n\n        new Method({\n            name: 'newMessageFilter',\n            call: 'shh_newMessageFilter',\n            params: 1\n        }),\n        new Method({\n            name: 'getFilterMessages',\n            call: 'shh_getFilterMessages',\n            params: 1\n        }),\n        new Method({\n            name: 'deleteMessageFilter',\n            call: 'shh_deleteMessageFilter',\n            params: 1\n        }),\n\n        new Method({\n            name: 'post',\n            call: 'shh_post',\n            params: 1,\n            inputFormatter: [null]\n        }),\n\n        new Method({\n            name: 'unsubscribe',\n            call: 'shh_unsubscribe',\n            params: 1\n        })\n    ].forEach(function(method) {\n        method.attachToObject(_this);\n        method.setRequestManager(_this._requestManager);\n    });\n};\n\nShh.prototype.clearSubscriptions = function () {\n     this._requestManager.clearSubscriptions();\n};\n\ncore.addProviders(Shh);\n\n\n\nmodule.exports = Shh;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}