{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\nvar requestManager = require('web3-core-requestmanager');\nvar extend = require('./extend.js');\nmodule.exports = {\n  packageInit: function (pkg, args) {\n    args = Array.prototype.slice.call(args);\n    if (!pkg) {\n      throw new Error('You need to instantiate using the \"new\" keyword.');\n    }\n\n    // make property of pkg._provider, which can properly set providers\n    Object.defineProperty(pkg, 'currentProvider', {\n      get: function () {\n        return pkg._provider;\n      },\n      set: function (value) {\n        return pkg.setProvider(value);\n      },\n      enumerable: true,\n      configurable: true\n    });\n\n    // inherit from parent package or create a new RequestManager\n    if (args[0] && args[0]._requestManager) {\n      pkg._requestManager = args[0]._requestManager;\n    } else {\n      pkg._requestManager = new requestManager.Manager(args[0], args[1]);\n    }\n\n    // add givenProvider\n    pkg.givenProvider = requestManager.Manager.givenProvider;\n    pkg.providers = requestManager.Manager.providers;\n    pkg._provider = pkg._requestManager.provider;\n\n    // add SETPROVIDER function (don't overwrite if already existing)\n    if (!pkg.setProvider) {\n      pkg.setProvider = function (provider, net) {\n        pkg._requestManager.setProvider(provider, net);\n        pkg._provider = pkg._requestManager.provider;\n        return true;\n      };\n    }\n    pkg.setRequestManager = function (manager) {\n      pkg._requestManager = manager;\n      pkg._provider = manager.provider;\n    };\n\n    // attach batch request creation\n    pkg.BatchRequest = requestManager.BatchManager.bind(null, pkg._requestManager);\n\n    // attach extend function\n    pkg.extend = extend(pkg);\n  },\n  addProviders: function (pkg) {\n    pkg.givenProvider = requestManager.Manager.givenProvider;\n    pkg.providers = requestManager.Manager.providers;\n  }\n};","map":{"version":3,"names":["requestManager","require","extend","module","exports","packageInit","pkg","args","Array","prototype","slice","call","Error","Object","defineProperty","get","_provider","set","value","setProvider","enumerable","configurable","_requestManager","Manager","givenProvider","providers","provider","net","setRequestManager","manager","BatchRequest","BatchManager","bind","addProviders"],"sources":["D:/Documents/defi-staking-app-starter/defi-staking-app-starter/node_modules/web3-core/src/index.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\n\nvar requestManager = require('web3-core-requestmanager');\nvar extend = require('./extend.js');\n\nmodule.exports = {\n    packageInit: function (pkg, args) {\n        args = Array.prototype.slice.call(args);\n\n        if (!pkg) {\n            throw new Error('You need to instantiate using the \"new\" keyword.');\n        }\n\n        // make property of pkg._provider, which can properly set providers\n        Object.defineProperty(pkg, 'currentProvider', {\n            get: function () {\n                return pkg._provider;\n            },\n            set: function (value) {\n                return pkg.setProvider(value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n\n        // inherit from parent package or create a new RequestManager\n        if (args[0] && args[0]._requestManager) {\n            pkg._requestManager = args[0]._requestManager;\n        } else {\n            pkg._requestManager = new requestManager.Manager(args[0], args[1]);\n        }\n\n        // add givenProvider\n        pkg.givenProvider = requestManager.Manager.givenProvider;\n        pkg.providers = requestManager.Manager.providers;\n\n        pkg._provider = pkg._requestManager.provider;\n\n        // add SETPROVIDER function (don't overwrite if already existing)\n        if (!pkg.setProvider) {\n            pkg.setProvider = function (provider, net) {\n                pkg._requestManager.setProvider(provider, net);\n                pkg._provider = pkg._requestManager.provider;\n                return true;\n            };\n        }\n\n        pkg.setRequestManager = function(manager) {\n            pkg._requestManager = manager;\n            pkg._provider = manager.provider;\n        };\n\n        // attach batch request creation\n        pkg.BatchRequest = requestManager.BatchManager.bind(null, pkg._requestManager);\n\n        // attach extend function\n        pkg.extend = extend(pkg);\n    },\n    addProviders: function (pkg) {\n        pkg.givenProvider = requestManager.Manager.givenProvider;\n        pkg.providers = requestManager.Manager.providers;\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAGZ,IAAIA,cAAc,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AACxD,IAAIC,MAAM,GAAGD,OAAO,CAAC,aAAa,CAAC;AAEnCE,MAAM,CAACC,OAAO,GAAG;EACbC,WAAW,EAAE,SAAAA,CAAUC,GAAG,EAAEC,IAAI,EAAE;IAC9BA,IAAI,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACJ,IAAI,CAAC;IAEvC,IAAI,CAACD,GAAG,EAAE;MACN,MAAM,IAAIM,KAAK,CAAC,kDAAkD,CAAC;IACvE;;IAEA;IACAC,MAAM,CAACC,cAAc,CAACR,GAAG,EAAE,iBAAiB,EAAE;MAC1CS,GAAG,EAAE,SAAAA,CAAA,EAAY;QACb,OAAOT,GAAG,CAACU,SAAS;MACxB,CAAC;MACDC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;QAClB,OAAOZ,GAAG,CAACa,WAAW,CAACD,KAAK,CAAC;MACjC,CAAC;MACDE,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE;IAClB,CAAC,CAAC;;IAEF;IACA,IAAId,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,CAACe,eAAe,EAAE;MACpChB,GAAG,CAACgB,eAAe,GAAGf,IAAI,CAAC,CAAC,CAAC,CAACe,eAAe;IACjD,CAAC,MAAM;MACHhB,GAAG,CAACgB,eAAe,GAAG,IAAItB,cAAc,CAACuB,OAAO,CAAChB,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;IACtE;;IAEA;IACAD,GAAG,CAACkB,aAAa,GAAGxB,cAAc,CAACuB,OAAO,CAACC,aAAa;IACxDlB,GAAG,CAACmB,SAAS,GAAGzB,cAAc,CAACuB,OAAO,CAACE,SAAS;IAEhDnB,GAAG,CAACU,SAAS,GAAGV,GAAG,CAACgB,eAAe,CAACI,QAAQ;;IAE5C;IACA,IAAI,CAACpB,GAAG,CAACa,WAAW,EAAE;MAClBb,GAAG,CAACa,WAAW,GAAG,UAAUO,QAAQ,EAAEC,GAAG,EAAE;QACvCrB,GAAG,CAACgB,eAAe,CAACH,WAAW,CAACO,QAAQ,EAAEC,GAAG,CAAC;QAC9CrB,GAAG,CAACU,SAAS,GAAGV,GAAG,CAACgB,eAAe,CAACI,QAAQ;QAC5C,OAAO,IAAI;MACf,CAAC;IACL;IAEApB,GAAG,CAACsB,iBAAiB,GAAG,UAASC,OAAO,EAAE;MACtCvB,GAAG,CAACgB,eAAe,GAAGO,OAAO;MAC7BvB,GAAG,CAACU,SAAS,GAAGa,OAAO,CAACH,QAAQ;IACpC,CAAC;;IAED;IACApB,GAAG,CAACwB,YAAY,GAAG9B,cAAc,CAAC+B,YAAY,CAACC,IAAI,CAAC,IAAI,EAAE1B,GAAG,CAACgB,eAAe,CAAC;;IAE9E;IACAhB,GAAG,CAACJ,MAAM,GAAGA,MAAM,CAACI,GAAG,CAAC;EAC5B,CAAC;EACD2B,YAAY,EAAE,SAAAA,CAAU3B,GAAG,EAAE;IACzBA,GAAG,CAACkB,aAAa,GAAGxB,cAAc,CAACuB,OAAO,CAACC,aAAa;IACxDlB,GAAG,CAACmB,SAAS,GAAGzB,cAAc,CAACuB,OAAO,CAACE,SAAS;EACpD;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}