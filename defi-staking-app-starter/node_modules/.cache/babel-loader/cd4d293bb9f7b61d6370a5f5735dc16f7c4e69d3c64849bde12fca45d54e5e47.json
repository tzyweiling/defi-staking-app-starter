{"ast":null,"code":"\"use strict\";\n\nimport { Coder } from \"./abstract-coder\";\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n  constructor(coder) {\n    super(coder.name, coder.type, undefined, coder.dynamic);\n    this.coder = coder;\n  }\n  encode(writer, value) {\n    return this.coder.encode(writer, value);\n  }\n  decode(reader) {\n    return this.coder.decode(reader);\n  }\n}","map":{"version":3,"names":["Coder","AnonymousCoder","constructor","coder","name","type","undefined","dynamic","encode","writer","value","decode","reader"],"sources":["D:/Documents/defi-staking-app-starter/defi-staking-app-starter/node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js"],"sourcesContent":["\"use strict\";\nimport { Coder } from \"./abstract-coder\";\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    constructor(coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,KAAK,QAAQ,kBAAkB;AACxC;AACA,OAAO,MAAMC,cAAc,SAASD,KAAK,CAAC;EACtCE,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAACC,IAAI,EAAED,KAAK,CAACE,IAAI,EAAEC,SAAS,EAAEH,KAAK,CAACI,OAAO,CAAC;IACvD,IAAI,CAACJ,KAAK,GAAGA,KAAK;EACtB;EACAK,MAAMA,CAACC,MAAM,EAAEC,KAAK,EAAE;IAClB,OAAO,IAAI,CAACP,KAAK,CAACK,MAAM,CAACC,MAAM,EAAEC,KAAK,CAAC;EAC3C;EACAC,MAAMA,CAACC,MAAM,EAAE;IACX,OAAO,IAAI,CAACT,KAAK,CAACQ,MAAM,CAACC,MAAM,CAAC;EACpC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}