{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Grabber = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nconst ExternalInteractorBase_1 = require(\"../../Core/ExternalInteractorBase\");\nclass Grabber extends ExternalInteractorBase_1.ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n  isEnabled() {\n    const container = this.container;\n    const mouse = container.interactivity.mouse;\n    const events = container.actualOptions.interactivity.events;\n    if (!(events.onHover.enable && mouse.position)) {\n      return false;\n    }\n    const hoverMode = events.onHover.mode;\n    return Utils_1.isInArray(Enums_1.HoverMode.grab, hoverMode);\n  }\n  reset() {}\n  interact() {\n    var _a;\n    const container = this.container;\n    const options = container.actualOptions;\n    const interactivity = options.interactivity;\n    if (interactivity.events.onHover.enable && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n      const mousePos = container.interactivity.mouse.position;\n      if (mousePos === undefined) {\n        return;\n      }\n      const distance = container.retina.grabModeDistance;\n      const query = container.particles.quadTree.queryCircle(mousePos, distance);\n      for (const particle of query) {\n        const pos = particle.getPosition();\n        const pointDistance = Utils_1.getDistance(pos, mousePos);\n        if (pointDistance <= distance) {\n          const grabLineOptions = interactivity.modes.grab.links;\n          const lineOpacity = grabLineOptions.opacity;\n          const opacityLine = lineOpacity - pointDistance * lineOpacity / distance;\n          if (opacityLine > 0) {\n            const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.options.links.color;\n            if (!container.particles.grabLineColor) {\n              const linksOptions = container.actualOptions.interactivity.modes.grab.links;\n              container.particles.grabLineColor = Utils_1.getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = Utils_1.getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (colorLine === undefined) {\n              return;\n            }\n            container.canvas.drawGrabLine(particle, colorLine, opacityLine, mousePos);\n          }\n        }\n      }\n    }\n  }\n}\nexports.Grabber = Grabber;","map":{"version":3,"names":["Object","defineProperty","exports","value","Grabber","Utils_1","require","Enums_1","ExternalInteractorBase_1","ExternalInteractorBase","constructor","container","isEnabled","mouse","interactivity","events","actualOptions","onHover","enable","position","hoverMode","mode","isInArray","HoverMode","grab","reset","interact","_a","options","status","Constants","mouseMoveEvent","mousePos","undefined","distance","retina","grabModeDistance","query","particles","quadTree","queryCircle","particle","pos","getPosition","pointDistance","getDistance","grabLineOptions","modes","links","lineOpacity","opacity","opacityLine","optColor","color","grabLineColor","linksOptions","getLinkRandomColor","blink","consent","colorLine","getLinkColor","canvas","drawGrabLine"],"sources":["D:/Documents/defi-staking-app-starter/defi-staking-app-starter/node_modules/tsparticles/Interactions/External/Grabber.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Grabber = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nconst ExternalInteractorBase_1 = require(\"../../Core/ExternalInteractorBase\");\nclass Grabber extends ExternalInteractorBase_1.ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container;\n        const mouse = container.interactivity.mouse;\n        const events = container.actualOptions.interactivity.events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        return Utils_1.isInArray(Enums_1.HoverMode.grab, hoverMode);\n    }\n    reset() {\n    }\n    interact() {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const interactivity = options.interactivity;\n        if (interactivity.events.onHover.enable && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n            const mousePos = container.interactivity.mouse.position;\n            if (mousePos === undefined) {\n                return;\n            }\n            const distance = container.retina.grabModeDistance;\n            const query = container.particles.quadTree.queryCircle(mousePos, distance);\n            for (const particle of query) {\n                const pos = particle.getPosition();\n                const pointDistance = Utils_1.getDistance(pos, mousePos);\n                if (pointDistance <= distance) {\n                    const grabLineOptions = interactivity.modes.grab.links;\n                    const lineOpacity = grabLineOptions.opacity;\n                    const opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n                    if (opacityLine > 0) {\n                        const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.options.links.color;\n                        if (!container.particles.grabLineColor) {\n                            const linksOptions = container.actualOptions.interactivity.modes.grab.links;\n                            container.particles.grabLineColor = Utils_1.getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n                        }\n                        const colorLine = Utils_1.getLinkColor(particle, undefined, container.particles.grabLineColor);\n                        if (colorLine === undefined) {\n                            return;\n                        }\n                        container.canvas.drawGrabLine(particle, colorLine, opacityLine, mousePos);\n                    }\n                }\n            }\n        }\n    }\n}\nexports.Grabber = Grabber;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}