{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadInfectionPlugin = void 0;\nconst InfectionInstance_1 = require(\"./InfectionInstance\");\nconst ParticlesInfecter_1 = require(\"./ParticlesInfecter\");\nconst Infection_1 = require(\"./Options/Classes/Infection\");\nclass Plugin {\n  constructor() {\n    this.id = \"infection\";\n  }\n  getPlugin(container) {\n    return new InfectionInstance_1.InfectionInstance(container);\n  }\n  needsPlugin(options) {\n    var _a, _b;\n    return (_b = (_a = options === null || options === void 0 ? void 0 : options.infection) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : false;\n  }\n  loadOptions(options, source) {\n    if (!this.needsPlugin(source)) {\n      return;\n    }\n    const optionsCast = options;\n    let infectionOptions = optionsCast.infection;\n    if ((infectionOptions === null || infectionOptions === void 0 ? void 0 : infectionOptions.load) === undefined) {\n      optionsCast.infection = infectionOptions = new Infection_1.Infection();\n    }\n    infectionOptions.load(source === null || source === void 0 ? void 0 : source.infection);\n  }\n}\nfunction loadInfectionPlugin(tsParticles) {\n  const plugin = new Plugin();\n  tsParticles.addPlugin(plugin);\n  tsParticles.addInteractor(\"particlesInfection\", container => new ParticlesInfecter_1.ParticlesInfecter(container));\n}\nexports.loadInfectionPlugin = loadInfectionPlugin;","map":{"version":3,"names":["Object","defineProperty","exports","value","loadInfectionPlugin","InfectionInstance_1","require","ParticlesInfecter_1","Infection_1","Plugin","constructor","id","getPlugin","container","InfectionInstance","needsPlugin","options","_a","_b","infection","enable","loadOptions","source","optionsCast","infectionOptions","load","undefined","Infection","tsParticles","plugin","addPlugin","addInteractor","ParticlesInfecter"],"sources":["D:/Documents/defi-staking-app-starter/defi-staking-app-starter/node_modules/tsparticles/Plugins/Infection/plugin.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadInfectionPlugin = void 0;\nconst InfectionInstance_1 = require(\"./InfectionInstance\");\nconst ParticlesInfecter_1 = require(\"./ParticlesInfecter\");\nconst Infection_1 = require(\"./Options/Classes/Infection\");\nclass Plugin {\n    constructor() {\n        this.id = \"infection\";\n    }\n    getPlugin(container) {\n        return new InfectionInstance_1.InfectionInstance(container);\n    }\n    needsPlugin(options) {\n        var _a, _b;\n        return (_b = (_a = options === null || options === void 0 ? void 0 : options.infection) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : false;\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        let infectionOptions = optionsCast.infection;\n        if ((infectionOptions === null || infectionOptions === void 0 ? void 0 : infectionOptions.load) === undefined) {\n            optionsCast.infection = infectionOptions = new Infection_1.Infection();\n        }\n        infectionOptions.load(source === null || source === void 0 ? void 0 : source.infection);\n    }\n}\nfunction loadInfectionPlugin(tsParticles) {\n    const plugin = new Plugin();\n    tsParticles.addPlugin(plugin);\n    tsParticles.addInteractor(\"particlesInfection\", (container) => new ParticlesInfecter_1.ParticlesInfecter(container));\n}\nexports.loadInfectionPlugin = loadInfectionPlugin;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,mBAAmB,GAAG,KAAK,CAAC;AACpC,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC1D,MAAMC,mBAAmB,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAC1D,MAAME,WAAW,GAAGF,OAAO,CAAC,6BAA6B,CAAC;AAC1D,MAAMG,MAAM,CAAC;EACTC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,EAAE,GAAG,WAAW;EACzB;EACAC,SAASA,CAACC,SAAS,EAAE;IACjB,OAAO,IAAIR,mBAAmB,CAACS,iBAAiB,CAACD,SAAS,CAAC;EAC/D;EACAE,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAIC,EAAE,EAAEC,EAAE;IACV,OAAO,CAACA,EAAE,GAAG,CAACD,EAAE,GAAGD,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACG,SAAS,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,MAAM,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,KAAK;EAClL;EACAG,WAAWA,CAACL,OAAO,EAAEM,MAAM,EAAE;IACzB,IAAI,CAAC,IAAI,CAACP,WAAW,CAACO,MAAM,CAAC,EAAE;MAC3B;IACJ;IACA,MAAMC,WAAW,GAAGP,OAAO;IAC3B,IAAIQ,gBAAgB,GAAGD,WAAW,CAACJ,SAAS;IAC5C,IAAI,CAACK,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACC,IAAI,MAAMC,SAAS,EAAE;MAC3GH,WAAW,CAACJ,SAAS,GAAGK,gBAAgB,GAAG,IAAIhB,WAAW,CAACmB,SAAS,CAAC,CAAC;IAC1E;IACAH,gBAAgB,CAACC,IAAI,CAACH,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACH,SAAS,CAAC;EAC3F;AACJ;AACA,SAASf,mBAAmBA,CAACwB,WAAW,EAAE;EACtC,MAAMC,MAAM,GAAG,IAAIpB,MAAM,CAAC,CAAC;EAC3BmB,WAAW,CAACE,SAAS,CAACD,MAAM,CAAC;EAC7BD,WAAW,CAACG,aAAa,CAAC,oBAAoB,EAAGlB,SAAS,IAAK,IAAIN,mBAAmB,CAACyB,iBAAiB,CAACnB,SAAS,CAAC,CAAC;AACxH;AACAX,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}