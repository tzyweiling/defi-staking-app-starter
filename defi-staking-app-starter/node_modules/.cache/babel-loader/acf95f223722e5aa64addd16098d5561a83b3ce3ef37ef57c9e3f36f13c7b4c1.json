{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./NavBar\";\nimport Web3 from \"web3/dist/web3.min.js\";\nclass App extends Component {\n  //called immediately before mounting occurs\n  //component is considered unsafe by react, best practice using UNSAFE_\n  //make sure metamask is load\n  async UNSAFE_componentWillMount() {\n    await this.loadWeb3();\n    await loadBlockChainData();\n  }\n\n  // function to load web3 (async function), connect the app to the blockchain\n  async loadWeb3() {\n    // if we detect ethereum in window\n    if (window.ethereum) {\n      // create a new instance of Web3 using the detected ethereum provider\n      //allows the app to interact with the Ethereum blockchain\n      window.web3 = new Web3(window.ethereum);\n      // requests the user's permission to connect the app to their Ethereum accounts\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      // if no ethereum provider but web3 is present, create a new Web3 instance using the current provider\n      window.web3 = new this.Web3(window.web3.currentProvider);\n    } else {\n      // if no ethereum provider or web3, show an alert indicating that no ethereum browser is detected\n      window.alert(\"No ethereum browser detected! You can check out MetaMask!\");\n    }\n  }\n  async loadBlockChainData() {\n    const web3 = window.web3;\n    const account = web3.eth.getAccounts();\n    console.log(account);\n  }\n\n  //props: special feature/parameter in react, allow us to passover properties fromone component to another\n  constructor(props) {\n    super(props);\n    //set our state\n    // we have lot of state, so create an object and put all state in the object\n    this.state = {\n      //setup state\n      account: \"0x0\"\n      //send state as props to navbar, want acc info to appear in navbar\n      //create a property called account in <Navbar>, then we hv applied state to account in navbar by passing it through props\n    };\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      account: this.state.account,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }));\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navbar","Web3","App","UNSAFE_componentWillMount","loadWeb3","loadBlockChainData","window","ethereum","web3","enable","currentProvider","alert","account","eth","getAccounts","console","log","constructor","props","state","render","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/Documents/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./NavBar\";\r\nimport Web3 from \"web3/dist/web3.min.js\";\r\n\r\nclass App extends Component {\r\n  //called immediately before mounting occurs\r\n  //component is considered unsafe by react, best practice using UNSAFE_\r\n  //make sure metamask is load\r\n  async UNSAFE_componentWillMount() {\r\n    await this.loadWeb3();\r\n    await loadBlockChainData();\r\n  }\r\n\r\n  // function to load web3 (async function), connect the app to the blockchain\r\n  async loadWeb3() {\r\n    // if we detect ethereum in window\r\n    if (window.ethereum) {\r\n      // create a new instance of Web3 using the detected ethereum provider\r\n      //allows the app to interact with the Ethereum blockchain\r\n      window.web3 = new Web3(window.ethereum);\r\n      // requests the user's permission to connect the app to their Ethereum accounts\r\n      await window.ethereum.enable();\r\n    } else if (window.web3) {\r\n      // if no ethereum provider but web3 is present, create a new Web3 instance using the current provider\r\n      window.web3 = new this.Web3(window.web3.currentProvider);\r\n    } else {\r\n      // if no ethereum provider or web3, show an alert indicating that no ethereum browser is detected\r\n      window.alert(\"No ethereum browser detected! You can check out MetaMask!\");\r\n    }\r\n  }\r\n\r\n  async loadBlockChainData() {\r\n    const web3 = window.web3;\r\n    const account = web3.eth.getAccounts();\r\n    console.log(account);\r\n  }\r\n\r\n  //props: special feature/parameter in react, allow us to passover properties fromone component to another\r\n  constructor(props) {\r\n    super(props);\r\n    //set our state\r\n    // we have lot of state, so create an object and put all state in the object\r\n    this.state = {\r\n      //setup state\r\n      account: \"0x0\",\r\n      //send state as props to navbar, want acc info to appear in navbar\r\n      //create a property called account in <Navbar>, then we hv applied state to account in navbar by passing it through props\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,uBAAuB;AAExC,MAAMC,GAAG,SAASH,SAAS,CAAC;EAC1B;EACA;EACA;EACA,MAAMI,yBAAyBA,CAAA,EAAG;IAChC,MAAM,IAAI,CAACC,QAAQ,CAAC,CAAC;IACrB,MAAMC,kBAAkB,CAAC,CAAC;EAC5B;;EAEA;EACA,MAAMD,QAAQA,CAAA,EAAG;IACf;IACA,IAAIE,MAAM,CAACC,QAAQ,EAAE;MACnB;MACA;MACAD,MAAM,CAACE,IAAI,GAAG,IAAIP,IAAI,CAACK,MAAM,CAACC,QAAQ,CAAC;MACvC;MACA,MAAMD,MAAM,CAACC,QAAQ,CAACE,MAAM,CAAC,CAAC;IAChC,CAAC,MAAM,IAAIH,MAAM,CAACE,IAAI,EAAE;MACtB;MACAF,MAAM,CAACE,IAAI,GAAG,IAAI,IAAI,CAACP,IAAI,CAACK,MAAM,CAACE,IAAI,CAACE,eAAe,CAAC;IAC1D,CAAC,MAAM;MACL;MACAJ,MAAM,CAACK,KAAK,CAAC,2DAA2D,CAAC;IAC3E;EACF;EAEA,MAAMN,kBAAkBA,CAAA,EAAG;IACzB,MAAMG,IAAI,GAAGF,MAAM,CAACE,IAAI;IACxB,MAAMI,OAAO,GAAGJ,IAAI,CAACK,GAAG,CAACC,WAAW,CAAC,CAAC;IACtCC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;EACtB;;EAEA;EACAK,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ;IACA;IACA,IAAI,CAACC,KAAK,GAAG;MACX;MACAP,OAAO,EAAE;MACT;MACA;IACF,CAAC;EACH;EAEAQ,MAAMA,CAAA,EAAG;IACP,oBACEtB,KAAA,CAAAuB,aAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACE7B,KAAA,CAAAuB,aAAA,CAACrB,MAAM;MAACY,OAAO,EAAE,IAAI,CAACO,KAAK,CAACP,OAAQ;MAAAU,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CACnC,CAAC;EAEV;AACF;AAEA,eAAezB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}