{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ParticlesInfecter = void 0;\nconst ParticlesInteractorBase_1 = require(\"../../Core/ParticlesInteractorBase\");\nclass ParticlesInfecter extends ParticlesInteractorBase_1.ParticlesInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n  isEnabled() {\n    var _a, _b;\n    const infOptions = this.container.actualOptions;\n    return (_b = (_a = infOptions === null || infOptions === void 0 ? void 0 : infOptions.infection) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : false;\n  }\n  reset() {}\n  interact(p1, delta) {\n    var _a, _b;\n    const infecter = this.container.infecter;\n    if (!infecter) {\n      return;\n    }\n    infecter.updateInfection(p1, delta.value);\n    if (p1.infection.stage === undefined) {\n      return;\n    }\n    const container = this.container;\n    const options = container.actualOptions;\n    const infectionOptions = options.infection;\n    if (!infectionOptions.enable || infectionOptions.stages.length < 1) {\n      return;\n    }\n    const infectionStage1 = infectionOptions.stages[p1.infection.stage];\n    const pxRatio = container.retina.pixelRatio;\n    const radius = p1.getRadius() * 2 + infectionStage1.radius * pxRatio;\n    const pos = p1.getPosition();\n    const infectedStage1 = (_a = infectionStage1.infectedStage) !== null && _a !== void 0 ? _a : p1.infection.stage;\n    const query = container.particles.quadTree.queryCircle(pos, radius);\n    const infections = infectionStage1.rate;\n    const neighbors = query.length;\n    for (const p2 of query) {\n      const infP2 = p2;\n      if (infP2 === p1 || infP2.destroyed || infP2.spawning || !(infP2.infection.stage === undefined || infP2.infection.stage !== p1.infection.stage)) {\n        continue;\n      }\n      if (Math.random() < infections / neighbors) {\n        if (infP2.infection.stage === undefined) {\n          infecter.startInfection(infP2, infectedStage1);\n        } else if (infP2.infection.stage < p1.infection.stage) {\n          infecter.updateInfectionStage(infP2, infectedStage1);\n        } else if (infP2.infection.stage > p1.infection.stage) {\n          const infectionStage2 = infectionOptions.stages[infP2.infection.stage];\n          const infectedStage2 = (_b = infectionStage2 === null || infectionStage2 === void 0 ? void 0 : infectionStage2.infectedStage) !== null && _b !== void 0 ? _b : infP2.infection.stage;\n          infecter.updateInfectionStage(p1, infectedStage2);\n        }\n      }\n    }\n  }\n}\nexports.ParticlesInfecter = ParticlesInfecter;","map":{"version":3,"names":["Object","defineProperty","exports","value","ParticlesInfecter","ParticlesInteractorBase_1","require","ParticlesInteractorBase","constructor","container","isEnabled","_a","_b","infOptions","actualOptions","infection","enable","reset","interact","p1","delta","infecter","updateInfection","stage","undefined","options","infectionOptions","stages","length","infectionStage1","pxRatio","retina","pixelRatio","radius","getRadius","pos","getPosition","infectedStage1","infectedStage","query","particles","quadTree","queryCircle","infections","rate","neighbors","p2","infP2","destroyed","spawning","Math","random","startInfection","updateInfectionStage","infectionStage2","infectedStage2"],"sources":["D:/Documents/defi-staking-app-starter/defi-staking-app-starter/node_modules/tsparticles/Plugins/Infection/ParticlesInfecter.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParticlesInfecter = void 0;\nconst ParticlesInteractorBase_1 = require(\"../../Core/ParticlesInteractorBase\");\nclass ParticlesInfecter extends ParticlesInteractorBase_1.ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        var _a, _b;\n        const infOptions = this.container.actualOptions;\n        return (_b = (_a = infOptions === null || infOptions === void 0 ? void 0 : infOptions.infection) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : false;\n    }\n    reset() {\n    }\n    interact(p1, delta) {\n        var _a, _b;\n        const infecter = this.container.infecter;\n        if (!infecter) {\n            return;\n        }\n        infecter.updateInfection(p1, delta.value);\n        if (p1.infection.stage === undefined) {\n            return;\n        }\n        const container = this.container;\n        const options = container.actualOptions;\n        const infectionOptions = options.infection;\n        if (!infectionOptions.enable || infectionOptions.stages.length < 1) {\n            return;\n        }\n        const infectionStage1 = infectionOptions.stages[p1.infection.stage];\n        const pxRatio = container.retina.pixelRatio;\n        const radius = p1.getRadius() * 2 + infectionStage1.radius * pxRatio;\n        const pos = p1.getPosition();\n        const infectedStage1 = (_a = infectionStage1.infectedStage) !== null && _a !== void 0 ? _a : p1.infection.stage;\n        const query = container.particles.quadTree.queryCircle(pos, radius);\n        const infections = infectionStage1.rate;\n        const neighbors = query.length;\n        for (const p2 of query) {\n            const infP2 = p2;\n            if (infP2 === p1 ||\n                infP2.destroyed ||\n                infP2.spawning ||\n                !(infP2.infection.stage === undefined || infP2.infection.stage !== p1.infection.stage)) {\n                continue;\n            }\n            if (Math.random() < infections / neighbors) {\n                if (infP2.infection.stage === undefined) {\n                    infecter.startInfection(infP2, infectedStage1);\n                }\n                else if (infP2.infection.stage < p1.infection.stage) {\n                    infecter.updateInfectionStage(infP2, infectedStage1);\n                }\n                else if (infP2.infection.stage > p1.infection.stage) {\n                    const infectionStage2 = infectionOptions.stages[infP2.infection.stage];\n                    const infectedStage2 = (_b = infectionStage2 === null || infectionStage2 === void 0 ? void 0 : infectionStage2.infectedStage) !== null && _b !== void 0 ? _b : infP2.infection.stage;\n                    infecter.updateInfectionStage(p1, infectedStage2);\n                }\n            }\n        }\n    }\n}\nexports.ParticlesInfecter = ParticlesInfecter;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}