{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Marek Kotewicz <marek@parity.io>\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\nvar _ = require('underscore');\nvar ethjsUnit = require('ethjs-unit');\nvar utils = require('./utils.js');\nvar soliditySha3 = require('./soliditySha3.js');\nvar randombytes = require('randombytes');\n\n/**\n * Fires an error in an event emitter and callback and returns the eventemitter\n *\n * @method _fireError\n * @param {Object} error a string, a error, or an object with {message, data}\n * @param {Object} emitter\n * @param {Function} reject\n * @param {Function} callback\n * @param {any} optionalData\n * @return {Object} the emitter\n */\nvar _fireError = function (error, emitter, reject, callback, optionalData) {\n  /*jshint maxcomplexity: 10 */\n\n  // add data if given\n  if (_.isObject(error) && !(error instanceof Error) && error.data) {\n    if (_.isObject(error.data) || _.isArray(error.data)) {\n      error.data = JSON.stringify(error.data, null, 2);\n    }\n    error = error.message + \"\\n\" + error.data;\n  }\n  if (_.isString(error)) {\n    error = new Error(error);\n  }\n  if (_.isFunction(callback)) {\n    callback(error, optionalData);\n  }\n  if (_.isFunction(reject)) {\n    // suppress uncatched error if an error listener is present\n    // OR suppress uncatched error if an callback listener is present\n    if (emitter && _.isFunction(emitter.listeners) && emitter.listeners('error').length || _.isFunction(callback)) {\n      emitter.catch(function () {});\n    }\n    // reject later, to be able to return emitter\n    setTimeout(function () {\n      reject(error);\n    }, 1);\n  }\n  if (emitter && _.isFunction(emitter.emit)) {\n    // emit later, to be able to return emitter\n    setTimeout(function () {\n      emitter.emit('error', error, optionalData);\n      emitter.removeAllListeners();\n    }, 1);\n  }\n  return emitter;\n};\n\n/**\n * Should be used to create full function/event name from json abi\n *\n * @method _jsonInterfaceMethodToString\n * @param {Object} json\n * @return {String} full function/event name\n */\nvar _jsonInterfaceMethodToString = function (json) {\n  if (_.isObject(json) && json.name && json.name.indexOf('(') !== -1) {\n    return json.name;\n  }\n  return json.name + '(' + _flattenTypes(false, json.inputs).join(',') + ')';\n};\n\n/**\n * Should be used to flatten json abi inputs/outputs into an array of type-representing-strings\n *\n * @method _flattenTypes\n * @param {bool} includeTuple\n * @param {Object} puts\n * @return {Array} parameters as strings\n */\nvar _flattenTypes = function (includeTuple, puts) {\n  // console.log(\"entered _flattenTypes. inputs/outputs: \" + puts)\n  var types = [];\n  puts.forEach(function (param) {\n    if (typeof param.components === 'object') {\n      if (param.type.substring(0, 5) !== 'tuple') {\n        throw new Error('components found but type is not tuple; report on GitHub');\n      }\n      var suffix = '';\n      var arrayBracket = param.type.indexOf('[');\n      if (arrayBracket >= 0) {\n        suffix = param.type.substring(arrayBracket);\n      }\n      var result = _flattenTypes(includeTuple, param.components);\n      // console.log(\"result should have things: \" + result)\n      if (_.isArray(result) && includeTuple) {\n        // console.log(\"include tuple word, and its an array. joining...: \" + result.types)\n        types.push('tuple(' + result.join(',') + ')' + suffix);\n      } else if (!includeTuple) {\n        // console.log(\"don't include tuple, but its an array. joining...: \" + result)\n        types.push('(' + result.join(',') + ')' + suffix);\n      } else {\n        // console.log(\"its a single type within a tuple: \" + result.types)\n        types.push('(' + result + ')');\n      }\n    } else {\n      // console.log(\"its a type and not directly in a tuple: \" + param.type)\n      types.push(param.type);\n    }\n  });\n  return types;\n};\n\n/**\n * Returns a random hex string by the given bytes size\n *\n * @param {Number} size\n * @returns {string}\n */\nvar randomHex = function (size) {\n  return '0x' + randombytes(size).toString('hex');\n};\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method hexToAscii\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToAscii = function (hex) {\n  if (!utils.isHexStrict(hex)) throw new Error('The parameter must be a valid HEX string.');\n  var str = \"\";\n  var i = 0,\n    l = hex.length;\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n  return str;\n};\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method asciiToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar asciiToHex = function (str) {\n  if (!str) return \"0x00\";\n  var hex = \"\";\n  for (var i = 0; i < str.length; i++) {\n    var code = str.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n  return \"0x\" + hex;\n};\n\n/**\n * Returns value of unit in Wei\n *\n * @method getUnitValue\n * @param {String} unit the unit to convert to, default ether\n * @returns {BN} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nvar getUnitValue = function (unit) {\n  unit = unit ? unit.toLowerCase() : 'ether';\n  if (!ethjsUnit.unitMap[unit]) {\n    throw new Error('This unit \"' + unit + '\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\n  }\n  return unit;\n};\n\n/**\n * Takes a number of wei and converts it to any other ether unit.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method fromWei\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert to, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar fromWei = function (number, unit) {\n  unit = getUnitValue(unit);\n  if (!utils.isBN(number) && !_.isString(number)) {\n    throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n  }\n  return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\n};\n\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method toWei\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert from, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar toWei = function (number, unit) {\n  unit = getUnitValue(unit);\n  if (!utils.isBN(number) && !_.isString(number)) {\n    throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n  }\n  return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\n};\n\n/**\n * Converts to a checksum address\n *\n * @method toChecksumAddress\n * @param {String} address the given HEX address\n * @return {String}\n */\nvar toChecksumAddress = function (address) {\n  if (typeof address === 'undefined') return '';\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) throw new Error('Given address \"' + address + '\" is not a valid Ethereum address.');\n  address = address.toLowerCase().replace(/^0x/i, '');\n  var addressHash = utils.sha3(address).replace(/^0x/i, '');\n  var checksumAddress = '0x';\n  for (var i = 0; i < address.length; i++) {\n    // If ith character is 9 to f then make it uppercase\n    if (parseInt(addressHash[i], 16) > 7) {\n      checksumAddress += address[i].toUpperCase();\n    } else {\n      checksumAddress += address[i];\n    }\n  }\n  return checksumAddress;\n};\nmodule.exports = {\n  _fireError: _fireError,\n  _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\n  _flattenTypes: _flattenTypes,\n  // extractDisplayName: extractDisplayName,\n  // extractTypeName: extractTypeName,\n  randomHex: randomHex,\n  _: _,\n  BN: utils.BN,\n  isBN: utils.isBN,\n  isBigNumber: utils.isBigNumber,\n  isHex: utils.isHex,\n  isHexStrict: utils.isHexStrict,\n  sha3: utils.sha3,\n  sha3Raw: utils.sha3Raw,\n  keccak256: utils.sha3,\n  soliditySha3: soliditySha3.soliditySha3,\n  soliditySha3Raw: soliditySha3.soliditySha3Raw,\n  isAddress: utils.isAddress,\n  checkAddressChecksum: utils.checkAddressChecksum,\n  toChecksumAddress: toChecksumAddress,\n  toHex: utils.toHex,\n  toBN: utils.toBN,\n  bytesToHex: utils.bytesToHex,\n  hexToBytes: utils.hexToBytes,\n  hexToNumberString: utils.hexToNumberString,\n  hexToNumber: utils.hexToNumber,\n  toDecimal: utils.hexToNumber,\n  // alias\n\n  numberToHex: utils.numberToHex,\n  fromDecimal: utils.numberToHex,\n  // alias\n\n  hexToUtf8: utils.hexToUtf8,\n  hexToString: utils.hexToUtf8,\n  toUtf8: utils.hexToUtf8,\n  utf8ToHex: utils.utf8ToHex,\n  stringToHex: utils.utf8ToHex,\n  fromUtf8: utils.utf8ToHex,\n  hexToAscii: hexToAscii,\n  toAscii: hexToAscii,\n  asciiToHex: asciiToHex,\n  fromAscii: asciiToHex,\n  unitMap: ethjsUnit.unitMap,\n  toWei: toWei,\n  fromWei: fromWei,\n  padLeft: utils.leftPad,\n  leftPad: utils.leftPad,\n  padRight: utils.rightPad,\n  rightPad: utils.rightPad,\n  toTwosComplement: utils.toTwosComplement,\n  isBloom: utils.isBloom,\n  isUserEthereumAddressInBloom: utils.isUserEthereumAddressInBloom,\n  isContractAddressInBloom: utils.isContractAddressInBloom,\n  isTopic: utils.isTopic,\n  isTopicInBloom: utils.isTopicInBloom,\n  isInBloom: utils.isInBloom\n};","map":{"version":3,"names":["_","require","ethjsUnit","utils","soliditySha3","randombytes","_fireError","error","emitter","reject","callback","optionalData","isObject","Error","data","isArray","JSON","stringify","message","isString","isFunction","listeners","length","catch","setTimeout","emit","removeAllListeners","_jsonInterfaceMethodToString","json","name","indexOf","_flattenTypes","inputs","join","includeTuple","puts","types","forEach","param","components","type","substring","suffix","arrayBracket","result","push","randomHex","size","toString","hexToAscii","hex","isHexStrict","str","i","l","code","parseInt","substr","String","fromCharCode","asciiToHex","charCodeAt","n","getUnitValue","unit","toLowerCase","unitMap","fromWei","number","isBN","toWei","toChecksumAddress","address","test","replace","addressHash","sha3","checksumAddress","toUpperCase","module","exports","BN","isBigNumber","isHex","sha3Raw","keccak256","soliditySha3Raw","isAddress","checkAddressChecksum","toHex","toBN","bytesToHex","hexToBytes","hexToNumberString","hexToNumber","toDecimal","numberToHex","fromDecimal","hexToUtf8","hexToString","toUtf8","utf8ToHex","stringToHex","fromUtf8","toAscii","fromAscii","padLeft","leftPad","padRight","rightPad","toTwosComplement","isBloom","isUserEthereumAddressInBloom","isContractAddressInBloom","isTopic","isTopicInBloom","isInBloom"],"sources":["D:/Documents/defi-staking-app-starter/defi-staking-app-starter/node_modules/web3-utils/src/index.js"],"sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Marek Kotewicz <marek@parity.io>\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\nvar _ = require('underscore');\nvar ethjsUnit = require('ethjs-unit');\nvar utils = require('./utils.js');\nvar soliditySha3 = require('./soliditySha3.js');\nvar randombytes = require('randombytes');\n\n\n\n/**\n * Fires an error in an event emitter and callback and returns the eventemitter\n *\n * @method _fireError\n * @param {Object} error a string, a error, or an object with {message, data}\n * @param {Object} emitter\n * @param {Function} reject\n * @param {Function} callback\n * @param {any} optionalData\n * @return {Object} the emitter\n */\nvar _fireError = function (error, emitter, reject, callback, optionalData) {\n    /*jshint maxcomplexity: 10 */\n\n    // add data if given\n    if(_.isObject(error) && !(error instanceof Error) &&  error.data) {\n        if(_.isObject(error.data) || _.isArray(error.data)) {\n            error.data = JSON.stringify(error.data, null, 2);\n        }\n\n        error = error.message +\"\\n\"+ error.data;\n    }\n\n    if(_.isString(error)) {\n        error = new Error(error);\n    }\n\n    if (_.isFunction(callback)) {\n        callback(error, optionalData);\n    }\n    if (_.isFunction(reject)) {\n        // suppress uncatched error if an error listener is present\n        // OR suppress uncatched error if an callback listener is present\n        if (\n            emitter &&\n            (_.isFunction(emitter.listeners) &&\n            emitter.listeners('error').length) || _.isFunction(callback)\n        ) {\n            emitter.catch(function(){});\n        }\n        // reject later, to be able to return emitter\n        setTimeout(function () {\n            reject(error);\n        }, 1);\n    }\n\n    if(emitter && _.isFunction(emitter.emit)) {\n        // emit later, to be able to return emitter\n        setTimeout(function () {\n            emitter.emit('error', error, optionalData);\n            emitter.removeAllListeners();\n        }, 1);\n    }\n\n    return emitter;\n};\n\n/**\n * Should be used to create full function/event name from json abi\n *\n * @method _jsonInterfaceMethodToString\n * @param {Object} json\n * @return {String} full function/event name\n */\nvar _jsonInterfaceMethodToString = function (json) {\n    if (_.isObject(json) && json.name && json.name.indexOf('(') !== -1) {\n        return json.name;\n    }\n\n    return json.name + '(' + _flattenTypes(false, json.inputs).join(',') + ')';\n};\n\n\n/**\n * Should be used to flatten json abi inputs/outputs into an array of type-representing-strings\n *\n * @method _flattenTypes\n * @param {bool} includeTuple\n * @param {Object} puts\n * @return {Array} parameters as strings\n */\nvar _flattenTypes = function(includeTuple, puts)\n{\n    // console.log(\"entered _flattenTypes. inputs/outputs: \" + puts)\n    var types = [];\n\n    puts.forEach(function(param) {\n        if (typeof param.components === 'object') {\n            if (param.type.substring(0, 5) !== 'tuple') {\n                throw new Error('components found but type is not tuple; report on GitHub');\n            }\n            var suffix = '';\n            var arrayBracket = param.type.indexOf('[');\n            if (arrayBracket >= 0) { suffix = param.type.substring(arrayBracket); }\n            var result = _flattenTypes(includeTuple, param.components);\n            // console.log(\"result should have things: \" + result)\n            if(_.isArray(result) && includeTuple) {\n                // console.log(\"include tuple word, and its an array. joining...: \" + result.types)\n                types.push('tuple(' + result.join(',') + ')' + suffix);\n            }\n            else if(!includeTuple) {\n                // console.log(\"don't include tuple, but its an array. joining...: \" + result)\n                types.push('(' + result.join(',') + ')' + suffix);\n            }\n            else {\n                // console.log(\"its a single type within a tuple: \" + result.types)\n                types.push('(' + result + ')');\n            }\n        } else {\n            // console.log(\"its a type and not directly in a tuple: \" + param.type)\n            types.push(param.type);\n        }\n    });\n\n    return types;\n};\n\n\n/**\n * Returns a random hex string by the given bytes size\n *\n * @param {Number} size\n * @returns {string}\n */\nvar randomHex = function(size) {\n    return '0x' + randombytes(size).toString('hex');\n};\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method hexToAscii\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToAscii = function(hex) {\n    if (!utils.isHexStrict(hex))\n        throw new Error('The parameter must be a valid HEX string.');\n\n    var str = \"\";\n    var i = 0, l = hex.length;\n    if (hex.substring(0, 2) === '0x') {\n        i = 2;\n    }\n    for (; i < l; i+=2) {\n        var code = parseInt(hex.substr(i, 2), 16);\n        str += String.fromCharCode(code);\n    }\n\n    return str;\n};\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method asciiToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar asciiToHex = function(str) {\n    if(!str)\n        return \"0x00\";\n    var hex = \"\";\n    for(var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n    }\n\n    return \"0x\" + hex;\n};\n\n\n\n/**\n * Returns value of unit in Wei\n *\n * @method getUnitValue\n * @param {String} unit the unit to convert to, default ether\n * @returns {BN} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nvar getUnitValue = function (unit) {\n    unit = unit ? unit.toLowerCase() : 'ether';\n    if (!ethjsUnit.unitMap[unit]) {\n        throw new Error('This unit \"'+ unit +'\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\n    }\n    return unit;\n};\n\n/**\n * Takes a number of wei and converts it to any other ether unit.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method fromWei\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert to, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar fromWei = function(number, unit) {\n    unit = getUnitValue(unit);\n\n    if(!utils.isBN(number) && !_.isString(number)) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n\n    return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\n};\n\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method toWei\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert from, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar toWei = function(number, unit) {\n    unit = getUnitValue(unit);\n\n    if(!utils.isBN(number) && !_.isString(number)) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n\n    return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\n};\n\n\n\n\n/**\n * Converts to a checksum address\n *\n * @method toChecksumAddress\n * @param {String} address the given HEX address\n * @return {String}\n */\nvar toChecksumAddress = function (address) {\n    if (typeof address === 'undefined') return '';\n\n    if(!/^(0x)?[0-9a-f]{40}$/i.test(address))\n        throw new Error('Given address \"'+ address +'\" is not a valid Ethereum address.');\n\n\n\n    address = address.toLowerCase().replace(/^0x/i,'');\n    var addressHash = utils.sha3(address).replace(/^0x/i,'');\n    var checksumAddress = '0x';\n\n    for (var i = 0; i < address.length; i++ ) {\n        // If ith character is 9 to f then make it uppercase\n        if (parseInt(addressHash[i], 16) > 7) {\n            checksumAddress += address[i].toUpperCase();\n        } else {\n            checksumAddress += address[i];\n        }\n    }\n    return checksumAddress;\n};\n\nmodule.exports = {\n    _fireError: _fireError,\n    _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\n    _flattenTypes: _flattenTypes,\n    // extractDisplayName: extractDisplayName,\n    // extractTypeName: extractTypeName,\n    randomHex: randomHex,\n    _: _,\n    BN: utils.BN,\n    isBN: utils.isBN,\n    isBigNumber: utils.isBigNumber,\n    isHex: utils.isHex,\n    isHexStrict: utils.isHexStrict,\n    sha3: utils.sha3,\n    sha3Raw: utils.sha3Raw,\n    keccak256: utils.sha3,\n    soliditySha3: soliditySha3.soliditySha3,\n    soliditySha3Raw: soliditySha3.soliditySha3Raw,\n    isAddress: utils.isAddress,\n    checkAddressChecksum: utils.checkAddressChecksum,\n    toChecksumAddress: toChecksumAddress,\n    toHex: utils.toHex,\n    toBN: utils.toBN,\n\n    bytesToHex: utils.bytesToHex,\n    hexToBytes: utils.hexToBytes,\n\n    hexToNumberString: utils.hexToNumberString,\n\n    hexToNumber: utils.hexToNumber,\n    toDecimal: utils.hexToNumber, // alias\n\n    numberToHex: utils.numberToHex,\n    fromDecimal: utils.numberToHex, // alias\n\n    hexToUtf8: utils.hexToUtf8,\n    hexToString: utils.hexToUtf8,\n    toUtf8: utils.hexToUtf8,\n\n    utf8ToHex: utils.utf8ToHex,\n    stringToHex: utils.utf8ToHex,\n    fromUtf8: utils.utf8ToHex,\n\n    hexToAscii: hexToAscii,\n    toAscii: hexToAscii,\n    asciiToHex: asciiToHex,\n    fromAscii: asciiToHex,\n\n    unitMap: ethjsUnit.unitMap,\n    toWei: toWei,\n    fromWei: fromWei,\n\n    padLeft: utils.leftPad,\n    leftPad: utils.leftPad,\n    padRight: utils.rightPad,\n    rightPad: utils.rightPad,\n    toTwosComplement: utils.toTwosComplement,\n\n    isBloom: utils.isBloom,\n    isUserEthereumAddressInBloom: utils.isUserEthereumAddressInBloom,\n    isContractAddressInBloom: utils.isContractAddressInBloom,\n    isTopic: utils.isTopic,\n    isTopicInBloom: utils.isTopicInBloom,\n    isInBloom: utils.isInBloom\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}