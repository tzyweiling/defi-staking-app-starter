{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Canvas = void 0;\nconst Utils_1 = require(\"../Utils\");\nconst Utils_2 = require(\"../Utils\");\nclass Canvas {\n  constructor(container) {\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n  init() {\n    this.resize();\n    this.initStyle();\n    this.initCover();\n    this.initTrail();\n    this.initBackground();\n    this.paint();\n  }\n  loadCanvas(canvas, generatedCanvas) {\n    var _a;\n    if (!canvas.className) {\n      canvas.className = Utils_1.Constants.canvasClass;\n    }\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n    this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n    this.element = canvas;\n    this.originalStyle = Utils_1.deepExtend({}, this.element.style);\n    this.size.height = canvas.offsetHeight;\n    this.size.width = canvas.offsetWidth;\n    this.context = this.element.getContext(\"2d\");\n    this.container.retina.init();\n    this.initBackground();\n  }\n  destroy() {\n    var _a;\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n    this.safePaint(ctx => {\n      Utils_2.clear(ctx, this.size);\n    });\n  }\n  paint() {\n    const options = this.container.actualOptions;\n    this.safePaint(ctx => {\n      if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n        Utils_2.clear(ctx, this.size);\n        this.paintBase(Utils_1.getStyleFromRgb(this.coverColor, this.coverColor.a));\n      } else {\n        this.paintBase();\n      }\n    });\n  }\n  clear() {\n    const options = this.container.actualOptions;\n    const trail = options.particles.move.trail;\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n      this.paintBase(Utils_1.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n    } else {\n      this.safePaint(ctx => {\n        Utils_2.clear(ctx, this.size);\n      });\n    }\n  }\n  windowResize() {\n    if (!this.element) {\n      return;\n    }\n    const container = this.container;\n    this.resize();\n    container.actualOptions.setResponsive(this.size.width, container.retina.pixelRatio, container.options);\n    container.particles.setDensity();\n    for (const [, plugin] of container.plugins) {\n      if (plugin.resize !== undefined) {\n        plugin.resize();\n      }\n    }\n  }\n  resize() {\n    if (!this.element) {\n      return;\n    }\n    const container = this.container;\n    const pxRatio = container.retina.pixelRatio;\n    const size = container.canvas.size;\n    const oldSize = {\n      width: size.width,\n      height: size.height\n    };\n    size.width = this.element.offsetWidth * pxRatio;\n    size.height = this.element.offsetHeight * pxRatio;\n    this.element.width = size.width;\n    this.element.height = size.height;\n    if (this.container.started) {\n      this.resizeFactor = {\n        width: size.width / oldSize.width,\n        height: size.height / oldSize.height\n      };\n    }\n  }\n  drawConnectLine(p1, p2) {\n    this.safePaint(ctx => {\n      var _a;\n      const lineStyle = this.lineStyle(p1, p2);\n      if (!lineStyle) {\n        return;\n      }\n      const pos1 = p1.getPosition();\n      const pos2 = p2.getPosition();\n      Utils_1.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n    });\n  }\n  drawGrabLine(particle, lineColor, opacity, mousePos) {\n    const container = this.container;\n    this.safePaint(ctx => {\n      var _a;\n      const beginPos = particle.getPosition();\n      Utils_1.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n    });\n  }\n  drawParticleShadow(particle, mousePos) {\n    this.safePaint(ctx => {\n      Utils_1.drawParticleShadow(this.container, ctx, particle, mousePos);\n    });\n  }\n  drawLinkTriangle(p1, link1, link2) {\n    var _a;\n    const container = this.container;\n    const options = container.actualOptions;\n    const p2 = link1.destination;\n    const p3 = link2.destination;\n    const triangleOptions = p1.options.links.triangles;\n    const opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n    if (opacityTriangle <= 0) {\n      return;\n    }\n    this.safePaint(ctx => {\n      const pos1 = p1.getPosition();\n      const pos2 = p2.getPosition();\n      const pos3 = p3.getPosition();\n      if (Utils_1.getDistance(pos1, pos2) > container.retina.linksDistance || Utils_1.getDistance(pos3, pos2) > container.retina.linksDistance || Utils_1.getDistance(pos3, pos1) > container.retina.linksDistance) {\n        return;\n      }\n      let colorTriangle = Utils_1.colorToRgb(triangleOptions.color);\n      if (!colorTriangle) {\n        const linksOptions = p1.options.links;\n        const linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n        colorTriangle = Utils_1.getLinkColor(p1, p2, linkColor);\n        if (!colorTriangle) {\n          return;\n        }\n      }\n      Utils_1.drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n    });\n  }\n  drawLinkLine(p1, link) {\n    const container = this.container;\n    const options = container.actualOptions;\n    const p2 = link.destination;\n    let opacity = link.opacity;\n    const pos1 = p1.getPosition();\n    const pos2 = p2.getPosition();\n    this.safePaint(ctx => {\n      var _a, _b;\n      let colorLine;\n      const twinkle = p1.options.twinkle.lines;\n      if (twinkle.enable) {\n        const twinkleFreq = twinkle.frequency;\n        const twinkleRgb = Utils_1.colorToRgb(twinkle.color);\n        const twinkling = Math.random() < twinkleFreq;\n        if (twinkling && twinkleRgb !== undefined) {\n          colorLine = twinkleRgb;\n          opacity = twinkle.opacity;\n        }\n      }\n      if (!colorLine) {\n        const linksOptions = p1.options.links;\n        const linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n        colorLine = Utils_1.getLinkColor(p1, p2, linkColor);\n      }\n      if (!colorLine) {\n        return;\n      }\n      const width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n      const maxDistance = (_b = p1.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n      Utils_1.drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n    });\n  }\n  drawParticle(particle, delta) {\n    var _a, _b, _c, _d;\n    if (((_a = particle.image) === null || _a === void 0 ? void 0 : _a.loaded) === false || particle.spawning || particle.destroyed) {\n      return;\n    }\n    const pfColor = particle.getFillColor();\n    const psColor = (_b = particle.getStrokeColor()) !== null && _b !== void 0 ? _b : pfColor;\n    if (!pfColor && !psColor) {\n      return;\n    }\n    let [fColor, sColor] = this.getPluginParticleColors(particle);\n    const pOptions = particle.options;\n    const twinkle = pOptions.twinkle.particles;\n    const twinkling = twinkle.enable && Math.random() < twinkle.frequency;\n    if (!fColor || !sColor) {\n      const twinkleRgb = Utils_1.colorToHsl(twinkle.color);\n      if (!fColor) {\n        fColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : pfColor ? pfColor : undefined;\n      }\n      if (!sColor) {\n        sColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : psColor ? psColor : undefined;\n      }\n    }\n    const options = this.container.actualOptions;\n    const zIndexOptions = particle.options.zIndex;\n    const zOpacityFactor = 1 - zIndexOptions.opacityRate * particle.zIndexFactor;\n    const radius = particle.getRadius();\n    const opacity = twinkling ? twinkle.opacity : (_c = particle.bubble.opacity) !== null && _c !== void 0 ? _c : particle.opacity.value;\n    const strokeOpacity = (_d = particle.stroke.opacity) !== null && _d !== void 0 ? _d : opacity;\n    const zOpacity = opacity * zOpacityFactor;\n    const fillColorValue = fColor ? Utils_1.getStyleFromHsl(fColor, zOpacity) : undefined;\n    if (!fillColorValue && !sColor) {\n      return;\n    }\n    this.safePaint(ctx => {\n      const zSizeFactor = 1 - zIndexOptions.sizeRate * particle.zIndexFactor;\n      const zStrokeOpacity = strokeOpacity * zOpacityFactor;\n      const strokeColorValue = sColor ? Utils_1.getStyleFromHsl(sColor, zStrokeOpacity) : fillColorValue;\n      this.drawParticleLinks(particle);\n      if (radius > 0) {\n        Utils_1.drawParticle(this.container, ctx, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n      }\n    });\n  }\n  drawParticleLinks(particle) {\n    this.safePaint(ctx => {\n      const container = this.container;\n      const particles = container.particles;\n      const pOptions = particle.options;\n      if (particle.links.length > 0) {\n        ctx.save();\n        const p1Links = particle.links.filter(l => {\n          const linkFreq = container.particles.getLinkFrequency(particle, l.destination);\n          return linkFreq <= pOptions.links.frequency;\n        });\n        for (const link of p1Links) {\n          const p2 = link.destination;\n          if (pOptions.links.triangles.enable) {\n            const links = p1Links.map(l => l.destination);\n            const vertices = p2.links.filter(t => {\n              const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n              return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n            });\n            if (vertices.length) {\n              for (const vertex of vertices) {\n                const p3 = vertex.destination;\n                const triangleFreq = particles.getTriangleFrequency(particle, p2, p3);\n                if (triangleFreq > pOptions.links.triangles.frequency) {\n                  continue;\n                }\n                this.drawLinkTriangle(particle, link, vertex);\n              }\n            }\n          }\n          if (link.opacity > 0 && container.retina.linksWidth > 0) {\n            this.drawLinkLine(particle, link);\n          }\n        }\n        ctx.restore();\n      }\n    });\n  }\n  drawPlugin(plugin, delta) {\n    this.safePaint(ctx => {\n      Utils_1.drawPlugin(ctx, plugin, delta);\n    });\n  }\n  drawLight(mousePos) {\n    this.safePaint(ctx => {\n      Utils_1.drawLight(this.container, ctx, mousePos);\n    });\n  }\n  initBackground() {\n    const options = this.container.actualOptions;\n    const background = options.background;\n    const element = this.element;\n    const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n    if (!elementStyle) {\n      return;\n    }\n    if (background.color) {\n      const color = Utils_1.colorToRgb(background.color);\n      elementStyle.backgroundColor = color ? Utils_1.getStyleFromRgb(color, background.opacity) : \"\";\n    } else {\n      elementStyle.backgroundColor = \"\";\n    }\n    elementStyle.backgroundImage = background.image || \"\";\n    elementStyle.backgroundPosition = background.position || \"\";\n    elementStyle.backgroundRepeat = background.repeat || \"\";\n    elementStyle.backgroundSize = background.size || \"\";\n  }\n  initCover() {\n    const options = this.container.actualOptions;\n    const cover = options.backgroundMask.cover;\n    const color = cover.color;\n    const coverRgb = Utils_1.colorToRgb(color);\n    if (coverRgb) {\n      this.coverColor = {\n        r: coverRgb.r,\n        g: coverRgb.g,\n        b: coverRgb.b,\n        a: cover.opacity\n      };\n    }\n  }\n  initTrail() {\n    const options = this.container.actualOptions;\n    const trail = options.particles.move.trail;\n    const fillColor = Utils_1.colorToRgb(trail.fillColor);\n    if (fillColor) {\n      const trail = options.particles.move.trail;\n      this.trailFillColor = {\n        r: fillColor.r,\n        g: fillColor.g,\n        b: fillColor.b,\n        a: 1 / trail.length\n      };\n    }\n  }\n  getPluginParticleColors(particle) {\n    let fColor;\n    let sColor;\n    for (const [, plugin] of this.container.plugins) {\n      if (!fColor && plugin.particleFillColor) {\n        fColor = Utils_1.colorToHsl(plugin.particleFillColor(particle));\n      }\n      if (!sColor && plugin.particleStrokeColor) {\n        sColor = Utils_1.colorToHsl(plugin.particleStrokeColor(particle));\n      }\n      if (fColor && sColor) {\n        break;\n      }\n    }\n    return [fColor, sColor];\n  }\n  initStyle() {\n    const element = this.element,\n      options = this.container.actualOptions;\n    if (!element) {\n      return;\n    }\n    const originalStyle = this.originalStyle;\n    if (options.fullScreen.enable) {\n      this.originalStyle = Utils_1.deepExtend({}, element.style);\n      element.style.position = \"fixed\";\n      element.style.zIndex = options.fullScreen.zIndex.toString(10);\n      element.style.top = \"0\";\n      element.style.left = \"0\";\n      element.style.width = \"100%\";\n      element.style.height = \"100%\";\n    } else if (originalStyle) {\n      element.style.position = originalStyle.position;\n      element.style.zIndex = originalStyle.zIndex;\n      element.style.top = originalStyle.top;\n      element.style.left = originalStyle.left;\n      element.style.width = originalStyle.width;\n      element.style.height = originalStyle.height;\n    }\n  }\n  paintBase(baseColor) {\n    this.safePaint(ctx => {\n      Utils_1.paintBase(ctx, this.size, baseColor);\n    });\n  }\n  lineStyle(p1, p2) {\n    return this.safePaint(ctx => {\n      const options = this.container.actualOptions;\n      const connectOptions = options.interactivity.modes.connect;\n      return Utils_1.gradient(ctx, p1, p2, connectOptions.links.opacity);\n    });\n  }\n  safePaint(cb) {\n    if (!this.context) {\n      return;\n    }\n    return cb(this.context);\n  }\n}\nexports.Canvas = Canvas;","map":{"version":3,"names":["Object","defineProperty","exports","value","Canvas","Utils_1","require","Utils_2","constructor","container","size","height","width","context","generatedCanvas","init","resize","initStyle","initCover","initTrail","initBackground","paint","loadCanvas","canvas","_a","className","Constants","canvasClass","element","remove","originalStyle","deepExtend","style","offsetHeight","offsetWidth","getContext","retina","destroy","safePaint","ctx","clear","options","actualOptions","backgroundMask","enable","cover","coverColor","paintBase","getStyleFromRgb","a","trail","particles","move","length","trailFillColor","windowResize","setResponsive","pixelRatio","setDensity","plugin","plugins","undefined","pxRatio","oldSize","started","resizeFactor","drawConnectLine","p1","p2","lineStyle","pos1","getPosition","pos2","linksWidth","drawGrabLine","particle","lineColor","opacity","mousePos","beginPos","drawParticleShadow","drawLinkTriangle","link1","link2","destination","p3","triangleOptions","links","triangles","opacityTriangle","pos3","getDistance","linksDistance","colorTriangle","colorToRgb","color","linksOptions","linkColor","id","linksColors","get","linksColor","getLinkColor","composite","drawLinkLine","link","_b","colorLine","twinkle","lines","twinkleFreq","frequency","twinkleRgb","twinkling","Math","random","maxDistance","warp","shadow","drawParticle","delta","_c","_d","image","loaded","spawning","destroyed","pfColor","getFillColor","psColor","getStrokeColor","fColor","sColor","getPluginParticleColors","pOptions","colorToHsl","zIndexOptions","zIndex","zOpacityFactor","opacityRate","zIndexFactor","radius","getRadius","bubble","strokeOpacity","stroke","zOpacity","fillColorValue","getStyleFromHsl","zSizeFactor","sizeRate","zStrokeOpacity","strokeColorValue","drawParticleLinks","save","p1Links","filter","l","linkFreq","getLinkFrequency","map","vertices","t","indexOf","vertex","triangleFreq","getTriangleFrequency","restore","drawPlugin","drawLight","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","coverRgb","r","g","b","fillColor","particleFillColor","particleStrokeColor","fullScreen","toString","top","left","baseColor","connectOptions","interactivity","modes","connect","gradient","cb"],"sources":["D:/Documents/defi-staking-app-starter/defi-staking-app-starter/node_modules/tsparticles/Core/Canvas.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Canvas = void 0;\nconst Utils_1 = require(\"../Utils\");\nconst Utils_2 = require(\"../Utils\");\nclass Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    init() {\n        this.resize();\n        this.initStyle();\n        this.initCover();\n        this.initTrail();\n        this.initBackground();\n        this.paint();\n    }\n    loadCanvas(canvas, generatedCanvas) {\n        var _a;\n        if (!canvas.className) {\n            canvas.className = Utils_1.Constants.canvasClass;\n        }\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = Utils_1.deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.safePaint((ctx) => {\n            Utils_2.clear(ctx, this.size);\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.safePaint((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n                Utils_2.clear(ctx, this.size);\n                this.paintBase(Utils_1.getStyleFromRgb(this.coverColor, this.coverColor.a));\n            }\n            else {\n                this.paintBase();\n            }\n        });\n    }\n    clear() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(Utils_1.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.safePaint((ctx) => {\n                Utils_2.clear(ctx, this.size);\n            });\n        }\n    }\n    windowResize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        this.resize();\n        container.actualOptions.setResponsive(this.size.width, container.retina.pixelRatio, container.options);\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        const pxRatio = container.retina.pixelRatio;\n        const size = container.canvas.size;\n        const oldSize = {\n            width: size.width,\n            height: size.height,\n        };\n        size.width = this.element.offsetWidth * pxRatio;\n        size.height = this.element.offsetHeight * pxRatio;\n        this.element.width = size.width;\n        this.element.height = size.height;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    drawConnectLine(p1, p2) {\n        this.safePaint((ctx) => {\n            var _a;\n            const lineStyle = this.lineStyle(p1, p2);\n            if (!lineStyle) {\n                return;\n            }\n            const pos1 = p1.getPosition();\n            const pos2 = p2.getPosition();\n            Utils_1.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n        });\n    }\n    drawGrabLine(particle, lineColor, opacity, mousePos) {\n        const container = this.container;\n        this.safePaint((ctx) => {\n            var _a;\n            const beginPos = particle.getPosition();\n            Utils_1.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n        });\n    }\n    drawParticleShadow(particle, mousePos) {\n        this.safePaint((ctx) => {\n            Utils_1.drawParticleShadow(this.container, ctx, particle, mousePos);\n        });\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link1.destination;\n        const p3 = link2.destination;\n        const triangleOptions = p1.options.links.triangles;\n        const opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        this.safePaint((ctx) => {\n            const pos1 = p1.getPosition();\n            const pos2 = p2.getPosition();\n            const pos3 = p3.getPosition();\n            if (Utils_1.getDistance(pos1, pos2) > container.retina.linksDistance ||\n                Utils_1.getDistance(pos3, pos2) > container.retina.linksDistance ||\n                Utils_1.getDistance(pos3, pos1) > container.retina.linksDistance) {\n                return;\n            }\n            let colorTriangle = Utils_1.colorToRgb(triangleOptions.color);\n            if (!colorTriangle) {\n                const linksOptions = p1.options.links;\n                const linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorTriangle = Utils_1.getLinkColor(p1, p2, linkColor);\n                if (!colorTriangle) {\n                    return;\n                }\n            }\n            Utils_1.drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n        });\n    }\n    drawLinkLine(p1, link) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link.destination;\n        let opacity = link.opacity;\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        this.safePaint((ctx) => {\n            var _a, _b;\n            let colorLine;\n            const twinkle = p1.options.twinkle.lines;\n            if (twinkle.enable) {\n                const twinkleFreq = twinkle.frequency;\n                const twinkleRgb = Utils_1.colorToRgb(twinkle.color);\n                const twinkling = Math.random() < twinkleFreq;\n                if (twinkling && twinkleRgb !== undefined) {\n                    colorLine = twinkleRgb;\n                    opacity = twinkle.opacity;\n                }\n            }\n            if (!colorLine) {\n                const linksOptions = p1.options.links;\n                const linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorLine = Utils_1.getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorLine) {\n                return;\n            }\n            const width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n            const maxDistance = (_b = p1.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n            Utils_1.drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n        });\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d;\n        if (((_a = particle.image) === null || _a === void 0 ? void 0 : _a.loaded) === false || particle.spawning || particle.destroyed) {\n            return;\n        }\n        const pfColor = particle.getFillColor();\n        const psColor = (_b = particle.getStrokeColor()) !== null && _b !== void 0 ? _b : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        let [fColor, sColor] = this.getPluginParticleColors(particle);\n        const pOptions = particle.options;\n        const twinkle = pOptions.twinkle.particles;\n        const twinkling = twinkle.enable && Math.random() < twinkle.frequency;\n        if (!fColor || !sColor) {\n            const twinkleRgb = Utils_1.colorToHsl(twinkle.color);\n            if (!fColor) {\n                fColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : pfColor ? pfColor : undefined;\n            }\n            if (!sColor) {\n                sColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : psColor ? psColor : undefined;\n            }\n        }\n        const options = this.container.actualOptions;\n        const zIndexOptions = particle.options.zIndex;\n        const zOpacityFactor = 1 - zIndexOptions.opacityRate * particle.zIndexFactor;\n        const radius = particle.getRadius();\n        const opacity = twinkling ? twinkle.opacity : (_c = particle.bubble.opacity) !== null && _c !== void 0 ? _c : particle.opacity.value;\n        const strokeOpacity = (_d = particle.stroke.opacity) !== null && _d !== void 0 ? _d : opacity;\n        const zOpacity = opacity * zOpacityFactor;\n        const fillColorValue = fColor ? Utils_1.getStyleFromHsl(fColor, zOpacity) : undefined;\n        if (!fillColorValue && !sColor) {\n            return;\n        }\n        this.safePaint((ctx) => {\n            const zSizeFactor = 1 - zIndexOptions.sizeRate * particle.zIndexFactor;\n            const zStrokeOpacity = strokeOpacity * zOpacityFactor;\n            const strokeColorValue = sColor ? Utils_1.getStyleFromHsl(sColor, zStrokeOpacity) : fillColorValue;\n            this.drawParticleLinks(particle);\n            if (radius > 0) {\n                Utils_1.drawParticle(this.container, ctx, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n            }\n        });\n    }\n    drawParticleLinks(particle) {\n        this.safePaint((ctx) => {\n            const container = this.container;\n            const particles = container.particles;\n            const pOptions = particle.options;\n            if (particle.links.length > 0) {\n                ctx.save();\n                const p1Links = particle.links.filter((l) => {\n                    const linkFreq = container.particles.getLinkFrequency(particle, l.destination);\n                    return linkFreq <= pOptions.links.frequency;\n                });\n                for (const link of p1Links) {\n                    const p2 = link.destination;\n                    if (pOptions.links.triangles.enable) {\n                        const links = p1Links.map((l) => l.destination);\n                        const vertices = p2.links.filter((t) => {\n                            const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n                            return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n                        });\n                        if (vertices.length) {\n                            for (const vertex of vertices) {\n                                const p3 = vertex.destination;\n                                const triangleFreq = particles.getTriangleFrequency(particle, p2, p3);\n                                if (triangleFreq > pOptions.links.triangles.frequency) {\n                                    continue;\n                                }\n                                this.drawLinkTriangle(particle, link, vertex);\n                            }\n                        }\n                    }\n                    if (link.opacity > 0 && container.retina.linksWidth > 0) {\n                        this.drawLinkLine(particle, link);\n                    }\n                }\n                ctx.restore();\n            }\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.safePaint((ctx) => {\n            Utils_1.drawPlugin(ctx, plugin, delta);\n        });\n    }\n    drawLight(mousePos) {\n        this.safePaint((ctx) => {\n            Utils_1.drawLight(this.container, ctx, mousePos);\n        });\n    }\n    initBackground() {\n        const options = this.container.actualOptions;\n        const background = options.background;\n        const element = this.element;\n        const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = Utils_1.colorToRgb(background.color);\n            elementStyle.backgroundColor = color ? Utils_1.getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initCover() {\n        const options = this.container.actualOptions;\n        const cover = options.backgroundMask.cover;\n        const color = cover.color;\n        const coverRgb = Utils_1.colorToRgb(color);\n        if (coverRgb) {\n            this.coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n        }\n    }\n    initTrail() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        const fillColor = Utils_1.colorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this.trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    getPluginParticleColors(particle) {\n        let fColor;\n        let sColor;\n        for (const [, plugin] of this.container.plugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = Utils_1.colorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = Utils_1.colorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        const originalStyle = this.originalStyle;\n        if (options.fullScreen.enable) {\n            this.originalStyle = Utils_1.deepExtend({}, element.style);\n            element.style.position = \"fixed\";\n            element.style.zIndex = options.fullScreen.zIndex.toString(10);\n            element.style.top = \"0\";\n            element.style.left = \"0\";\n            element.style.width = \"100%\";\n            element.style.height = \"100%\";\n        }\n        else if (originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n    }\n    paintBase(baseColor) {\n        this.safePaint((ctx) => {\n            Utils_1.paintBase(ctx, this.size, baseColor);\n        });\n    }\n    lineStyle(p1, p2) {\n        return this.safePaint((ctx) => {\n            const options = this.container.actualOptions;\n            const connectOptions = options.interactivity.modes.connect;\n            return Utils_1.gradient(ctx, p1, p2, connectOptions.links.opacity);\n        });\n    }\n    safePaint(cb) {\n        if (!this.context) {\n            return;\n        }\n        return cb(this.context);\n    }\n}\nexports.Canvas = Canvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}