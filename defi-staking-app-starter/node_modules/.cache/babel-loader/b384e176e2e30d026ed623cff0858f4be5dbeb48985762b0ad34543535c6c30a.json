{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar chains_1 = require(\"./chains\");\nvar hardforks_1 = require(\"./hardforks\");\n/**\n * Common class to access chain and hardfork parameters\n */\nvar Common = /** @class */function () {\n  /**\n   * @constructor\n   * @param chain String ('mainnet') or Number (1) chain\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n  function Common(chain, hardfork, supportedHardforks) {\n    this._chainParams = this.setChain(chain);\n    this._hardfork = null;\n    this._supportedHardforks = supportedHardforks === undefined ? [] : supportedHardforks;\n    if (hardfork) {\n      this.setHardfork(hardfork);\n    }\n  }\n  /**\n   * Creates a Common object for a custom chain, based on a standard one. It uses all the [[Chain]]\n   * params from [[baseChain]] except the ones overridden in [[customChainParams]].\n   *\n   * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n   * chain params on.\n   * @param customChainParams The custom parameters of the chain.\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n  Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n    var standardChainParams = Common._getChainParams(baseChain);\n    return new Common(__assign(__assign({}, standardChainParams), customChainParams), hardfork, supportedHardforks);\n  };\n  Common._getChainParams = function (chain) {\n    if (typeof chain === 'number') {\n      if (chains_1.chains['names'][chain]) {\n        return chains_1.chains[chains_1.chains['names'][chain]];\n      }\n      throw new Error(\"Chain with ID \" + chain + \" not supported\");\n    }\n    if (chains_1.chains[chain]) {\n      return chains_1.chains[chain];\n    }\n    throw new Error(\"Chain with name \" + chain + \" not supported\");\n  };\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain\n   *     representation. Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n  Common.prototype.setChain = function (chain) {\n    if (typeof chain === 'number' || typeof chain === 'string') {\n      this._chainParams = Common._getChainParams(chain);\n    } else if (typeof chain === 'object') {\n      var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n      for (var _i = 0, required_1 = required; _i < required_1.length; _i++) {\n        var param = required_1[_i];\n        if (chain[param] === undefined) {\n          throw new Error(\"Missing required chain parameter: \" + param);\n        }\n      }\n      this._chainParams = chain;\n    } else {\n      throw new Error('Wrong input format');\n    }\n    return this._chainParams;\n  };\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier ('byzantium')\n   */\n  Common.prototype.setHardfork = function (hardfork) {\n    if (!this._isSupportedHardfork(hardfork)) {\n      throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n    }\n    var changed = false;\n    for (var _i = 0, hardforkChanges_1 = hardforks_1.hardforks; _i < hardforkChanges_1.length; _i++) {\n      var hfChanges = hardforkChanges_1[_i];\n      if (hfChanges[0] === hardfork) {\n        this._hardfork = hardfork;\n        changed = true;\n      }\n    }\n    if (!changed) {\n      throw new Error(\"Hardfork with name \" + hardfork + \" not supported\");\n    }\n  };\n  /**\n   * Internal helper function to choose between hardfork set and hardfork provided as param\n   * @param hardfork Hardfork given to function as a parameter\n   * @returns Hardfork chosen to be used\n   */\n  Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n    onlySupported = onlySupported === undefined ? true : onlySupported;\n    if (!hardfork) {\n      if (!this._hardfork) {\n        throw new Error('Method called with neither a hardfork set nor provided by param');\n      } else {\n        hardfork = this._hardfork;\n      }\n    } else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n      throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n    }\n    return hardfork;\n  };\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params\n   */\n  Common.prototype._getHardfork = function (hardfork) {\n    var hfs = this.hardforks();\n    for (var _i = 0, hfs_1 = hfs; _i < hfs_1.length; _i++) {\n      var hf = hfs_1[_i];\n      if (hf['name'] === hardfork) return hf;\n    }\n    throw new Error(\"Hardfork \" + hardfork + \" not defined for chain \" + this.chainName());\n  };\n  /**\n   * Internal helper function to check if a hardfork is set to be supported by the library\n   * @param hardfork Hardfork name\n   * @returns True if hardfork is supported\n   */\n  Common.prototype._isSupportedHardfork = function (hardfork) {\n    if (this._supportedHardforks.length > 0) {\n      for (var _i = 0, _a = this._supportedHardforks; _i < _a.length; _i++) {\n        var supportedHf = _a[_i];\n        if (hardfork === supportedHf) return true;\n      }\n    } else {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow', 'casper', 'sharding')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name, optional if hardfork set\n   */\n  Common.prototype.param = function (topic, name, hardfork) {\n    hardfork = this._chooseHardfork(hardfork);\n    var value;\n    for (var _i = 0, hardforkChanges_2 = hardforks_1.hardforks; _i < hardforkChanges_2.length; _i++) {\n      var hfChanges = hardforkChanges_2[_i];\n      if (!hfChanges[1][topic]) {\n        throw new Error(\"Topic \" + topic + \" not defined\");\n      }\n      if (hfChanges[1][topic][name] !== undefined) {\n        value = hfChanges[1][topic][name].v;\n      }\n      if (hfChanges[0] === hardfork) break;\n    }\n    if (value === undefined) {\n      throw new Error(topic + \" value for \" + name + \" not found\");\n    }\n    return value;\n  };\n  /**\n   * Returns a parameter for the hardfork active on block number\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   */\n  Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n    var activeHfs = this.activeHardforks(blockNumber);\n    var hardfork = activeHfs[activeHfs.length - 1]['name'];\n    return this.param(topic, name, hardfork);\n  };\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n  Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n    opts = opts !== undefined ? opts : {};\n    var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n    hardfork = this._chooseHardfork(hardfork, onlySupported);\n    var hfBlock = this.hardforkBlock(hardfork);\n    if (hfBlock !== null && blockNumber >= hfBlock) return true;\n    return false;\n  };\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n  Common.prototype.activeOnBlock = function (blockNumber, opts) {\n    return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n  };\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n  Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n    opts = opts !== undefined ? opts : {};\n    var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n    hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n    var hardforks;\n    if (onlyActive) {\n      hardforks = this.activeHardforks(null, opts);\n    } else {\n      hardforks = this.hardforks();\n    }\n    var posHf1 = -1,\n      posHf2 = -1;\n    var index = 0;\n    for (var _i = 0, hardforks_2 = hardforks; _i < hardforks_2.length; _i++) {\n      var hf = hardforks_2[_i];\n      if (hf['name'] === hardfork1) posHf1 = index;\n      if (hf['name'] === hardfork2) posHf2 = index;\n      index += 1;\n    }\n    return posHf1 >= posHf2;\n  };\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @param opts Hardfork options\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n  Common.prototype.gteHardfork = function (hardfork, opts) {\n    return this.hardforkGteHardfork(null, hardfork, opts);\n  };\n  /**\n   * Checks if given or set hardfork is active on the chain\n   * @param hardfork Hardfork name, optional if HF set\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if hardfork is active on the chain\n   */\n  Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n    opts = opts !== undefined ? opts : {};\n    var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n    hardfork = this._chooseHardfork(hardfork, onlySupported);\n    for (var _i = 0, _a = this.hardforks(); _i < _a.length; _i++) {\n      var hf = _a[_i];\n      if (hf['name'] === hardfork && hf['block'] !== null) return true;\n    }\n    return false;\n  };\n  /**\n   * Returns the active hardfork switches for the current chain\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Array with hardfork arrays\n   */\n  Common.prototype.activeHardforks = function (blockNumber, opts) {\n    opts = opts !== undefined ? opts : {};\n    var activeHardforks = [];\n    var hfs = this.hardforks();\n    for (var _i = 0, hfs_2 = hfs; _i < hfs_2.length; _i++) {\n      var hf = hfs_2[_i];\n      if (hf['block'] === null) continue;\n      if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block']) break;\n      if (opts.onlySupported && !this._isSupportedHardfork(hf['name'])) continue;\n      activeHardforks.push(hf);\n    }\n    return activeHardforks;\n  };\n  /**\n   * Returns the latest active hardfork name for chain or block or throws if unavailable\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Hardfork name\n   */\n  Common.prototype.activeHardfork = function (blockNumber, opts) {\n    opts = opts !== undefined ? opts : {};\n    var activeHardforks = this.activeHardforks(blockNumber, opts);\n    if (activeHardforks.length > 0) {\n      return activeHardforks[activeHardforks.length - 1]['name'];\n    } else {\n      throw new Error(\"No (supported) active hardfork found\");\n    }\n  };\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number\n   */\n  Common.prototype.hardforkBlock = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n    return this._getHardfork(hardfork)['block'];\n  };\n  /**\n   * True if block number provided is the hardfork (given or set) change block of the current chain\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n  Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n    if (this.hardforkBlock(hardfork) === blockNumber) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * Provide the consensus type for the hardfork set or provided as param\n   * @param hardfork Hardfork name, optional if hardfork set\n   * @returns Consensus type (e.g. 'pow', 'poa')\n   */\n  Common.prototype.consensus = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork);\n    return this._getHardfork(hardfork)['consensus'];\n  };\n  /**\n   * Provide the finality type for the hardfork set or provided as param\n   * @param {String} hardfork Hardfork name, optional if hardfork set\n   * @returns {String} Finality type (e.g. 'pos', null of no finality)\n   */\n  Common.prototype.finality = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork);\n    return this._getHardfork(hardfork)['finality'];\n  };\n  /**\n   * Returns the Genesis parameters of current chain\n   * @returns Genesis dictionary\n   */\n  Common.prototype.genesis = function () {\n    return this._chainParams['genesis'];\n  };\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n  Common.prototype.hardforks = function () {\n    return this._chainParams['hardforks'];\n  };\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n  Common.prototype.bootstrapNodes = function () {\n    return this._chainParams['bootstrapNodes'];\n  };\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n  Common.prototype.hardfork = function () {\n    return this._hardfork;\n  };\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n  Common.prototype.chainId = function () {\n    return this._chainParams['chainId'];\n  };\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n  Common.prototype.chainName = function () {\n    return chains_1.chains['names'][this.chainId()] || this._chainParams['name'];\n  };\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n  Common.prototype.networkId = function () {\n    return this._chainParams['networkId'];\n  };\n  return Common;\n}();\nexports.default = Common;","map":{"version":3,"names":["chains_1","require","hardforks_1","Common","chain","hardfork","supportedHardforks","_chainParams","setChain","_hardfork","_supportedHardforks","undefined","setHardfork","forCustomChain","baseChain","customChainParams","standardChainParams","_getChainParams","__assign","chains","Error","prototype","required","_i","required_1","length","param","_isSupportedHardfork","changed","hardforkChanges_1","hardforks","hfChanges","_chooseHardfork","onlySupported","_getHardfork","hfs","hfs_1","hf","chainName","_a","supportedHf","topic","name","value","hardforkChanges_2","v","paramByBlock","blockNumber","activeHfs","activeHardforks","hardforkIsActiveOnBlock","opts","hfBlock","hardforkBlock","activeOnBlock","hardforkGteHardfork","hardfork1","hardfork2","onlyActive","posHf1","posHf2","index","hardforks_2","gteHardfork","hardforkIsActiveOnChain","hfs_2","push","activeHardfork","isHardforkBlock","consensus","finality","genesis","bootstrapNodes","chainId","networkId"],"sources":["../src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}