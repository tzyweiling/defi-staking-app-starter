{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file accounts.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n'use strict';\n\nvar _ = require('underscore');\nvar core = require('web3-core');\nvar Method = require('web3-core-method');\nvar Account = require('eth-lib/lib/account');\nvar Hash = require('eth-lib/lib/hash');\nvar RLP = require('eth-lib/lib/rlp'); // jshint ignore:line\nvar Bytes = require('eth-lib/lib/bytes'); // jshint ignore:line\nvar cryp = typeof global === 'undefined' ? require('crypto-browserify') : require('crypto');\nvar scrypt = require('scrypt-js');\nvar uuid = require('uuid');\nvar utils = require('web3-utils');\nvar helpers = require('web3-core-helpers');\nvar Transaction = require('ethereumjs-tx').Transaction;\nvar Common = require('ethereumjs-common').default;\nvar isNot = function (value) {\n  return _.isUndefined(value) || _.isNull(value);\n};\nvar Accounts = function Accounts() {\n  var _this = this;\n\n  // sets _requestmanager\n  core.packageInit(this, arguments);\n\n  // remove unecessary core functions\n  delete this.BatchRequest;\n  delete this.extend;\n  var _ethereumCall = [new Method({\n    name: 'getNetworkId',\n    call: 'net_version',\n    params: 0,\n    outputFormatter: parseInt\n  }), new Method({\n    name: 'getChainId',\n    call: 'eth_chainId',\n    params: 0,\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'getGasPrice',\n    call: 'eth_gasPrice',\n    params: 0\n  }), new Method({\n    name: 'getTransactionCount',\n    call: 'eth_getTransactionCount',\n    params: 2,\n    inputFormatter: [function (address) {\n      if (utils.isAddress(address)) {\n        return address;\n      } else {\n        throw new Error('Address ' + address + ' is not a valid address to get the \"transactionCount\".');\n      }\n    }, function () {\n      return 'latest';\n    }]\n  })];\n  // attach methods to this._ethereumCall\n  this._ethereumCall = {};\n  _.each(_ethereumCall, function (method) {\n    method.attachToObject(_this._ethereumCall);\n    method.setRequestManager(_this._requestManager);\n  });\n  this.wallet = new Wallet(this);\n};\nAccounts.prototype._addAccountFunctions = function (account) {\n  var _this = this;\n\n  // add sign functions\n  account.signTransaction = function signTransaction(tx, callback) {\n    return _this.signTransaction(tx, account.privateKey, callback);\n  };\n  account.sign = function sign(data) {\n    return _this.sign(data, account.privateKey);\n  };\n  account.encrypt = function encrypt(password, options) {\n    return _this.encrypt(account.privateKey, password, options);\n  };\n  return account;\n};\nAccounts.prototype.create = function create(entropy) {\n  return this._addAccountFunctions(Account.create(entropy || utils.randomHex(32)));\n};\nAccounts.prototype.privateKeyToAccount = function privateKeyToAccount(privateKey, ignoreLength) {\n  if (!privateKey.startsWith('0x')) {\n    privateKey = '0x' + privateKey;\n  }\n\n  // 64 hex characters + hex-prefix\n  if (!ignoreLength && privateKey.length !== 66) {\n    throw new Error(\"Private key must be 32 bytes long\");\n  }\n  return this._addAccountFunctions(Account.fromPrivate(privateKey));\n};\nAccounts.prototype.signTransaction = function signTransaction(tx, privateKey, callback) {\n  var _this = this,\n    error = false,\n    transactionOptions = {},\n    hasTxSigningOptions = !!(tx && (tx.chain && tx.hardfork || tx.common));\n  callback = callback || function () {};\n  if (!tx) {\n    error = new Error('No transaction object given!');\n    callback(error);\n    return Promise.reject(error);\n  }\n  function signed(tx) {\n    if (tx.common && tx.chain && tx.hardfork) {\n      error = new Error('Please provide the ethereumjs-common object or the chain and hardfork property but not all together.');\n    }\n    if (tx.chain && !tx.hardfork || tx.hardfork && !tx.chain) {\n      error = new Error('When specifying chain and hardfork, both values must be defined. ' + 'Received \"chain\": ' + tx.chain + ', \"hardfork\": ' + tx.hardfork);\n    }\n    if (!tx.gas && !tx.gasLimit) {\n      error = new Error('\"gas\" is missing');\n    }\n    if (tx.nonce < 0 || tx.gas < 0 || tx.gasPrice < 0 || tx.chainId < 0) {\n      error = new Error('Gas, gasPrice, nonce or chainId is lower than 0');\n    }\n    if (error) {\n      callback(error);\n      return Promise.reject(error);\n    }\n    try {\n      var transaction = helpers.formatters.inputCallFormatter(_.clone(tx));\n      transaction.to = transaction.to || '0x';\n      transaction.data = transaction.data || '0x';\n      transaction.value = transaction.value || '0x';\n      transaction.chainId = utils.numberToHex(transaction.chainId);\n\n      // Because tx has no ethereumjs-tx signing options we use fetched vals.\n      if (!hasTxSigningOptions) {\n        transactionOptions.common = Common.forCustomChain('mainnet', {\n          name: 'custom-network',\n          networkId: transaction.networkId,\n          chainId: transaction.chainId\n        }, 'petersburg');\n        delete transaction.networkId;\n      } else {\n        if (transaction.common) {\n          transactionOptions.common = Common.forCustomChain(transaction.common.baseChain || 'mainnet', {\n            name: transaction.common.customChain.name || 'custom-network',\n            networkId: transaction.common.customChain.networkId,\n            chainId: transaction.common.customChain.chainId\n          }, transaction.common.hardfork || 'petersburg');\n          delete transaction.common;\n        }\n        if (transaction.chain) {\n          transactionOptions.chain = transaction.chain;\n          delete transaction.chain;\n        }\n        if (transaction.hardfork) {\n          transactionOptions.hardfork = transaction.hardfork;\n          delete transaction.hardfork;\n        }\n      }\n      if (privateKey.startsWith('0x')) {\n        privateKey = privateKey.substring(2);\n      }\n      var ethTx = new Transaction(transaction, transactionOptions);\n      ethTx.sign(Buffer.from(privateKey, 'hex'));\n      var validationResult = ethTx.validate(true);\n      if (validationResult !== '') {\n        throw new Error('Signer Error: ' + validationResult);\n      }\n      var rlpEncoded = ethTx.serialize().toString('hex');\n      var rawTransaction = '0x' + rlpEncoded;\n      var transactionHash = utils.keccak256(rawTransaction);\n      var result = {\n        messageHash: '0x' + Buffer.from(ethTx.hash(false)).toString('hex'),\n        v: '0x' + Buffer.from(ethTx.v).toString('hex'),\n        r: '0x' + Buffer.from(ethTx.r).toString('hex'),\n        s: '0x' + Buffer.from(ethTx.s).toString('hex'),\n        rawTransaction: rawTransaction,\n        transactionHash: transactionHash\n      };\n      callback(null, result);\n      return result;\n    } catch (e) {\n      callback(e);\n      return Promise.reject(e);\n    }\n  }\n\n  // Resolve immediately if nonce, chainId, price and signing options are provided\n  if (tx.nonce !== undefined && tx.chainId !== undefined && tx.gasPrice !== undefined && hasTxSigningOptions) {\n    return Promise.resolve(signed(tx));\n  }\n\n  // Otherwise, get the missing info from the Ethereum Node\n  return Promise.all([isNot(tx.chainId) ? _this._ethereumCall.getChainId() : tx.chainId, isNot(tx.gasPrice) ? _this._ethereumCall.getGasPrice() : tx.gasPrice, isNot(tx.nonce) ? _this._ethereumCall.getTransactionCount(_this.privateKeyToAccount(privateKey).address) : tx.nonce, isNot(hasTxSigningOptions) ? _this._ethereumCall.getNetworkId() : 1]).then(function (args) {\n    if (isNot(args[0]) || isNot(args[1]) || isNot(args[2]) || isNot(args[3])) {\n      throw new Error('One of the values \"chainId\", \"networkId\", \"gasPrice\", or \"nonce\" couldn\\'t be fetched: ' + JSON.stringify(args));\n    }\n    return signed(_.extend(tx, {\n      chainId: args[0],\n      gasPrice: args[1],\n      nonce: args[2],\n      networkId: args[3]\n    }));\n  });\n};\n\n/* jshint ignore:start */\nAccounts.prototype.recoverTransaction = function recoverTransaction(rawTx) {\n  var values = RLP.decode(rawTx);\n  var signature = Account.encodeSignature(values.slice(6, 9));\n  var recovery = Bytes.toNumber(values[6]);\n  var extraData = recovery < 35 ? [] : [Bytes.fromNumber(recovery - 35 >> 1), '0x', '0x'];\n  var signingData = values.slice(0, 6).concat(extraData);\n  var signingDataHex = RLP.encode(signingData);\n  return Account.recover(Hash.keccak256(signingDataHex), signature);\n};\n/* jshint ignore:end */\n\nAccounts.prototype.hashMessage = function hashMessage(data) {\n  var messageHex = utils.isHexStrict(data) ? data : utils.utf8ToHex(data);\n  var messageBytes = utils.hexToBytes(messageHex);\n  var messageBuffer = Buffer.from(messageBytes);\n  var preamble = '\\x19Ethereum Signed Message:\\n' + messageBytes.length;\n  var preambleBuffer = Buffer.from(preamble);\n  var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);\n  return Hash.keccak256s(ethMessage);\n};\nAccounts.prototype.sign = function sign(data, privateKey) {\n  if (!privateKey.startsWith('0x')) {\n    privateKey = '0x' + privateKey;\n  }\n\n  // 64 hex characters + hex-prefix\n  if (privateKey.length !== 66) {\n    throw new Error(\"Private key must be 32 bytes long\");\n  }\n  var hash = this.hashMessage(data);\n  var signature = Account.sign(hash, privateKey);\n  var vrs = Account.decodeSignature(signature);\n  return {\n    message: data,\n    messageHash: hash,\n    v: vrs[0],\n    r: vrs[1],\n    s: vrs[2],\n    signature: signature\n  };\n};\nAccounts.prototype.recover = function recover(message, signature, preFixed) {\n  var args = [].slice.apply(arguments);\n  if (_.isObject(message)) {\n    return this.recover(message.messageHash, Account.encodeSignature([message.v, message.r, message.s]), true);\n  }\n  if (!preFixed) {\n    message = this.hashMessage(message);\n  }\n  if (args.length >= 4) {\n    preFixed = args.slice(-1)[0];\n    preFixed = _.isBoolean(preFixed) ? !!preFixed : false;\n    return this.recover(message, Account.encodeSignature(args.slice(1, 4)), preFixed); // v, r, s\n  }\n  return Account.recover(message, signature);\n};\n\n// Taken from https://github.com/ethereumjs/ethereumjs-wallet\nAccounts.prototype.decrypt = function (v3Keystore, password, nonStrict) {\n  /* jshint maxcomplexity: 10 */\n\n  if (!_.isString(password)) {\n    throw new Error('No password given.');\n  }\n  var json = _.isObject(v3Keystore) ? v3Keystore : JSON.parse(nonStrict ? v3Keystore.toLowerCase() : v3Keystore);\n  if (json.version !== 3) {\n    throw new Error('Not a valid V3 wallet');\n  }\n  var derivedKey;\n  var kdfparams;\n  if (json.crypto.kdf === 'scrypt') {\n    kdfparams = json.crypto.kdfparams;\n\n    // FIXME: support progress reporting callback\n    derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else if (json.crypto.kdf === 'pbkdf2') {\n    kdfparams = json.crypto.kdfparams;\n    if (kdfparams.prf !== 'hmac-sha256') {\n      throw new Error('Unsupported parameters to PBKDF2');\n    }\n    derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n  } else {\n    throw new Error('Unsupported key derivation scheme');\n  }\n  var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n  var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n  if (mac !== json.crypto.mac) {\n    throw new Error('Key derivation failed - possibly wrong password');\n  }\n  var decipher = cryp.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n  var seed = '0x' + Buffer.from([...decipher.update(ciphertext), ...decipher.final()]).toString('hex');\n  return this.privateKeyToAccount(seed, true);\n};\nAccounts.prototype.encrypt = function (privateKey, password, options) {\n  /* jshint maxcomplexity: 20 */\n  var account = this.privateKeyToAccount(privateKey, true);\n  options = options || {};\n  var salt = options.salt || cryp.randomBytes(32);\n  var iv = options.iv || cryp.randomBytes(16);\n  var derivedKey;\n  var kdf = options.kdf || 'scrypt';\n  var kdfparams = {\n    dklen: options.dklen || 32,\n    salt: salt.toString('hex')\n  };\n  if (kdf === 'pbkdf2') {\n    kdfparams.c = options.c || 262144;\n    kdfparams.prf = 'hmac-sha256';\n    derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n  } else if (kdf === 'scrypt') {\n    // FIXME: support progress reporting callback\n    kdfparams.n = options.n || 8192; // 2048 4096 8192 16384\n    kdfparams.r = options.r || 8;\n    kdfparams.p = options.p || 1;\n    derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else {\n    throw new Error('Unsupported kdf');\n  }\n  var cipher = cryp.createCipheriv(options.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n  if (!cipher) {\n    throw new Error('Unsupported cipher');\n  }\n  var ciphertext = Buffer.from([...cipher.update(Buffer.from(account.privateKey.replace('0x', ''), 'hex')), ...cipher.final()]);\n  var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n  return {\n    version: 3,\n    id: uuid.v4({\n      random: options.uuid || cryp.randomBytes(16)\n    }),\n    address: account.address.toLowerCase().replace('0x', ''),\n    crypto: {\n      ciphertext: ciphertext.toString('hex'),\n      cipherparams: {\n        iv: iv.toString('hex')\n      },\n      cipher: options.cipher || 'aes-128-ctr',\n      kdf: kdf,\n      kdfparams: kdfparams,\n      mac: mac.toString('hex')\n    }\n  };\n};\n\n// Note: this is trying to follow closely the specs on\n// http://web3js.readthedocs.io/en/1.0/web3-eth-accounts.html\n\nfunction Wallet(accounts) {\n  this._accounts = accounts;\n  this.length = 0;\n  this.defaultKeyName = 'web3js_wallet';\n}\nWallet.prototype._findSafeIndex = function (pointer) {\n  pointer = pointer || 0;\n  if (_.has(this, pointer)) {\n    return this._findSafeIndex(pointer + 1);\n  } else {\n    return pointer;\n  }\n};\nWallet.prototype._currentIndexes = function () {\n  var keys = Object.keys(this);\n  var indexes = keys.map(function (key) {\n    return parseInt(key);\n  }).filter(function (n) {\n    return n < 9e20;\n  });\n  return indexes;\n};\nWallet.prototype.create = function (numberOfAccounts, entropy) {\n  for (var i = 0; i < numberOfAccounts; ++i) {\n    this.add(this._accounts.create(entropy).privateKey);\n  }\n  return this;\n};\nWallet.prototype.add = function (account) {\n  if (_.isString(account)) {\n    account = this._accounts.privateKeyToAccount(account);\n  }\n  if (!this[account.address]) {\n    account = this._accounts.privateKeyToAccount(account.privateKey);\n    account.index = this._findSafeIndex();\n    this[account.index] = account;\n    this[account.address] = account;\n    this[account.address.toLowerCase()] = account;\n    this.length++;\n    return account;\n  } else {\n    return this[account.address];\n  }\n};\nWallet.prototype.remove = function (addressOrIndex) {\n  var account = this[addressOrIndex];\n  if (account && account.address) {\n    // address\n    this[account.address].privateKey = null;\n    delete this[account.address];\n    // address lowercase\n    this[account.address.toLowerCase()].privateKey = null;\n    delete this[account.address.toLowerCase()];\n    // index\n    this[account.index].privateKey = null;\n    delete this[account.index];\n    this.length--;\n    return true;\n  } else {\n    return false;\n  }\n};\nWallet.prototype.clear = function () {\n  var _this = this;\n  var indexes = this._currentIndexes();\n  indexes.forEach(function (index) {\n    _this.remove(index);\n  });\n  return this;\n};\nWallet.prototype.encrypt = function (password, options) {\n  var _this = this;\n  var indexes = this._currentIndexes();\n  var accounts = indexes.map(function (index) {\n    return _this[index].encrypt(password, options);\n  });\n  return accounts;\n};\nWallet.prototype.decrypt = function (encryptedWallet, password) {\n  var _this = this;\n  encryptedWallet.forEach(function (keystore) {\n    var account = _this._accounts.decrypt(keystore, password);\n    if (account) {\n      _this.add(account);\n    } else {\n      throw new Error('Couldn\\'t decrypt accounts. Password wrong?');\n    }\n  });\n  return this;\n};\nWallet.prototype.save = function (password, keyName) {\n  localStorage.setItem(keyName || this.defaultKeyName, JSON.stringify(this.encrypt(password)));\n  return true;\n};\nWallet.prototype.load = function (password, keyName) {\n  var keystore = localStorage.getItem(keyName || this.defaultKeyName);\n  if (keystore) {\n    try {\n      keystore = JSON.parse(keystore);\n    } catch (e) {}\n  }\n  return this.decrypt(keystore || [], password);\n};\nif (!storageAvailable('localStorage')) {\n  delete Wallet.prototype.save;\n  delete Wallet.prototype.load;\n}\n\n/**\n * Checks whether a storage type is available or not\n * For more info on how this works, please refer to MDN documentation\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\n *\n * @method storageAvailable\n * @param {String} type the type of storage ('localStorage', 'sessionStorage')\n * @returns {Boolean} a boolean indicating whether the specified storage is available or not\n */\nfunction storageAvailable(type) {\n  var storage;\n  try {\n    storage = window[type];\n    var x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && (\n    // everything except Firefox\n    e.code === 22 ||\n    // Firefox\n    e.code === 1014 ||\n    // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === 'QuotaExceededError' ||\n    // Firefox\n    e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n    // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\nmodule.exports = Accounts;","map":{"version":3,"names":["_","require","core","Method","Account","Hash","RLP","Bytes","cryp","global","scrypt","uuid","utils","helpers","Transaction","Common","default","isNot","value","isUndefined","isNull","Accounts","_this","packageInit","arguments","BatchRequest","extend","_ethereumCall","name","call","params","outputFormatter","parseInt","hexToNumber","inputFormatter","address","isAddress","Error","each","method","attachToObject","setRequestManager","_requestManager","wallet","Wallet","prototype","_addAccountFunctions","account","signTransaction","tx","callback","privateKey","sign","data","encrypt","password","options","create","entropy","randomHex","privateKeyToAccount","ignoreLength","startsWith","length","fromPrivate","error","transactionOptions","hasTxSigningOptions","chain","hardfork","common","Promise","reject","signed","gas","gasLimit","nonce","gasPrice","chainId","transaction","formatters","inputCallFormatter","clone","to","numberToHex","forCustomChain","networkId","baseChain","customChain","substring","ethTx","Buffer","from","validationResult","validate","rlpEncoded","serialize","toString","rawTransaction","transactionHash","keccak256","result","messageHash","hash","v","r","s","e","undefined","resolve","all","getChainId","getGasPrice","getTransactionCount","getNetworkId","then","args","JSON","stringify","recoverTransaction","rawTx","values","decode","signature","encodeSignature","slice","recovery","toNumber","extraData","fromNumber","signingData","concat","signingDataHex","encode","recover","hashMessage","messageHex","isHexStrict","utf8ToHex","messageBytes","hexToBytes","messageBuffer","preamble","preambleBuffer","ethMessage","keccak256s","vrs","decodeSignature","message","preFixed","apply","isObject","isBoolean","decrypt","v3Keystore","nonStrict","isString","json","parse","toLowerCase","version","derivedKey","kdfparams","crypto","kdf","syncScrypt","salt","n","p","dklen","prf","pbkdf2Sync","c","ciphertext","mac","sha3","replace","decipher","createDecipheriv","cipher","cipherparams","iv","seed","update","final","randomBytes","createCipheriv","id","v4","random","accounts","_accounts","defaultKeyName","_findSafeIndex","pointer","has","_currentIndexes","keys","Object","indexes","map","key","filter","numberOfAccounts","i","add","index","remove","addressOrIndex","clear","forEach","encryptedWallet","keystore","save","keyName","localStorage","setItem","load","getItem","storageAvailable","type","storage","window","x","removeItem","code","module","exports"],"sources":["D:/Documents/defi-staking-app-starter/defi-staking-app-starter/node_modules/web3-eth-accounts/src/index.js"],"sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file accounts.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n'use strict';\n\nvar _ = require('underscore');\nvar core = require('web3-core');\nvar Method = require('web3-core-method');\nvar Account = require('eth-lib/lib/account');\nvar Hash = require('eth-lib/lib/hash');\nvar RLP = require('eth-lib/lib/rlp');// jshint ignore:line\nvar Bytes = require('eth-lib/lib/bytes');// jshint ignore:line\nvar cryp = (typeof global === 'undefined') ? require('crypto-browserify') : require('crypto');\nvar scrypt = require('scrypt-js');\nvar uuid = require('uuid');\nvar utils = require('web3-utils');\nvar helpers = require('web3-core-helpers');\nvar Transaction = require('ethereumjs-tx').Transaction;\nvar Common = require('ethereumjs-common').default;\n\n\nvar isNot = function(value) {\n    return (_.isUndefined(value) || _.isNull(value));\n};\n\nvar Accounts = function Accounts() {\n    var _this = this;\n\n    // sets _requestmanager\n    core.packageInit(this, arguments);\n\n    // remove unecessary core functions\n    delete this.BatchRequest;\n    delete this.extend;\n\n    var _ethereumCall = [\n        new Method({\n            name: 'getNetworkId',\n            call: 'net_version',\n            params: 0,\n            outputFormatter: parseInt\n        }),\n        new Method({\n            name: 'getChainId',\n            call: 'eth_chainId',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getGasPrice',\n            call: 'eth_gasPrice',\n            params: 0\n        }),\n        new Method({\n            name: 'getTransactionCount',\n            call: 'eth_getTransactionCount',\n            params: 2,\n            inputFormatter: [function(address) {\n                if (utils.isAddress(address)) {\n                    return address;\n                } else {\n                    throw new Error('Address ' + address + ' is not a valid address to get the \"transactionCount\".');\n                }\n            }, function() {\n                return 'latest';\n            }]\n        })\n    ];\n    // attach methods to this._ethereumCall\n    this._ethereumCall = {};\n    _.each(_ethereumCall, function(method) {\n        method.attachToObject(_this._ethereumCall);\n        method.setRequestManager(_this._requestManager);\n    });\n\n\n    this.wallet = new Wallet(this);\n};\n\nAccounts.prototype._addAccountFunctions = function(account) {\n    var _this = this;\n\n    // add sign functions\n    account.signTransaction = function signTransaction(tx, callback) {\n        return _this.signTransaction(tx, account.privateKey, callback);\n    };\n    account.sign = function sign(data) {\n        return _this.sign(data, account.privateKey);\n    };\n\n    account.encrypt = function encrypt(password, options) {\n        return _this.encrypt(account.privateKey, password, options);\n    };\n\n\n    return account;\n};\n\nAccounts.prototype.create = function create(entropy) {\n    return this._addAccountFunctions(Account.create(entropy || utils.randomHex(32)));\n};\n\nAccounts.prototype.privateKeyToAccount = function privateKeyToAccount(privateKey, ignoreLength) {\n    if (!privateKey.startsWith('0x')) {\n        privateKey = '0x' + privateKey;\n    }\n\n    // 64 hex characters + hex-prefix\n    if (!ignoreLength && privateKey.length !== 66) {\n        throw new Error(\"Private key must be 32 bytes long\");\n    }\n\n    return this._addAccountFunctions(Account.fromPrivate(privateKey));\n};\n\nAccounts.prototype.signTransaction = function signTransaction(tx, privateKey, callback) {\n    var _this = this,\n        error = false,\n        transactionOptions = {},\n        hasTxSigningOptions = !!(tx && ((tx.chain && tx.hardfork) || tx.common));\n\n    callback = callback || function() {\n    };\n\n    if (!tx) {\n        error = new Error('No transaction object given!');\n\n        callback(error);\n        return Promise.reject(error);\n    }\n\n    function signed(tx) {\n        if (tx.common && (tx.chain && tx.hardfork)) {\n            error = new Error(\n                'Please provide the ethereumjs-common object or the chain and hardfork property but not all together.'\n            );\n        }\n\n        if ((tx.chain && !tx.hardfork) || (tx.hardfork && !tx.chain)) {\n            error = new Error(\n                'When specifying chain and hardfork, both values must be defined. ' +\n                'Received \"chain\": ' + tx.chain + ', \"hardfork\": ' + tx.hardfork\n            );\n        }\n\n        if (!tx.gas && !tx.gasLimit) {\n            error = new Error('\"gas\" is missing');\n        }\n\n        if (tx.nonce < 0 ||\n            tx.gas < 0 ||\n            tx.gasPrice < 0 ||\n            tx.chainId < 0) {\n            error = new Error('Gas, gasPrice, nonce or chainId is lower than 0');\n        }\n\n        if (error) {\n            callback(error);\n            return Promise.reject(error);\n        }\n\n        try {\n            var transaction = helpers.formatters.inputCallFormatter(_.clone(tx));\n            transaction.to = transaction.to || '0x';\n            transaction.data = transaction.data || '0x';\n            transaction.value = transaction.value || '0x';\n            transaction.chainId = utils.numberToHex(transaction.chainId);\n\n            // Because tx has no ethereumjs-tx signing options we use fetched vals.\n            if (!hasTxSigningOptions) {\n                transactionOptions.common = Common.forCustomChain(\n                    'mainnet',\n                    {\n                        name: 'custom-network',\n                        networkId: transaction.networkId,\n                        chainId: transaction.chainId\n                    },\n                    'petersburg'\n                );\n\n                delete transaction.networkId;\n            } else {\n                if (transaction.common) {\n                    transactionOptions.common = Common.forCustomChain(\n                        transaction.common.baseChain || 'mainnet',\n                        {\n                            name: transaction.common.customChain.name || 'custom-network',\n                            networkId: transaction.common.customChain.networkId,\n                            chainId: transaction.common.customChain.chainId\n                        },\n                        transaction.common.hardfork || 'petersburg'\n                    );\n\n                    delete transaction.common;\n                }\n\n                if (transaction.chain) {\n                    transactionOptions.chain = transaction.chain;\n                    delete transaction.chain;\n                }\n\n                if (transaction.hardfork) {\n                    transactionOptions.hardfork = transaction.hardfork;\n                    delete transaction.hardfork;\n                }\n            }\n\n            if (privateKey.startsWith('0x')) {\n                privateKey = privateKey.substring(2);\n            }\n\n            var ethTx = new Transaction(transaction, transactionOptions);\n\n            ethTx.sign(Buffer.from(privateKey, 'hex'));\n\n            var validationResult = ethTx.validate(true);\n\n            if (validationResult !== '') {\n                throw new Error('Signer Error: ' + validationResult);\n            }\n\n            var rlpEncoded = ethTx.serialize().toString('hex');\n            var rawTransaction = '0x' + rlpEncoded;\n            var transactionHash = utils.keccak256(rawTransaction);\n\n            var result = {\n                messageHash: '0x' + Buffer.from(ethTx.hash(false)).toString('hex'),\n                v: '0x' + Buffer.from(ethTx.v).toString('hex'),\n                r: '0x' + Buffer.from(ethTx.r).toString('hex'),\n                s: '0x' + Buffer.from(ethTx.s).toString('hex'),\n                rawTransaction: rawTransaction,\n                transactionHash: transactionHash\n            };\n\n            callback(null, result);\n            return result;\n\n        } catch (e) {\n            callback(e);\n            return Promise.reject(e);\n        }\n    }\n\n\n    // Resolve immediately if nonce, chainId, price and signing options are provided\n    if (tx.nonce !== undefined && tx.chainId !== undefined && tx.gasPrice !== undefined && hasTxSigningOptions) {\n        return Promise.resolve(signed(tx));\n    }\n\n    // Otherwise, get the missing info from the Ethereum Node\n    return Promise.all([\n        isNot(tx.chainId) ? _this._ethereumCall.getChainId() : tx.chainId,\n        isNot(tx.gasPrice) ? _this._ethereumCall.getGasPrice() : tx.gasPrice,\n        isNot(tx.nonce) ? _this._ethereumCall.getTransactionCount(_this.privateKeyToAccount(privateKey).address) : tx.nonce,\n        isNot(hasTxSigningOptions) ? _this._ethereumCall.getNetworkId() : 1\n    ]).then(function(args) {\n        if (isNot(args[0]) || isNot(args[1]) || isNot(args[2]) || isNot(args[3])) {\n            throw new Error('One of the values \"chainId\", \"networkId\", \"gasPrice\", or \"nonce\" couldn\\'t be fetched: ' + JSON.stringify(args));\n        }\n        return signed(_.extend(tx, {chainId: args[0], gasPrice: args[1], nonce: args[2], networkId: args[3]}));\n    });\n};\n\n/* jshint ignore:start */\nAccounts.prototype.recoverTransaction = function recoverTransaction(rawTx) {\n    var values = RLP.decode(rawTx);\n    var signature = Account.encodeSignature(values.slice(6, 9));\n    var recovery = Bytes.toNumber(values[6]);\n    var extraData = recovery < 35 ? [] : [Bytes.fromNumber((recovery - 35) >> 1), '0x', '0x'];\n    var signingData = values.slice(0, 6).concat(extraData);\n    var signingDataHex = RLP.encode(signingData);\n    return Account.recover(Hash.keccak256(signingDataHex), signature);\n};\n/* jshint ignore:end */\n\nAccounts.prototype.hashMessage = function hashMessage(data) {\n    var messageHex = utils.isHexStrict(data) ? data : utils.utf8ToHex(data);\n    var messageBytes = utils.hexToBytes(messageHex)\n    var messageBuffer = Buffer.from(messageBytes);\n    var preamble = '\\x19Ethereum Signed Message:\\n' + messageBytes.length;\n    var preambleBuffer = Buffer.from(preamble);\n    var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);\n    return Hash.keccak256s(ethMessage);\n};\n\nAccounts.prototype.sign = function sign(data, privateKey) {\n    if (!privateKey.startsWith('0x')) {\n        privateKey = '0x' + privateKey;\n    }\n\n    // 64 hex characters + hex-prefix\n    if (privateKey.length !== 66) {\n        throw new Error(\"Private key must be 32 bytes long\");\n    }\n\n    var hash = this.hashMessage(data);\n    var signature = Account.sign(hash, privateKey);\n    var vrs = Account.decodeSignature(signature);\n    return {\n        message: data,\n        messageHash: hash,\n        v: vrs[0],\n        r: vrs[1],\n        s: vrs[2],\n        signature: signature\n    };\n};\n\nAccounts.prototype.recover = function recover(message, signature, preFixed) {\n    var args = [].slice.apply(arguments);\n\n\n    if (_.isObject(message)) {\n        return this.recover(message.messageHash, Account.encodeSignature([message.v, message.r, message.s]), true);\n    }\n\n    if (!preFixed) {\n        message = this.hashMessage(message);\n    }\n\n    if (args.length >= 4) {\n        preFixed = args.slice(-1)[0];\n        preFixed = _.isBoolean(preFixed) ? !!preFixed : false;\n\n        return this.recover(message, Account.encodeSignature(args.slice(1, 4)), preFixed); // v, r, s\n    }\n    return Account.recover(message, signature);\n};\n\n// Taken from https://github.com/ethereumjs/ethereumjs-wallet\nAccounts.prototype.decrypt = function(v3Keystore, password, nonStrict) {\n    /* jshint maxcomplexity: 10 */\n\n    if (!_.isString(password)) {\n        throw new Error('No password given.');\n    }\n\n    var json = (_.isObject(v3Keystore)) ? v3Keystore : JSON.parse(nonStrict ? v3Keystore.toLowerCase() : v3Keystore);\n\n    if (json.version !== 3) {\n        throw new Error('Not a valid V3 wallet');\n    }\n\n    var derivedKey;\n    var kdfparams;\n    if (json.crypto.kdf === 'scrypt') {\n        kdfparams = json.crypto.kdfparams;\n\n        // FIXME: support progress reporting callback\n        derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n    } else if (json.crypto.kdf === 'pbkdf2') {\n        kdfparams = json.crypto.kdfparams;\n\n        if (kdfparams.prf !== 'hmac-sha256') {\n            throw new Error('Unsupported parameters to PBKDF2');\n        }\n\n        derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n    } else {\n        throw new Error('Unsupported key derivation scheme');\n    }\n\n    var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n\n    var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n    if (mac !== json.crypto.mac) {\n        throw new Error('Key derivation failed - possibly wrong password');\n    }\n\n    var decipher = cryp.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n    var seed = '0x' + Buffer.from([...decipher.update(ciphertext), ...decipher.final()]).toString('hex');\n\n    return this.privateKeyToAccount(seed, true);\n};\n\nAccounts.prototype.encrypt = function(privateKey, password, options) {\n    /* jshint maxcomplexity: 20 */\n    var account = this.privateKeyToAccount(privateKey, true);\n\n    options = options || {};\n    var salt = options.salt || cryp.randomBytes(32);\n    var iv = options.iv || cryp.randomBytes(16);\n\n    var derivedKey;\n    var kdf = options.kdf || 'scrypt';\n    var kdfparams = {\n        dklen: options.dklen || 32,\n        salt: salt.toString('hex')\n    };\n\n    if (kdf === 'pbkdf2') {\n        kdfparams.c = options.c || 262144;\n        kdfparams.prf = 'hmac-sha256';\n        derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n    } else if (kdf === 'scrypt') {\n        // FIXME: support progress reporting callback\n        kdfparams.n = options.n || 8192; // 2048 4096 8192 16384\n        kdfparams.r = options.r || 8;\n        kdfparams.p = options.p || 1;\n        derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n    } else {\n        throw new Error('Unsupported kdf');\n    }\n\n    var cipher = cryp.createCipheriv(options.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n    if (!cipher) {\n        throw new Error('Unsupported cipher');\n    }\n\n\n    var ciphertext = Buffer.from([\n        ...cipher.update(Buffer.from(account.privateKey.replace('0x', ''), 'hex')),\n        ...cipher.final()]\n    );\n\n    var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n\n    return {\n        version: 3,\n        id: uuid.v4({random: options.uuid || cryp.randomBytes(16)}),\n        address: account.address.toLowerCase().replace('0x', ''),\n        crypto: {\n            ciphertext: ciphertext.toString('hex'),\n            cipherparams: {\n                iv: iv.toString('hex')\n            },\n            cipher: options.cipher || 'aes-128-ctr',\n            kdf: kdf,\n            kdfparams: kdfparams,\n            mac: mac.toString('hex')\n        }\n    };\n};\n\n\n// Note: this is trying to follow closely the specs on\n// http://web3js.readthedocs.io/en/1.0/web3-eth-accounts.html\n\nfunction Wallet(accounts) {\n    this._accounts = accounts;\n    this.length = 0;\n    this.defaultKeyName = 'web3js_wallet';\n}\n\nWallet.prototype._findSafeIndex = function(pointer) {\n    pointer = pointer || 0;\n    if (_.has(this, pointer)) {\n        return this._findSafeIndex(pointer + 1);\n    } else {\n        return pointer;\n    }\n};\n\nWallet.prototype._currentIndexes = function() {\n    var keys = Object.keys(this);\n    var indexes = keys\n        .map(function(key) {\n            return parseInt(key);\n        })\n        .filter(function(n) {\n            return (n < 9e20);\n        });\n\n    return indexes;\n};\n\nWallet.prototype.create = function(numberOfAccounts, entropy) {\n    for (var i = 0; i < numberOfAccounts; ++i) {\n        this.add(this._accounts.create(entropy).privateKey);\n    }\n    return this;\n};\n\nWallet.prototype.add = function(account) {\n\n    if (_.isString(account)) {\n        account = this._accounts.privateKeyToAccount(account);\n    }\n    if (!this[account.address]) {\n        account = this._accounts.privateKeyToAccount(account.privateKey);\n        account.index = this._findSafeIndex();\n\n        this[account.index] = account;\n        this[account.address] = account;\n        this[account.address.toLowerCase()] = account;\n\n        this.length++;\n\n        return account;\n    } else {\n        return this[account.address];\n    }\n};\n\nWallet.prototype.remove = function(addressOrIndex) {\n    var account = this[addressOrIndex];\n\n    if (account && account.address) {\n        // address\n        this[account.address].privateKey = null;\n        delete this[account.address];\n        // address lowercase\n        this[account.address.toLowerCase()].privateKey = null;\n        delete this[account.address.toLowerCase()];\n        // index\n        this[account.index].privateKey = null;\n        delete this[account.index];\n\n        this.length--;\n\n        return true;\n    } else {\n        return false;\n    }\n};\n\nWallet.prototype.clear = function() {\n    var _this = this;\n    var indexes = this._currentIndexes();\n\n    indexes.forEach(function(index) {\n        _this.remove(index);\n    });\n\n    return this;\n};\n\nWallet.prototype.encrypt = function(password, options) {\n    var _this = this;\n    var indexes = this._currentIndexes();\n\n    var accounts = indexes.map(function(index) {\n        return _this[index].encrypt(password, options);\n    });\n\n    return accounts;\n};\n\n\nWallet.prototype.decrypt = function(encryptedWallet, password) {\n    var _this = this;\n\n    encryptedWallet.forEach(function(keystore) {\n        var account = _this._accounts.decrypt(keystore, password);\n\n        if (account) {\n            _this.add(account);\n        } else {\n            throw new Error('Couldn\\'t decrypt accounts. Password wrong?');\n        }\n    });\n\n    return this;\n};\n\nWallet.prototype.save = function(password, keyName) {\n    localStorage.setItem(keyName || this.defaultKeyName, JSON.stringify(this.encrypt(password)));\n\n    return true;\n};\n\nWallet.prototype.load = function(password, keyName) {\n    var keystore = localStorage.getItem(keyName || this.defaultKeyName);\n\n    if (keystore) {\n        try {\n            keystore = JSON.parse(keystore);\n        } catch (e) {\n\n        }\n    }\n\n    return this.decrypt(keystore || [], password);\n};\n\nif (!storageAvailable('localStorage')) {\n    delete Wallet.prototype.save;\n    delete Wallet.prototype.load;\n}\n\n/**\n * Checks whether a storage type is available or not\n * For more info on how this works, please refer to MDN documentation\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\n *\n * @method storageAvailable\n * @param {String} type the type of storage ('localStorage', 'sessionStorage')\n * @returns {Boolean} a boolean indicating whether the specified storage is available or not\n */\nfunction storageAvailable(type) {\n    var storage;\n    try {\n        storage = window[type];\n        var x = '__storage_test__';\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        return true;\n    } catch (e) {\n        return e && (\n                // everything except Firefox\n            e.code === 22 ||\n            // Firefox\n            e.code === 1014 ||\n            // test name field too, because code might not be present\n            // everything except Firefox\n            e.name === 'QuotaExceededError' ||\n            // Firefox\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            (storage && storage.length !== 0);\n    }\n}\n\n\nmodule.exports = Accounts;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}