{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\src\\\\components\\\\Airdrop.js\";\nimport React, { Component } from \"react\";\nclass Airdrop extends Component {\n  //Airdrop: have a timer that counts down\n  //initialize the countdown after customers ha ve staked a certain amount\n  //timer functionality, countdown, startTimer, state - for time to work\n\n  constructor() {\n    super();\n    //time is an object\n    //second: countdown to be display\n    this.state = {\n      time: {},\n      seconds: 20\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countdown = this.countDown.bind(this);\n  }\n  countdown() {\n    //1.countdown 1 sec at a time\n    let seconds = this.state.seconds - 1;\n    this.setState({\n      time: this.secondToTime(this.state.seconds),\n      seconds: seconds\n    });\n\n    //2.stop counting when we hit 0\n    if (seconds == 0) {\n      clearInterval(this.timer);\n    }\n  }\n  secondToTime(secs) {\n    let hours, minutes, seconds;\n    hours = Math.floor(secs / (60 * 60));\n    let devisor_for_minutes = secs % (60 * 60);\n    minutes = Math.floor(devisor_for_minutes / 60);\n    let devisor_for_seconds = devisor_for_minutes % 60;\n    seconds = Math.ceil(devisor_for_seconds);\n    let obj = {\n      h: hours,\n      m: minutes,\n      s: seconds\n    };\n    return obj;\n  }\n\n  //being called immediately after components is mounted\n  componentDidMount() {\n    let timeLeftVar = this.secondToTime(this.state.seconds);\n    this.setState({\n      time: timeLeftVar\n    });\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, this.state.time.m, \":\", this.state.time.s);\n  }\n}\nexport default Airdrop;","map":{"version":3,"names":["React","Component","Airdrop","constructor","state","time","seconds","timer","startTimer","bind","countdown","countDown","setState","secondToTime","clearInterval","secs","hours","minutes","Math","floor","devisor_for_minutes","devisor_for_seconds","ceil","obj","h","m","s","componentDidMount","timeLeftVar","render","createElement","style","color","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/Documents/defi-staking-app-starter/defi-staking-app-starter/src/components/Airdrop.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Airdrop extends Component {\r\n  //Airdrop: have a timer that counts down\r\n  //initialize the countdown after customers ha ve staked a certain amount\r\n  //timer functionality, countdown, startTimer, state - for time to work\r\n\r\n  constructor() {\r\n    super();\r\n    //time is an object\r\n    //second: countdown to be display\r\n    this.state = {\r\n      time: {},\r\n      seconds: 20,\r\n    };\r\n\r\n    this.timer = 0;\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.countdown = this.countDown.bind(this);\r\n  }\r\n\r\n  countdown() {\r\n    //1.countdown 1 sec at a time\r\n    let seconds = this.state.seconds - 1;\r\n    this.setState({\r\n      time: this.secondToTime(this.state.seconds),\r\n      seconds: seconds,\r\n    });\r\n\r\n    //2.stop counting when we hit 0\r\n    if (seconds == 0) {\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n  secondToTime(secs) {\r\n    let hours, minutes, seconds;\r\n    hours = Math.floor(secs / (60 * 60));\r\n\r\n    let devisor_for_minutes = secs % (60 * 60);\r\n    minutes = Math.floor(devisor_for_minutes / 60);\r\n\r\n    let devisor_for_seconds = devisor_for_minutes % 60;\r\n    seconds = Math.ceil(devisor_for_seconds);\r\n\r\n    let obj = {\r\n      h: hours,\r\n      m: minutes,\r\n      s: seconds,\r\n    };\r\n    return obj;\r\n  }\r\n\r\n  //being called immediately after components is mounted\r\n  componentDidMount() {\r\n    let timeLeftVar = this.secondToTime(this.state.seconds);\r\n    this.setState({ time: timeLeftVar });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ color: \"black\" }}>\r\n        {this.state.time.m}:{this.state.time.s}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Airdrop;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,MAAMC,OAAO,SAASD,SAAS,CAAC;EAC9B;EACA;EACA;;EAEAE,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP;IACA;IACA,IAAI,CAACC,KAAK,GAAG;MACXC,IAAI,EAAE,CAAC,CAAC;MACRC,OAAO,EAAE;IACX,CAAC;IAED,IAAI,CAACC,KAAK,GAAG,CAAC;IACd,IAAI,CAACC,UAAU,GAAG,IAAI,CAACA,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC;IAC5C,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,IAAI,CAAC;EAC5C;EAEAC,SAASA,CAAA,EAAG;IACV;IACA,IAAIJ,OAAO,GAAG,IAAI,CAACF,KAAK,CAACE,OAAO,GAAG,CAAC;IACpC,IAAI,CAACM,QAAQ,CAAC;MACZP,IAAI,EAAE,IAAI,CAACQ,YAAY,CAAC,IAAI,CAACT,KAAK,CAACE,OAAO,CAAC;MAC3CA,OAAO,EAAEA;IACX,CAAC,CAAC;;IAEF;IACA,IAAIA,OAAO,IAAI,CAAC,EAAE;MAChBQ,aAAa,CAAC,IAAI,CAACP,KAAK,CAAC;IAC3B;EACF;EAEAM,YAAYA,CAACE,IAAI,EAAE;IACjB,IAAIC,KAAK,EAAEC,OAAO,EAAEX,OAAO;IAC3BU,KAAK,GAAGE,IAAI,CAACC,KAAK,CAACJ,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;IAEpC,IAAIK,mBAAmB,GAAGL,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC;IAC1CE,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,mBAAmB,GAAG,EAAE,CAAC;IAE9C,IAAIC,mBAAmB,GAAGD,mBAAmB,GAAG,EAAE;IAClDd,OAAO,GAAGY,IAAI,CAACI,IAAI,CAACD,mBAAmB,CAAC;IAExC,IAAIE,GAAG,GAAG;MACRC,CAAC,EAAER,KAAK;MACRS,CAAC,EAAER,OAAO;MACVS,CAAC,EAAEpB;IACL,CAAC;IACD,OAAOiB,GAAG;EACZ;;EAEA;EACAI,iBAAiBA,CAAA,EAAG;IAClB,IAAIC,WAAW,GAAG,IAAI,CAACf,YAAY,CAAC,IAAI,CAACT,KAAK,CAACE,OAAO,CAAC;IACvD,IAAI,CAACM,QAAQ,CAAC;MAAEP,IAAI,EAAEuB;IAAY,CAAC,CAAC;EACtC;EAEAC,MAAMA,CAAA,EAAG;IACP,oBACE7B,KAAA,CAAA8B,aAAA;MAAKC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAC5B,IAAI,CAAClC,KAAK,CAACC,IAAI,CAACoB,CAAC,EAAC,GAAC,EAAC,IAAI,CAACrB,KAAK,CAACC,IAAI,CAACqB,CAClC,CAAC;EAEV;AACF;AAEA,eAAexB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}