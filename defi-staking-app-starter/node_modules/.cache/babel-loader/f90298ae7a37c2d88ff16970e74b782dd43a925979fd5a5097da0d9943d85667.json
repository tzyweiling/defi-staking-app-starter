{"ast":null,"code":"'use strict';\n\nconst {\n  Buffer\n} = require('buffer');\nmodule.exports = function base16(alphabet) {\n  return {\n    encode(input) {\n      if (typeof input === 'string') {\n        return Buffer.from(input).toString('hex');\n      }\n      return input.toString('hex');\n    },\n    decode(input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base16 character');\n        }\n      }\n      return Buffer.from(input, 'hex');\n    }\n  };\n};","map":{"version":3,"names":["Buffer","require","module","exports","base16","alphabet","encode","input","from","toString","decode","char","indexOf","Error"],"sources":["D:/Documents/defi-staking-app-starter/defi-staking-app-starter/node_modules/multihashes/node_modules/multibase/src/base16.js"],"sourcesContent":["'use strict'\nconst { Buffer } = require('buffer')\n\nmodule.exports = function base16 (alphabet) {\n  return {\n    encode (input) {\n      if (typeof input === 'string') {\n        return Buffer.from(input).toString('hex')\n      }\n      return input.toString('hex')\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base16 character')\n        }\n      }\n      return Buffer.from(input, 'hex')\n    }\n  }\n}\n"],"mappings":"AAAA,YAAY;;AACZ,MAAM;EAAEA;AAAO,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAEpCC,MAAM,CAACC,OAAO,GAAG,SAASC,MAAMA,CAAEC,QAAQ,EAAE;EAC1C,OAAO;IACLC,MAAMA,CAAEC,KAAK,EAAE;MACb,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QAC7B,OAAOP,MAAM,CAACQ,IAAI,CAACD,KAAK,CAAC,CAACE,QAAQ,CAAC,KAAK,CAAC;MAC3C;MACA,OAAOF,KAAK,CAACE,QAAQ,CAAC,KAAK,CAAC;IAC9B,CAAC;IACDC,MAAMA,CAAEH,KAAK,EAAE;MACb,KAAK,MAAMI,IAAI,IAAIJ,KAAK,EAAE;QACxB,IAAIF,QAAQ,CAACO,OAAO,CAACD,IAAI,CAAC,GAAG,CAAC,EAAE;UAC9B,MAAM,IAAIE,KAAK,CAAC,0BAA0B,CAAC;QAC7C;MACF;MACA,OAAOb,MAAM,CAACQ,IAAI,CAACD,KAAK,EAAE,KAAK,CAAC;IAClC;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}