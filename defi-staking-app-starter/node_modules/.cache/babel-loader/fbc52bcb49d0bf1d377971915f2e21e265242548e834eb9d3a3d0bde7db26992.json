{"ast":null,"code":"var xhr = require('xhr');\nvar normalize = require('./normalize-response');\nvar noop = function () {};\nmodule.exports = xhrRequest;\nfunction xhrRequest(opt, cb) {\n  delete opt.uri;\n\n  // for better JSON.parse error handling than xhr module\n  var useJson = false;\n  if (opt.responseType === 'json') {\n    opt.responseType = 'text';\n    useJson = true;\n  }\n  var req = xhr(opt, function xhrRequestResult(err, resp, body) {\n    if (useJson && !err) {\n      try {\n        var text = resp.rawRequest.responseText;\n        body = JSON.parse(text);\n      } catch (e) {\n        err = e;\n      }\n    }\n    resp = normalize(opt, resp);\n    if (err) cb(err, null, resp);else cb(err, body, resp);\n    cb = noop;\n  });\n\n  // Patch abort() so that it also calls the callback, but with an error\n  var onabort = req.onabort;\n  req.onabort = function () {\n    var ret = onabort.apply(req, Array.prototype.slice.call(arguments));\n    cb(new Error('XHR Aborted'));\n    cb = noop;\n    return ret;\n  };\n  return req;\n}","map":{"version":3,"names":["xhr","require","normalize","noop","module","exports","xhrRequest","opt","cb","uri","useJson","responseType","req","xhrRequestResult","err","resp","body","text","rawRequest","responseText","JSON","parse","e","onabort","ret","apply","Array","prototype","slice","call","arguments","Error"],"sources":["D:/Documents/defi-staking-app-starter/defi-staking-app-starter/node_modules/xhr-request/lib/request-browser.js"],"sourcesContent":["var xhr = require('xhr')\nvar normalize = require('./normalize-response')\nvar noop = function () {}\n\nmodule.exports = xhrRequest\nfunction xhrRequest (opt, cb) {\n  delete opt.uri\n\n  // for better JSON.parse error handling than xhr module\n  var useJson = false\n  if (opt.responseType === 'json') {\n    opt.responseType = 'text'\n    useJson = true\n  }\n\n  var req = xhr(opt, function xhrRequestResult (err, resp, body) {\n    if (useJson && !err) {\n      try {\n        var text = resp.rawRequest.responseText\n        body = JSON.parse(text)\n      } catch (e) {\n        err = e\n      }\n    }\n\n    resp = normalize(opt, resp)\n    if (err) cb(err, null, resp)\n    else cb(err, body, resp)\n    cb = noop\n  })\n\n  // Patch abort() so that it also calls the callback, but with an error\n  var onabort = req.onabort\n  req.onabort = function () {\n    var ret = onabort.apply(req, Array.prototype.slice.call(arguments))\n    cb(new Error('XHR Aborted'))\n    cb = noop\n    return ret\n  }\n\n  return req\n}\n"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,KAAK,CAAC;AACxB,IAAIC,SAAS,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAC/C,IAAIE,IAAI,GAAG,SAAAA,CAAA,EAAY,CAAC,CAAC;AAEzBC,MAAM,CAACC,OAAO,GAAGC,UAAU;AAC3B,SAASA,UAAUA,CAAEC,GAAG,EAAEC,EAAE,EAAE;EAC5B,OAAOD,GAAG,CAACE,GAAG;;EAEd;EACA,IAAIC,OAAO,GAAG,KAAK;EACnB,IAAIH,GAAG,CAACI,YAAY,KAAK,MAAM,EAAE;IAC/BJ,GAAG,CAACI,YAAY,GAAG,MAAM;IACzBD,OAAO,GAAG,IAAI;EAChB;EAEA,IAAIE,GAAG,GAAGZ,GAAG,CAACO,GAAG,EAAE,SAASM,gBAAgBA,CAAEC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAC7D,IAAIN,OAAO,IAAI,CAACI,GAAG,EAAE;MACnB,IAAI;QACF,IAAIG,IAAI,GAAGF,IAAI,CAACG,UAAU,CAACC,YAAY;QACvCH,IAAI,GAAGI,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOK,CAAC,EAAE;QACVR,GAAG,GAAGQ,CAAC;MACT;IACF;IAEAP,IAAI,GAAGb,SAAS,CAACK,GAAG,EAAEQ,IAAI,CAAC;IAC3B,IAAID,GAAG,EAAEN,EAAE,CAACM,GAAG,EAAE,IAAI,EAAEC,IAAI,CAAC,MACvBP,EAAE,CAACM,GAAG,EAAEE,IAAI,EAAED,IAAI,CAAC;IACxBP,EAAE,GAAGL,IAAI;EACX,CAAC,CAAC;;EAEF;EACA,IAAIoB,OAAO,GAAGX,GAAG,CAACW,OAAO;EACzBX,GAAG,CAACW,OAAO,GAAG,YAAY;IACxB,IAAIC,GAAG,GAAGD,OAAO,CAACE,KAAK,CAACb,GAAG,EAAEc,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,CAAC,CAAC;IACnEtB,EAAE,CAAC,IAAIuB,KAAK,CAAC,aAAa,CAAC,CAAC;IAC5BvB,EAAE,GAAGL,IAAI;IACT,OAAOqB,GAAG;EACZ,CAAC;EAED,OAAOZ,GAAG;AACZ"},"metadata":{},"sourceType":"script","externalDependencies":[]}