{"ast":null,"code":"\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexDataSlice, hexlify, hexZeroPad, isBytesLike, splitSignature, stripZeros } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction handleAddress(value) {\n  if (value === \"0x\") {\n    return null;\n  }\n  return getAddress(value);\n}\nfunction handleNumber(value) {\n  if (value === \"0x\") {\n    return Zero;\n  }\n  return BigNumber.from(value);\n}\nconst transactionFields = [{\n  name: \"nonce\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"gasPrice\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"gasLimit\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"to\",\n  length: 20\n}, {\n  name: \"value\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"data\"\n}];\nconst allowedTransactionKeys = {\n  chainId: true,\n  data: true,\n  gasLimit: true,\n  gasPrice: true,\n  nonce: true,\n  to: true,\n  value: true\n};\nexport function computeAddress(key) {\n  const publicKey = computePublicKey(key);\n  return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\nexport function recoverAddress(digest, signature) {\n  return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\nexport function serialize(transaction, signature) {\n  checkProperties(transaction, allowedTransactionKeys);\n  const raw = [];\n  transactionFields.forEach(function (fieldInfo) {\n    let value = transaction[fieldInfo.name] || [];\n    const options = {};\n    if (fieldInfo.numeric) {\n      options.hexPad = \"left\";\n    }\n    value = arrayify(hexlify(value, options));\n    // Fixed-width field\n    if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n      logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, \"transaction:\" + fieldInfo.name, value);\n    }\n    // Variable-width (with a maximum)\n    if (fieldInfo.maxLength) {\n      value = stripZeros(value);\n      if (value.length > fieldInfo.maxLength) {\n        logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, \"transaction:\" + fieldInfo.name, value);\n      }\n    }\n    raw.push(hexlify(value));\n  });\n  let chainId = 0;\n  if (transaction.chainId != null) {\n    // A chainId was provided; if non-zero we'll use EIP-155\n    chainId = transaction.chainId;\n    if (typeof chainId !== \"number\") {\n      logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n    }\n  } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n    // No chainId provided, but the signature is signing with EIP-155; derive chainId\n    chainId = Math.floor((signature.v - 35) / 2);\n  }\n  // We have an EIP-155 transaction (chainId was specified and non-zero)\n  if (chainId !== 0) {\n    raw.push(hexlify(chainId));\n    raw.push(\"0x\");\n    raw.push(\"0x\");\n  }\n  // Requesting an unsigned transation\n  if (!signature) {\n    return RLP.encode(raw);\n  }\n  // The splitSignature will ensure the transaction has a recoveryParam in the\n  // case that the signTransaction function only adds a v.\n  const sig = splitSignature(signature);\n  // We pushed a chainId and null r, s on for hashing only; remove those\n  let v = 27 + sig.recoveryParam;\n  if (chainId !== 0) {\n    raw.pop();\n    raw.pop();\n    raw.pop();\n    v += chainId * 2 + 8;\n    // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n    if (sig.v > 28 && sig.v !== v) {\n      logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n  } else if (sig.v !== v) {\n    logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n  }\n  raw.push(hexlify(v));\n  raw.push(stripZeros(arrayify(sig.r)));\n  raw.push(stripZeros(arrayify(sig.s)));\n  return RLP.encode(raw);\n}\nexport function parse(rawTransaction) {\n  const transaction = RLP.decode(rawTransaction);\n  if (transaction.length !== 9 && transaction.length !== 6) {\n    logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n  }\n  const tx = {\n    nonce: handleNumber(transaction[0]).toNumber(),\n    gasPrice: handleNumber(transaction[1]),\n    gasLimit: handleNumber(transaction[2]),\n    to: handleAddress(transaction[3]),\n    value: handleNumber(transaction[4]),\n    data: transaction[5],\n    chainId: 0\n  };\n  // Legacy unsigned transaction\n  if (transaction.length === 6) {\n    return tx;\n  }\n  try {\n    tx.v = BigNumber.from(transaction[6]).toNumber();\n  } catch (error) {\n    console.log(error);\n    return tx;\n  }\n  tx.r = hexZeroPad(transaction[7], 32);\n  tx.s = hexZeroPad(transaction[8], 32);\n  if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n    // EIP-155 unsigned transaction\n    tx.chainId = tx.v;\n    tx.v = 0;\n  } else {\n    // Signed Tranasaction\n    tx.chainId = Math.floor((tx.v - 35) / 2);\n    if (tx.chainId < 0) {\n      tx.chainId = 0;\n    }\n    let recoveryParam = tx.v - 27;\n    const raw = transaction.slice(0, 6);\n    if (tx.chainId !== 0) {\n      raw.push(hexlify(tx.chainId));\n      raw.push(\"0x\");\n      raw.push(\"0x\");\n      recoveryParam -= tx.chainId * 2 + 8;\n    }\n    const digest = keccak256(RLP.encode(raw));\n    try {\n      tx.from = recoverAddress(digest, {\n        r: hexlify(tx.r),\n        s: hexlify(tx.s),\n        recoveryParam: recoveryParam\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    tx.hash = keccak256(rawTransaction);\n  }\n  return tx;\n}","map":{"version":3,"names":["getAddress","BigNumber","arrayify","hexDataSlice","hexlify","hexZeroPad","isBytesLike","splitSignature","stripZeros","Zero","keccak256","checkProperties","RLP","computePublicKey","recoverPublicKey","Logger","version","logger","handleAddress","value","handleNumber","from","transactionFields","name","maxLength","numeric","length","allowedTransactionKeys","chainId","data","gasLimit","gasPrice","nonce","to","computeAddress","key","publicKey","recoverAddress","digest","signature","serialize","transaction","raw","forEach","fieldInfo","options","hexPad","throwArgumentError","push","v","Math","floor","encode","sig","recoveryParam","pop","r","s","parse","rawTransaction","decode","tx","toNumber","error","console","log","isZero","slice","hash"],"sources":["../src.ts/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}