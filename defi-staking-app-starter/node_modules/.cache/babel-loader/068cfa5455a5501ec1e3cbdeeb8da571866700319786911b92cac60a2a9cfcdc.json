{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file contract.js\n *\n * To initialize a contract use:\n *\n *  var Contract = require('web3-eth-contract');\n *  Contract.setProvider('ws://localhost:8546');\n *  var contract = new Contract(abi, address, ...);\n *\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\nvar _ = require('underscore');\nvar core = require('web3-core');\nvar Method = require('web3-core-method');\nvar utils = require('web3-utils');\nvar Subscription = require('web3-core-subscriptions').subscription;\nvar formatters = require('web3-core-helpers').formatters;\nvar errors = require('web3-core-helpers').errors;\nvar promiEvent = require('web3-core-promievent');\nvar abi = require('web3-eth-abi');\n\n/**\n * Should be called to create new contract instance\n *\n * @method Contract\n * @constructor\n * @param {Array} jsonInterface\n * @param {String} address\n * @param {Object} options\n */\nvar Contract = function Contract(jsonInterface, address, options) {\n  var _this = this,\n    args = Array.prototype.slice.call(arguments);\n  if (!(this instanceof Contract)) {\n    throw new Error('Please use the \"new\" keyword to instantiate a web3.eth.Contract() object!');\n  }\n  this.setProvider = function () {\n    core.packageInit(_this, arguments);\n    _this.clearSubscriptions = _this._requestManager.clearSubscriptions;\n  };\n\n  // sets _requestmanager\n  core.packageInit(this, [this.constructor]);\n  this.clearSubscriptions = this._requestManager.clearSubscriptions;\n  if (!jsonInterface || !Array.isArray(jsonInterface)) {\n    throw errors.ContractMissingABIError();\n  }\n\n  // create the options object\n  this.options = {};\n  var lastArg = args[args.length - 1];\n  if (_.isObject(lastArg) && !_.isArray(lastArg)) {\n    options = lastArg;\n    this.options = _.extend(this.options, this._getOrSetDefaultOptions(options));\n    if (_.isObject(address)) {\n      address = null;\n    }\n  }\n\n  // set address\n  Object.defineProperty(this.options, 'address', {\n    set: function (value) {\n      if (value) {\n        _this._address = utils.toChecksumAddress(formatters.inputAddressFormatter(value));\n      }\n    },\n    get: function () {\n      return _this._address;\n    },\n    enumerable: true\n  });\n\n  // add method and event signatures, when the jsonInterface gets set\n  Object.defineProperty(this.options, 'jsonInterface', {\n    set: function (value) {\n      _this.methods = {};\n      _this.events = {};\n      _this._jsonInterface = value.map(function (method) {\n        var func, funcName;\n\n        // make constant and payable backwards compatible\n        method.constant = method.stateMutability === \"view\" || method.stateMutability === \"pure\" || method.constant;\n        method.payable = method.stateMutability === \"payable\" || method.payable;\n        if (method.name) {\n          funcName = utils._jsonInterfaceMethodToString(method);\n        }\n\n        // function\n        if (method.type === 'function') {\n          method.signature = abi.encodeFunctionSignature(funcName);\n          func = _this._createTxObject.bind({\n            method: method,\n            parent: _this\n          });\n\n          // add method only if not one already exists\n          if (!_this.methods[method.name]) {\n            _this.methods[method.name] = func;\n          } else {\n            var cascadeFunc = _this._createTxObject.bind({\n              method: method,\n              parent: _this,\n              nextMethod: _this.methods[method.name]\n            });\n            _this.methods[method.name] = cascadeFunc;\n          }\n\n          // definitely add the method based on its signature\n          _this.methods[method.signature] = func;\n\n          // add method by name\n          _this.methods[funcName] = func;\n\n          // event\n        } else if (method.type === 'event') {\n          method.signature = abi.encodeEventSignature(funcName);\n          var event = _this._on.bind(_this, method.signature);\n\n          // add method only if not already exists\n          if (!_this.events[method.name] || _this.events[method.name].name === 'bound ') _this.events[method.name] = event;\n\n          // definitely add the method based on its signature\n          _this.events[method.signature] = event;\n\n          // add event by name\n          _this.events[funcName] = event;\n        }\n        return method;\n      });\n\n      // add allEvents\n      _this.events.allEvents = _this._on.bind(_this, 'allevents');\n      return _this._jsonInterface;\n    },\n    get: function () {\n      return _this._jsonInterface;\n    },\n    enumerable: true\n  });\n\n  // get default account from the Class\n  var defaultAccount = this.constructor.defaultAccount;\n  var defaultBlock = this.constructor.defaultBlock || 'latest';\n  Object.defineProperty(this, 'handleRevert', {\n    get: function () {\n      if (_this.options.handleRevert === false || _this.options.handleRevert === true) {\n        return _this.options.handleRevert;\n      }\n      return this.constructor.handleRevert;\n    },\n    set: function (val) {\n      _this.options.handleRevert = val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultCommon', {\n    get: function () {\n      return _this.options.common || this.constructor.defaultCommon;\n    },\n    set: function (val) {\n      _this.options.common = val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultHardfork', {\n    get: function () {\n      return _this.options.hardfork || this.constructor.defaultHardfork;\n    },\n    set: function (val) {\n      _this.options.hardfork = val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultChain', {\n    get: function () {\n      return _this.options.chain || this.constructor.defaultChain;\n    },\n    set: function (val) {\n      _this.options.chain = val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'transactionPollingTimeout', {\n    get: function () {\n      if (_this.options.transactionPollingTimeout === 0) {\n        return _this.options.transactionPollingTimeout;\n      }\n      return _this.options.transactionPollingTimeout || this.constructor.transactionPollingTimeout;\n    },\n    set: function (val) {\n      _this.options.transactionPollingTimeout = val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'transactionConfirmationBlocks', {\n    get: function () {\n      if (_this.options.transactionConfirmationBlocks === 0) {\n        return _this.options.transactionConfirmationBlocks;\n      }\n      return _this.options.transactionConfirmationBlocks || this.constructor.transactionConfirmationBlocks;\n    },\n    set: function (val) {\n      _this.options.transactionConfirmationBlocks = val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'transactionBlockTimeout', {\n    get: function () {\n      if (_this.options.transactionBlockTimeout === 0) {\n        return _this.options.transactionBlockTimeout;\n      }\n      return _this.options.transactionBlockTimeout || this.constructor.transactionBlockTimeout;\n    },\n    set: function (val) {\n      _this.options.transactionBlockTimeout = val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultAccount', {\n    get: function () {\n      return defaultAccount;\n    },\n    set: function (val) {\n      if (val) {\n        defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val));\n      }\n      return val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultBlock', {\n    get: function () {\n      return defaultBlock;\n    },\n    set: function (val) {\n      defaultBlock = val;\n      return val;\n    },\n    enumerable: true\n  });\n\n  // properties\n  this.methods = {};\n  this.events = {};\n  this._address = null;\n  this._jsonInterface = [];\n\n  // set getter/setter properties\n  this.options.address = address;\n  this.options.jsonInterface = jsonInterface;\n};\n\n/**\n * Sets the new provider, creates a new requestManager, registers the \"data\" listener on the provider and sets the\n * accounts module for the Contract class.\n *\n * @method setProvider\n *\n * @param {string|provider} provider\n * @param {Accounts} accounts\n *\n * @returns void\n */\nContract.setProvider = function (provider, accounts) {\n  // Contract.currentProvider = provider;\n  core.packageInit(this, [provider]);\n  this._ethAccounts = accounts;\n};\n\n/**\n * Get the callback and modify the array if necessary\n *\n * @method _getCallback\n * @param {Array} args\n * @return {Function} the callback\n */\nContract.prototype._getCallback = function getCallback(args) {\n  if (args && _.isFunction(args[args.length - 1])) {\n    return args.pop(); // modify the args array!\n  }\n};\n\n/**\n * Checks that no listener with name \"newListener\" or \"removeListener\" is added.\n *\n * @method _checkListener\n * @param {String} type\n * @param {String} event\n * @return {Object} the contract instance\n */\nContract.prototype._checkListener = function (type, event) {\n  if (event === type) {\n    throw errors.ContractReservedEventError(type);\n  }\n};\n\n/**\n * Use default values, if options are not available\n *\n * @method _getOrSetDefaultOptions\n * @param {Object} options the options gived by the user\n * @return {Object} the options with gaps filled by defaults\n */\nContract.prototype._getOrSetDefaultOptions = function getOrSetDefaultOptions(options) {\n  var gasPrice = options.gasPrice ? String(options.gasPrice) : null;\n  var from = options.from ? utils.toChecksumAddress(formatters.inputAddressFormatter(options.from)) : null;\n  options.data = options.data || this.options.data;\n  options.from = from || this.options.from;\n  options.gasPrice = gasPrice || this.options.gasPrice;\n  options.gas = options.gas || options.gasLimit || this.options.gas;\n\n  // TODO replace with only gasLimit?\n  delete options.gasLimit;\n  return options;\n};\n\n/**\n * Should be used to encode indexed params and options to one final object\n *\n * @method _encodeEventABI\n * @param {Object} event\n * @param {Object} options\n * @return {Object} everything combined together and encoded\n */\nContract.prototype._encodeEventABI = function (event, options) {\n  options = options || {};\n  var filter = options.filter || {},\n    result = {};\n  ['fromBlock', 'toBlock'].filter(function (f) {\n    return options[f] !== undefined;\n  }).forEach(function (f) {\n    result[f] = formatters.inputBlockNumberFormatter(options[f]);\n  });\n\n  // use given topics\n  if (_.isArray(options.topics)) {\n    result.topics = options.topics;\n\n    // create topics based on filter\n  } else {\n    result.topics = [];\n\n    // add event signature\n    if (event && !event.anonymous && event.name !== 'ALLEVENTS') {\n      result.topics.push(event.signature);\n    }\n\n    // add event topics (indexed arguments)\n    if (event.name !== 'ALLEVENTS') {\n      var indexedTopics = event.inputs.filter(function (i) {\n        return i.indexed === true;\n      }).map(function (i) {\n        var value = filter[i.name];\n        if (!value) {\n          return null;\n        }\n\n        // TODO: https://github.com/ethereum/web3.js/issues/344\n        // TODO: deal properly with components\n\n        if (_.isArray(value)) {\n          return value.map(function (v) {\n            return abi.encodeParameter(i.type, v);\n          });\n        }\n        return abi.encodeParameter(i.type, value);\n      });\n      result.topics = result.topics.concat(indexedTopics);\n    }\n    if (!result.topics.length) delete result.topics;\n  }\n  if (this.options.address) {\n    result.address = this.options.address.toLowerCase();\n  }\n  return result;\n};\n\n/**\n * Should be used to decode indexed params and options\n *\n * @method _decodeEventABI\n * @param {Object} data\n * @return {Object} result object with decoded indexed && not indexed params\n */\nContract.prototype._decodeEventABI = function (data) {\n  var event = this;\n  data.data = data.data || '';\n  data.topics = data.topics || [];\n  var result = formatters.outputLogFormatter(data);\n\n  // if allEvents get the right event\n  if (event.name === 'ALLEVENTS') {\n    event = event.jsonInterface.find(function (intf) {\n      return intf.signature === data.topics[0];\n    }) || {\n      anonymous: true\n    };\n  }\n\n  // create empty inputs if none are present (e.g. anonymous events on allEvents)\n  event.inputs = event.inputs || [];\n\n  // Handle case where an event signature shadows the current ABI with non-identical\n  // arg indexing. If # of topics doesn't match, event is anon.\n  if (!event.anonymous) {\n    let indexedInputs = 0;\n    event.inputs.forEach(input => input.indexed ? indexedInputs++ : null);\n    if (indexedInputs > 0 && data.topics.length !== indexedInputs + 1) {\n      event = {\n        anonymous: true,\n        inputs: []\n      };\n    }\n  }\n  var argTopics = event.anonymous ? data.topics : data.topics.slice(1);\n  result.returnValues = abi.decodeLog(event.inputs, data.data, argTopics);\n  delete result.returnValues.__length__;\n\n  // add name\n  result.event = event.name;\n\n  // add signature\n  result.signature = event.anonymous || !data.topics[0] ? null : data.topics[0];\n\n  // move the data and topics to \"raw\"\n  result.raw = {\n    data: result.data,\n    topics: result.topics\n  };\n  delete result.data;\n  delete result.topics;\n  return result;\n};\n\n/**\n * Encodes an ABI for a method, including signature or the method.\n * Or when constructor encodes only the constructor parameters.\n *\n * @method _encodeMethodABI\n * @param {Mixed} args the arguments to encode\n * @param {String} the encoded ABI\n */\nContract.prototype._encodeMethodABI = function _encodeMethodABI() {\n  var methodSignature = this._method.signature,\n    args = this.arguments || [];\n  var signature = false,\n    paramsABI = this._parent.options.jsonInterface.filter(function (json) {\n      return methodSignature === 'constructor' && json.type === methodSignature || (json.signature === methodSignature || json.signature === methodSignature.replace('0x', '') || json.name === methodSignature) && json.type === 'function';\n    }).map(function (json) {\n      var inputLength = _.isArray(json.inputs) ? json.inputs.length : 0;\n      if (inputLength !== args.length) {\n        throw new Error('The number of arguments is not matching the methods required number. You need to pass ' + inputLength + ' arguments.');\n      }\n      if (json.type === 'function') {\n        signature = json.signature;\n      }\n      return _.isArray(json.inputs) ? json.inputs : [];\n    }).map(function (inputs) {\n      return abi.encodeParameters(inputs, args).replace('0x', '');\n    })[0] || '';\n\n  // return constructor\n  if (methodSignature === 'constructor') {\n    if (!this._deployData) throw new Error('The contract has no contract data option set. This is necessary to append the constructor parameters.');\n    if (!this._deployData.startsWith('0x')) {\n      this._deployData = '0x' + this._deployData;\n    }\n    return this._deployData + paramsABI;\n  }\n\n  // return method\n  var returnValue = signature ? signature + paramsABI : paramsABI;\n  if (!returnValue) {\n    throw new Error('Couldn\\'t find a matching contract method named \"' + this._method.name + '\".');\n  }\n  return returnValue;\n};\n\n/**\n * Decode method return values\n *\n * @method _decodeMethodReturn\n * @param {Array} outputs\n * @param {String} returnValues\n * @return {Object} decoded output return values\n */\nContract.prototype._decodeMethodReturn = function (outputs, returnValues) {\n  if (!returnValues) {\n    return null;\n  }\n  returnValues = returnValues.length >= 2 ? returnValues.slice(2) : returnValues;\n  var result = abi.decodeParameters(outputs, returnValues);\n  if (result.__length__ === 1) {\n    return result[0];\n  }\n  delete result.__length__;\n  return result;\n};\n\n/**\n * Deploys a contract and fire events based on its state: transactionHash, receipt\n *\n * All event listeners will be removed, once the last possible event is fired (\"error\", or \"receipt\")\n *\n * @method deploy\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} EventEmitter possible events are \"error\", \"transactionHash\" and \"receipt\"\n */\nContract.prototype.deploy = function (options, callback) {\n  options = options || {};\n  options.arguments = options.arguments || [];\n  options = this._getOrSetDefaultOptions(options);\n\n  // throw error, if no \"data\" is specified\n  if (!options.data) {\n    if (typeof callback === 'function') {\n      return callback(errors.ContractMissingDeployDataError());\n    }\n    throw errors.ContractMissingDeployDataError();\n  }\n  var constructor = _.find(this.options.jsonInterface, function (method) {\n    return method.type === 'constructor';\n  }) || {};\n  constructor.signature = 'constructor';\n  return this._createTxObject.apply({\n    method: constructor,\n    parent: this,\n    deployData: options.data,\n    _ethAccounts: this.constructor._ethAccounts\n  }, options.arguments);\n};\n\n/**\n * Gets the event signature and outputFormatters\n *\n * @method _generateEventOptions\n * @param {Object} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event options object\n */\nContract.prototype._generateEventOptions = function () {\n  var args = Array.prototype.slice.call(arguments);\n\n  // get the callback\n  var callback = this._getCallback(args);\n\n  // get the options\n  var options = _.isObject(args[args.length - 1]) ? args.pop() : {};\n  var eventName = _.isString(args[0]) ? args[0] : 'allevents';\n  var event = eventName.toLowerCase() === 'allevents' ? {\n    name: 'ALLEVENTS',\n    jsonInterface: this.options.jsonInterface\n  } : this.options.jsonInterface.find(function (json) {\n    return json.type === 'event' && (json.name === eventName || json.signature === '0x' + eventName.replace('0x', ''));\n  });\n  if (!event) {\n    throw errors.ContractEventDoesNotExistError(eventName);\n  }\n  if (!utils.isAddress(this.options.address)) {\n    throw errors.ContractNoAddressDefinedError();\n  }\n  return {\n    params: this._encodeEventABI(event, options),\n    event: event,\n    callback: callback\n  };\n};\n\n/**\n * Adds event listeners and creates a subscription, and remove it once its fired.\n *\n * @method clone\n * @return {Object} the event subscription\n */\nContract.prototype.clone = function () {\n  return new this.constructor(this.options.jsonInterface, this.options.address, this.options);\n};\n\n/**\n * Adds event listeners and creates a subscription, and remove it once its fired.\n *\n * @method once\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event subscription\n */\nContract.prototype.once = function (event, options, callback) {\n  var args = Array.prototype.slice.call(arguments);\n\n  // get the callback\n  callback = this._getCallback(args);\n  if (!callback) {\n    throw errors.ContractOnceRequiresCallbackError();\n  }\n\n  // don't allow fromBlock\n  if (options) delete options.fromBlock;\n\n  // don't return as once shouldn't provide \"on\"\n  this._on(event, options, function (err, res, sub) {\n    sub.unsubscribe();\n    if (_.isFunction(callback)) {\n      callback(err, res, sub);\n    }\n  });\n  return undefined;\n};\n\n/**\n * Adds event listeners and creates a subscription.\n *\n * @method _on\n *\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n *\n * @return {Object} the event subscription\n */\nContract.prototype._on = function () {\n  var subOptions = this._generateEventOptions.apply(this, arguments);\n  if (subOptions.params && subOptions.params.toBlock) {\n    delete subOptions.params.toBlock;\n    console.warn('Invalid option: toBlock. Use getPastEvents for specific range.');\n  }\n\n  // prevent the event \"newListener\" and \"removeListener\" from being overwritten\n  this._checkListener('newListener', subOptions.event.name);\n  this._checkListener('removeListener', subOptions.event.name);\n\n  // TODO check if listener already exists? and reuse subscription if options are the same.\n\n  // create new subscription\n  var subscription = new Subscription({\n    subscription: {\n      params: 1,\n      inputFormatter: [formatters.inputLogFormatter],\n      outputFormatter: this._decodeEventABI.bind(subOptions.event),\n      // DUBLICATE, also in web3-eth\n      subscriptionHandler: function (output) {\n        if (output.removed) {\n          this.emit('changed', output);\n        } else {\n          this.emit('data', output);\n        }\n        if (_.isFunction(this.callback)) {\n          this.callback(null, output, this);\n        }\n      }\n    },\n    type: 'eth',\n    requestManager: this._requestManager\n  });\n  subscription.subscribe('logs', subOptions.params, subOptions.callback || function () {});\n  return subscription;\n};\n\n/**\n * Get past events from contracts\n *\n * @method getPastEvents\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the promievent\n */\nContract.prototype.getPastEvents = function () {\n  var subOptions = this._generateEventOptions.apply(this, arguments);\n  var getPastLogs = new Method({\n    name: 'getPastLogs',\n    call: 'eth_getLogs',\n    params: 1,\n    inputFormatter: [formatters.inputLogFormatter],\n    outputFormatter: this._decodeEventABI.bind(subOptions.event)\n  });\n  getPastLogs.setRequestManager(this._requestManager);\n  var call = getPastLogs.buildCall();\n  getPastLogs = null;\n  return call(subOptions.params, subOptions.callback);\n};\n\n/**\n * returns the an object with call, send, estimate functions\n *\n * @method _createTxObject\n * @returns {Object} an object with functions to call the methods\n */\nContract.prototype._createTxObject = function _createTxObject() {\n  var args = Array.prototype.slice.call(arguments);\n  var txObject = {};\n  if (this.method.type === 'function') {\n    txObject.call = this.parent._executeMethod.bind(txObject, 'call');\n    txObject.call.request = this.parent._executeMethod.bind(txObject, 'call', true); // to make batch requests\n  }\n  txObject.send = this.parent._executeMethod.bind(txObject, 'send');\n  txObject.send.request = this.parent._executeMethod.bind(txObject, 'send', true); // to make batch requests\n  txObject.encodeABI = this.parent._encodeMethodABI.bind(txObject);\n  txObject.estimateGas = this.parent._executeMethod.bind(txObject, 'estimate');\n  if (args && this.method.inputs && args.length !== this.method.inputs.length) {\n    if (this.nextMethod) {\n      return this.nextMethod.apply(null, args);\n    }\n    throw errors.InvalidNumberOfParams(args.length, this.method.inputs.length, this.method.name);\n  }\n  txObject.arguments = args || [];\n  txObject._method = this.method;\n  txObject._parent = this.parent;\n  txObject._ethAccounts = this.parent.constructor._ethAccounts || this._ethAccounts;\n  if (this.deployData) {\n    txObject._deployData = this.deployData;\n  }\n  return txObject;\n};\n\n/**\n * Generates the options for the execute call\n *\n * @method _processExecuteArguments\n * @param {Array} args\n * @param {Promise} defer\n */\nContract.prototype._processExecuteArguments = function _processExecuteArguments(args, defer) {\n  var processedArgs = {};\n  processedArgs.type = args.shift();\n\n  // get the callback\n  processedArgs.callback = this._parent._getCallback(args);\n\n  // get block number to use for call\n  if (processedArgs.type === 'call' && args[args.length - 1] !== true && (_.isString(args[args.length - 1]) || isFinite(args[args.length - 1]))) processedArgs.defaultBlock = args.pop();\n\n  // get the options\n  processedArgs.options = _.isObject(args[args.length - 1]) ? args.pop() : {};\n\n  // get the generateRequest argument for batch requests\n  processedArgs.generateRequest = args[args.length - 1] === true ? args.pop() : false;\n  processedArgs.options = this._parent._getOrSetDefaultOptions(processedArgs.options);\n  processedArgs.options.data = this.encodeABI();\n\n  // add contract address\n  if (!this._deployData && !utils.isAddress(this._parent.options.address)) throw errors.ContractNoAddressDefinedError();\n  if (!this._deployData) processedArgs.options.to = this._parent.options.address;\n\n  // return error, if no \"data\" is specified\n  if (!processedArgs.options.data) return utils._fireError(new Error('Couldn\\'t find a matching contract method, or the number of parameters is wrong.'), defer.eventEmitter, defer.reject, processedArgs.callback);\n  return processedArgs;\n};\n\n/**\n * Executes a call, transact or estimateGas on a contract function\n *\n * @method _executeMethod\n * @param {String} type the type this execute function should execute\n * @param {Boolean} makeRequest if true, it simply returns the request parameters, rather than executing it\n */\nContract.prototype._executeMethod = function _executeMethod() {\n  var _this = this,\n    args = this._parent._processExecuteArguments.call(this, Array.prototype.slice.call(arguments), defer),\n    defer = promiEvent(args.type !== 'send'),\n    ethAccounts = _this.constructor._ethAccounts || _this._ethAccounts;\n\n  // simple return request for batch requests\n  if (args.generateRequest) {\n    var payload = {\n      params: [formatters.inputCallFormatter.call(this._parent, args.options)],\n      callback: args.callback\n    };\n    if (args.type === 'call') {\n      payload.params.push(formatters.inputDefaultBlockNumberFormatter.call(this._parent, args.defaultBlock));\n      payload.method = 'eth_call';\n      payload.format = this._parent._decodeMethodReturn.bind(null, this._method.outputs);\n    } else {\n      payload.method = 'eth_sendTransaction';\n    }\n    return payload;\n  }\n  switch (args.type) {\n    case 'estimate':\n      var estimateGas = new Method({\n        name: 'estimateGas',\n        call: 'eth_estimateGas',\n        params: 1,\n        inputFormatter: [formatters.inputCallFormatter],\n        outputFormatter: utils.hexToNumber,\n        requestManager: _this._parent._requestManager,\n        accounts: ethAccounts,\n        // is eth.accounts (necessary for wallet signing)\n        defaultAccount: _this._parent.defaultAccount,\n        defaultBlock: _this._parent.defaultBlock\n      }).createFunction();\n      return estimateGas(args.options, args.callback);\n    case 'call':\n      // TODO check errors: missing \"from\" should give error on deploy and send, call ?\n\n      var call = new Method({\n        name: 'call',\n        call: 'eth_call',\n        params: 2,\n        inputFormatter: [formatters.inputCallFormatter, formatters.inputDefaultBlockNumberFormatter],\n        // add output formatter for decoding\n        outputFormatter: function (result) {\n          return _this._parent._decodeMethodReturn(_this._method.outputs, result);\n        },\n        requestManager: _this._parent._requestManager,\n        accounts: ethAccounts,\n        // is eth.accounts (necessary for wallet signing)\n        defaultAccount: _this._parent.defaultAccount,\n        defaultBlock: _this._parent.defaultBlock,\n        handleRevert: _this._parent.handleRevert,\n        abiCoder: abi\n      }).createFunction();\n      return call(args.options, args.defaultBlock, args.callback);\n    case 'send':\n      // return error, if no \"from\" is specified\n      if (!utils.isAddress(args.options.from)) {\n        return utils._fireError(errors.ContractNoFromAddressDefinedError(), defer.eventEmitter, defer.reject, args.callback);\n      }\n      if (_.isBoolean(this._method.payable) && !this._method.payable && args.options.value && args.options.value > 0) {\n        return utils._fireError(new Error('Can not send value to non-payable contract method or constructor'), defer.eventEmitter, defer.reject, args.callback);\n      }\n\n      // make sure receipt logs are decoded\n      var extraFormatters = {\n        receiptFormatter: function (receipt) {\n          if (_.isArray(receipt.logs)) {\n            // decode logs\n            var events = _.map(receipt.logs, function (log) {\n              return _this._parent._decodeEventABI.call({\n                name: 'ALLEVENTS',\n                jsonInterface: _this._parent.options.jsonInterface\n              }, log);\n            });\n\n            // make log names keys\n            receipt.events = {};\n            var count = 0;\n            events.forEach(function (ev) {\n              if (ev.event) {\n                // if > 1 of the same event, don't overwrite any existing events\n                if (receipt.events[ev.event]) {\n                  if (Array.isArray(receipt.events[ev.event])) {\n                    receipt.events[ev.event].push(ev);\n                  } else {\n                    receipt.events[ev.event] = [receipt.events[ev.event], ev];\n                  }\n                } else {\n                  receipt.events[ev.event] = ev;\n                }\n              } else {\n                receipt.events[count] = ev;\n                count++;\n              }\n            });\n            delete receipt.logs;\n          }\n          return receipt;\n        },\n        contractDeployFormatter: function (receipt) {\n          var newContract = _this._parent.clone();\n          newContract.options.address = receipt.contractAddress;\n          return newContract;\n        }\n      };\n      var sendTransaction = new Method({\n        name: 'sendTransaction',\n        call: 'eth_sendTransaction',\n        params: 1,\n        inputFormatter: [formatters.inputTransactionFormatter],\n        requestManager: _this._parent._requestManager,\n        accounts: _this.constructor._ethAccounts || _this._ethAccounts,\n        // is eth.accounts (necessary for wallet signing)\n        defaultAccount: _this._parent.defaultAccount,\n        defaultBlock: _this._parent.defaultBlock,\n        transactionBlockTimeout: _this._parent.transactionBlockTimeout,\n        transactionConfirmationBlocks: _this._parent.transactionConfirmationBlocks,\n        transactionPollingTimeout: _this._parent.transactionPollingTimeout,\n        defaultCommon: _this._parent.defaultCommon,\n        defaultChain: _this._parent.defaultChain,\n        defaultHardfork: _this._parent.defaultHardfork,\n        handleRevert: _this._parent.handleRevert,\n        extraFormatters: extraFormatters,\n        abiCoder: abi\n      }).createFunction();\n      return sendTransaction(args.options, args.callback);\n    default:\n      throw new Error('Method \"' + args.type + '\" not implemented.');\n  }\n};\nmodule.exports = Contract;","map":{"version":3,"names":["_","require","core","Method","utils","Subscription","subscription","formatters","errors","promiEvent","abi","Contract","jsonInterface","address","options","_this","args","Array","prototype","slice","call","arguments","Error","setProvider","packageInit","clearSubscriptions","_requestManager","constructor","isArray","ContractMissingABIError","lastArg","length","isObject","extend","_getOrSetDefaultOptions","Object","defineProperty","set","value","_address","toChecksumAddress","inputAddressFormatter","get","enumerable","methods","events","_jsonInterface","map","method","func","funcName","constant","stateMutability","payable","name","_jsonInterfaceMethodToString","type","signature","encodeFunctionSignature","_createTxObject","bind","parent","cascadeFunc","nextMethod","encodeEventSignature","event","_on","allEvents","defaultAccount","defaultBlock","handleRevert","val","common","defaultCommon","hardfork","defaultHardfork","chain","defaultChain","transactionPollingTimeout","transactionConfirmationBlocks","transactionBlockTimeout","provider","accounts","_ethAccounts","_getCallback","getCallback","isFunction","pop","_checkListener","ContractReservedEventError","getOrSetDefaultOptions","gasPrice","String","from","data","gas","gasLimit","_encodeEventABI","filter","result","f","undefined","forEach","inputBlockNumberFormatter","topics","anonymous","push","indexedTopics","inputs","i","indexed","v","encodeParameter","concat","toLowerCase","_decodeEventABI","outputLogFormatter","find","intf","indexedInputs","input","argTopics","returnValues","decodeLog","__length__","raw","_encodeMethodABI","methodSignature","_method","paramsABI","_parent","json","replace","inputLength","encodeParameters","_deployData","startsWith","returnValue","_decodeMethodReturn","outputs","decodeParameters","deploy","callback","ContractMissingDeployDataError","apply","deployData","_generateEventOptions","eventName","isString","ContractEventDoesNotExistError","isAddress","ContractNoAddressDefinedError","params","clone","once","ContractOnceRequiresCallbackError","fromBlock","err","res","sub","unsubscribe","subOptions","toBlock","console","warn","inputFormatter","inputLogFormatter","outputFormatter","subscriptionHandler","output","removed","emit","requestManager","subscribe","getPastEvents","getPastLogs","setRequestManager","buildCall","txObject","_executeMethod","request","send","encodeABI","estimateGas","InvalidNumberOfParams","_processExecuteArguments","defer","processedArgs","shift","isFinite","generateRequest","to","_fireError","eventEmitter","reject","ethAccounts","payload","inputCallFormatter","inputDefaultBlockNumberFormatter","format","hexToNumber","createFunction","abiCoder","ContractNoFromAddressDefinedError","isBoolean","extraFormatters","receiptFormatter","receipt","logs","log","count","ev","contractDeployFormatter","newContract","contractAddress","sendTransaction","inputTransactionFormatter","module","exports"],"sources":["D:/Documents/defi-staking-app-starter/defi-staking-app-starter/node_modules/web3-eth-contract/src/index.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file contract.js\n *\n * To initialize a contract use:\n *\n *  var Contract = require('web3-eth-contract');\n *  Contract.setProvider('ws://localhost:8546');\n *  var contract = new Contract(abi, address, ...);\n *\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\n\"use strict\";\n\n\nvar _ = require('underscore');\nvar core = require('web3-core');\nvar Method = require('web3-core-method');\nvar utils = require('web3-utils');\nvar Subscription = require('web3-core-subscriptions').subscription;\nvar formatters = require('web3-core-helpers').formatters;\nvar errors = require('web3-core-helpers').errors;\nvar promiEvent = require('web3-core-promievent');\nvar abi = require('web3-eth-abi');\n\n\n/**\n * Should be called to create new contract instance\n *\n * @method Contract\n * @constructor\n * @param {Array} jsonInterface\n * @param {String} address\n * @param {Object} options\n */\nvar Contract = function Contract(jsonInterface, address, options) {\n    var _this = this,\n        args = Array.prototype.slice.call(arguments);\n\n    if(!(this instanceof Contract)) {\n        throw new Error('Please use the \"new\" keyword to instantiate a web3.eth.Contract() object!');\n    }\n\n    this.setProvider = function () {\n        core.packageInit(_this, arguments);\n\n        _this.clearSubscriptions = _this._requestManager.clearSubscriptions;\n    };\n\n    // sets _requestmanager\n    core.packageInit(this, [this.constructor]);\n\n    this.clearSubscriptions = this._requestManager.clearSubscriptions;\n\n    if(!jsonInterface || !(Array.isArray(jsonInterface))) {\n        throw errors.ContractMissingABIError();\n    }\n\n    // create the options object\n    this.options = {};\n\n    var lastArg = args[args.length - 1];\n    if(_.isObject(lastArg) && !_.isArray(lastArg)) {\n        options = lastArg;\n\n        this.options = _.extend(this.options, this._getOrSetDefaultOptions(options));\n        if(_.isObject(address)) {\n            address = null;\n        }\n    }\n\n    // set address\n    Object.defineProperty(this.options, 'address', {\n        set: function(value){\n            if(value) {\n                _this._address = utils.toChecksumAddress(formatters.inputAddressFormatter(value));\n            }\n        },\n        get: function(){\n            return _this._address;\n        },\n        enumerable: true\n    });\n\n    // add method and event signatures, when the jsonInterface gets set\n    Object.defineProperty(this.options, 'jsonInterface', {\n        set: function(value){\n            _this.methods = {};\n            _this.events = {};\n\n            _this._jsonInterface = value.map(function(method) {\n                var func,\n                    funcName;\n\n                // make constant and payable backwards compatible\n                method.constant = (method.stateMutability === \"view\" || method.stateMutability === \"pure\" || method.constant);\n                method.payable = (method.stateMutability === \"payable\" || method.payable);\n\n\n                if (method.name) {\n                    funcName = utils._jsonInterfaceMethodToString(method);\n                }\n\n\n                // function\n                if (method.type === 'function') {\n                    method.signature = abi.encodeFunctionSignature(funcName);\n                    func = _this._createTxObject.bind({\n                        method: method,\n                        parent: _this\n                    });\n\n\n                    // add method only if not one already exists\n                    if(!_this.methods[method.name]) {\n                        _this.methods[method.name] = func;\n                    } else {\n                        var cascadeFunc = _this._createTxObject.bind({\n                            method: method,\n                            parent: _this,\n                            nextMethod: _this.methods[method.name]\n                        });\n                        _this.methods[method.name] = cascadeFunc;\n                    }\n\n                    // definitely add the method based on its signature\n                    _this.methods[method.signature] = func;\n\n                    // add method by name\n                    _this.methods[funcName] = func;\n\n\n                // event\n                } else if (method.type === 'event') {\n                    method.signature = abi.encodeEventSignature(funcName);\n                    var event = _this._on.bind(_this, method.signature);\n\n                    // add method only if not already exists\n                    if(!_this.events[method.name] || _this.events[method.name].name === 'bound ')\n                        _this.events[method.name] = event;\n\n                    // definitely add the method based on its signature\n                    _this.events[method.signature] = event;\n\n                    // add event by name\n                    _this.events[funcName] = event;\n                }\n\n\n                return method;\n            });\n\n            // add allEvents\n            _this.events.allEvents = _this._on.bind(_this, 'allevents');\n\n            return _this._jsonInterface;\n        },\n        get: function(){\n            return _this._jsonInterface;\n        },\n        enumerable: true\n    });\n\n    // get default account from the Class\n    var defaultAccount = this.constructor.defaultAccount;\n    var defaultBlock = this.constructor.defaultBlock || 'latest';\n\n    Object.defineProperty(this, 'handleRevert', {\n        get: function () {\n            if (_this.options.handleRevert === false || _this.options.handleRevert === true) {\n                return _this.options.handleRevert;\n            }\n\n            return this.constructor.handleRevert;\n        },\n        set: function (val) {\n            _this.options.handleRevert = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultCommon', {\n        get: function () {\n            return _this.options.common || this.constructor.defaultCommon;\n        },\n        set: function (val) {\n            _this.options.common = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultHardfork', {\n        get: function () {\n            return _this.options.hardfork || this.constructor.defaultHardfork;\n        },\n        set: function (val) {\n            _this.options.hardfork = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultChain', {\n        get: function () {\n            return _this.options.chain || this.constructor.defaultChain;\n        },\n        set: function (val) {\n            _this.options.chain = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionPollingTimeout', {\n        get: function () {\n            if (_this.options.transactionPollingTimeout === 0) {\n                return _this.options.transactionPollingTimeout;\n            }\n\n            return _this.options.transactionPollingTimeout || this.constructor.transactionPollingTimeout;\n        },\n        set: function (val) {\n            _this.options.transactionPollingTimeout = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionConfirmationBlocks', {\n        get: function () {\n            if (_this.options.transactionConfirmationBlocks === 0) {\n                return _this.options.transactionConfirmationBlocks;\n            }\n\n            return _this.options.transactionConfirmationBlocks || this.constructor.transactionConfirmationBlocks;\n        },\n        set: function (val) {\n            _this.options.transactionConfirmationBlocks = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionBlockTimeout', {\n        get: function () {\n            if (_this.options.transactionBlockTimeout === 0) {\n                return _this.options.transactionBlockTimeout;\n            }\n\n            return _this.options.transactionBlockTimeout || this.constructor.transactionBlockTimeout;\n        },\n        set: function (val) {\n            _this.options.transactionBlockTimeout = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultAccount', {\n        get: function () {\n            return defaultAccount;\n        },\n        set: function (val) {\n            if(val) {\n                defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val));\n            }\n\n            return val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultBlock', {\n        get: function () {\n            return defaultBlock;\n        },\n        set: function (val) {\n            defaultBlock = val;\n\n            return val;\n        },\n        enumerable: true\n    });\n\n    // properties\n    this.methods = {};\n    this.events = {};\n\n    this._address = null;\n    this._jsonInterface = [];\n\n    // set getter/setter properties\n    this.options.address = address;\n    this.options.jsonInterface = jsonInterface;\n\n};\n\n/**\n * Sets the new provider, creates a new requestManager, registers the \"data\" listener on the provider and sets the\n * accounts module for the Contract class.\n *\n * @method setProvider\n *\n * @param {string|provider} provider\n * @param {Accounts} accounts\n *\n * @returns void\n */\nContract.setProvider = function(provider, accounts) {\n    // Contract.currentProvider = provider;\n    core.packageInit(this, [provider]);\n\n    this._ethAccounts = accounts;\n};\n\n\n/**\n * Get the callback and modify the array if necessary\n *\n * @method _getCallback\n * @param {Array} args\n * @return {Function} the callback\n */\nContract.prototype._getCallback = function getCallback(args) {\n    if (args && _.isFunction(args[args.length - 1])) {\n        return args.pop(); // modify the args array!\n    }\n};\n\n/**\n * Checks that no listener with name \"newListener\" or \"removeListener\" is added.\n *\n * @method _checkListener\n * @param {String} type\n * @param {String} event\n * @return {Object} the contract instance\n */\nContract.prototype._checkListener = function(type, event){\n    if(event === type) {\n        throw errors.ContractReservedEventError(type);\n    }\n};\n\n\n/**\n * Use default values, if options are not available\n *\n * @method _getOrSetDefaultOptions\n * @param {Object} options the options gived by the user\n * @return {Object} the options with gaps filled by defaults\n */\nContract.prototype._getOrSetDefaultOptions = function getOrSetDefaultOptions(options) {\n    var gasPrice = options.gasPrice ? String(options.gasPrice): null;\n    var from = options.from ? utils.toChecksumAddress(formatters.inputAddressFormatter(options.from)) : null;\n\n    options.data = options.data || this.options.data;\n\n    options.from = from || this.options.from;\n    options.gasPrice = gasPrice || this.options.gasPrice;\n    options.gas = options.gas || options.gasLimit || this.options.gas;\n\n    // TODO replace with only gasLimit?\n    delete options.gasLimit;\n\n    return options;\n};\n\n\n/**\n * Should be used to encode indexed params and options to one final object\n *\n * @method _encodeEventABI\n * @param {Object} event\n * @param {Object} options\n * @return {Object} everything combined together and encoded\n */\nContract.prototype._encodeEventABI = function (event, options) {\n    options = options || {};\n    var filter = options.filter || {},\n        result = {};\n\n    ['fromBlock', 'toBlock'].filter(function (f) {\n        return options[f] !== undefined;\n    }).forEach(function (f) {\n        result[f] = formatters.inputBlockNumberFormatter(options[f]);\n    });\n\n    // use given topics\n    if(_.isArray(options.topics)) {\n        result.topics = options.topics;\n\n    // create topics based on filter\n    } else {\n\n        result.topics = [];\n\n        // add event signature\n        if (event && !event.anonymous && event.name !== 'ALLEVENTS') {\n            result.topics.push(event.signature);\n        }\n\n        // add event topics (indexed arguments)\n        if (event.name !== 'ALLEVENTS') {\n            var indexedTopics = event.inputs.filter(function (i) {\n                return i.indexed === true;\n            }).map(function (i) {\n                var value = filter[i.name];\n                if (!value) {\n                    return null;\n                }\n\n                // TODO: https://github.com/ethereum/web3.js/issues/344\n                // TODO: deal properly with components\n\n                if (_.isArray(value)) {\n                    return value.map(function (v) {\n                        return abi.encodeParameter(i.type, v);\n                    });\n                }\n                return abi.encodeParameter(i.type, value);\n            });\n\n            result.topics = result.topics.concat(indexedTopics);\n        }\n\n        if(!result.topics.length)\n            delete result.topics;\n    }\n\n    if(this.options.address) {\n        result.address = this.options.address.toLowerCase();\n    }\n\n    return result;\n};\n\n/**\n * Should be used to decode indexed params and options\n *\n * @method _decodeEventABI\n * @param {Object} data\n * @return {Object} result object with decoded indexed && not indexed params\n */\nContract.prototype._decodeEventABI = function (data) {\n    var event = this;\n\n    data.data = data.data || '';\n    data.topics = data.topics || [];\n    var result = formatters.outputLogFormatter(data);\n\n    // if allEvents get the right event\n    if(event.name === 'ALLEVENTS') {\n        event = event.jsonInterface.find(function (intf) {\n            return (intf.signature === data.topics[0]);\n        }) || {anonymous: true};\n    }\n\n    // create empty inputs if none are present (e.g. anonymous events on allEvents)\n    event.inputs = event.inputs || [];\n\n    // Handle case where an event signature shadows the current ABI with non-identical\n    // arg indexing. If # of topics doesn't match, event is anon.\n    if (!event.anonymous){\n        let indexedInputs = 0;\n        event.inputs.forEach(input => input.indexed ? indexedInputs++ : null);\n\n        if (indexedInputs > 0 && (data.topics.length !== indexedInputs + 1)){\n            event = {\n                anonymous: true,\n                inputs: []\n            };\n        }\n    }\n\n    var argTopics = event.anonymous ? data.topics : data.topics.slice(1);\n\n    result.returnValues = abi.decodeLog(event.inputs, data.data, argTopics);\n    delete result.returnValues.__length__;\n\n    // add name\n    result.event = event.name;\n\n    // add signature\n    result.signature = (event.anonymous || !data.topics[0]) ? null : data.topics[0];\n\n    // move the data and topics to \"raw\"\n    result.raw = {\n        data: result.data,\n        topics: result.topics\n    };\n    delete result.data;\n    delete result.topics;\n\n\n    return result;\n};\n\n/**\n * Encodes an ABI for a method, including signature or the method.\n * Or when constructor encodes only the constructor parameters.\n *\n * @method _encodeMethodABI\n * @param {Mixed} args the arguments to encode\n * @param {String} the encoded ABI\n */\nContract.prototype._encodeMethodABI = function _encodeMethodABI() {\n    var methodSignature = this._method.signature,\n        args = this.arguments || [];\n\n    var signature = false,\n        paramsABI = this._parent.options.jsonInterface.filter(function (json) {\n            return ((methodSignature === 'constructor' && json.type === methodSignature) ||\n                ((json.signature === methodSignature || json.signature === methodSignature.replace('0x','') || json.name === methodSignature) && json.type === 'function'));\n        }).map(function (json) {\n            var inputLength = (_.isArray(json.inputs)) ? json.inputs.length : 0;\n\n            if (inputLength !== args.length) {\n                throw new Error('The number of arguments is not matching the methods required number. You need to pass '+ inputLength +' arguments.');\n            }\n\n            if (json.type === 'function') {\n                signature = json.signature;\n            }\n            return _.isArray(json.inputs) ? json.inputs : [];\n        }).map(function (inputs) {\n            return abi.encodeParameters(inputs, args).replace('0x','');\n        })[0] || '';\n\n    // return constructor\n    if(methodSignature === 'constructor') {\n        if(!this._deployData)\n            throw new Error('The contract has no contract data option set. This is necessary to append the constructor parameters.');\n\n        if(!this._deployData.startsWith('0x')) {\n            this._deployData = '0x' + this._deployData;\n        }\n\n        return this._deployData + paramsABI;\n\n    }\n\n    // return method\n    var returnValue = (signature) ? signature + paramsABI : paramsABI;\n\n    if(!returnValue) {\n        throw new Error('Couldn\\'t find a matching contract method named \"'+ this._method.name +'\".');\n    }\n\n    return returnValue;\n};\n\n\n/**\n * Decode method return values\n *\n * @method _decodeMethodReturn\n * @param {Array} outputs\n * @param {String} returnValues\n * @return {Object} decoded output return values\n */\nContract.prototype._decodeMethodReturn = function (outputs, returnValues) {\n    if (!returnValues) {\n        return null;\n    }\n\n    returnValues = returnValues.length >= 2 ? returnValues.slice(2) : returnValues;\n    var result = abi.decodeParameters(outputs, returnValues);\n\n    if (result.__length__ === 1) {\n        return result[0];\n    }\n\n    delete result.__length__;\n    return result;\n};\n\n\n/**\n * Deploys a contract and fire events based on its state: transactionHash, receipt\n *\n * All event listeners will be removed, once the last possible event is fired (\"error\", or \"receipt\")\n *\n * @method deploy\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} EventEmitter possible events are \"error\", \"transactionHash\" and \"receipt\"\n */\nContract.prototype.deploy = function(options, callback){\n\n    options = options || {};\n\n    options.arguments = options.arguments || [];\n    options = this._getOrSetDefaultOptions(options);\n\n\n    // throw error, if no \"data\" is specified\n    if(!options.data) {\n        if (typeof callback === 'function'){\n            return callback(errors.ContractMissingDeployDataError());\n        }\n        throw errors.ContractMissingDeployDataError();\n    }\n\n    var constructor = _.find(this.options.jsonInterface, function (method) {\n        return (method.type === 'constructor');\n    }) || {};\n    constructor.signature = 'constructor';\n\n    return this._createTxObject.apply({\n        method: constructor,\n        parent: this,\n        deployData: options.data,\n        _ethAccounts: this.constructor._ethAccounts\n    }, options.arguments);\n\n};\n\n/**\n * Gets the event signature and outputFormatters\n *\n * @method _generateEventOptions\n * @param {Object} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event options object\n */\nContract.prototype._generateEventOptions = function() {\n    var args = Array.prototype.slice.call(arguments);\n\n    // get the callback\n    var callback = this._getCallback(args);\n\n    // get the options\n    var options = (_.isObject(args[args.length - 1])) ? args.pop() : {};\n\n    var eventName = (_.isString(args[0])) ? args[0] : 'allevents';\n    var event = (eventName.toLowerCase() === 'allevents') ? {\n            name: 'ALLEVENTS',\n            jsonInterface: this.options.jsonInterface\n        } : this.options.jsonInterface.find(function (json) {\n            return (json.type === 'event' && (json.name === eventName || json.signature === '0x'+ eventName.replace('0x','')));\n        });\n\n    if (!event) {\n        throw errors.ContractEventDoesNotExistError(eventName);\n    }\n\n    if (!utils.isAddress(this.options.address)) {\n        throw errors.ContractNoAddressDefinedError();\n    }\n\n    return {\n        params: this._encodeEventABI(event, options),\n        event: event,\n        callback: callback\n    };\n};\n\n/**\n * Adds event listeners and creates a subscription, and remove it once its fired.\n *\n * @method clone\n * @return {Object} the event subscription\n */\nContract.prototype.clone = function() {\n    return new this.constructor(this.options.jsonInterface, this.options.address, this.options);\n};\n\n\n/**\n * Adds event listeners and creates a subscription, and remove it once its fired.\n *\n * @method once\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event subscription\n */\nContract.prototype.once = function(event, options, callback) {\n    var args = Array.prototype.slice.call(arguments);\n\n    // get the callback\n    callback = this._getCallback(args);\n\n    if (!callback) {\n        throw errors.ContractOnceRequiresCallbackError();\n    }\n\n    // don't allow fromBlock\n    if (options)\n        delete options.fromBlock;\n\n    // don't return as once shouldn't provide \"on\"\n    this._on(event, options, function (err, res, sub) {\n        sub.unsubscribe();\n        if(_.isFunction(callback)){\n            callback(err, res, sub);\n        }\n    });\n\n    return undefined;\n};\n\n/**\n * Adds event listeners and creates a subscription.\n *\n * @method _on\n *\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n *\n * @return {Object} the event subscription\n */\nContract.prototype._on = function(){\n    var subOptions = this._generateEventOptions.apply(this, arguments);\n\n    if (subOptions.params && subOptions.params.toBlock) {\n        delete subOptions.params.toBlock;\n        console.warn('Invalid option: toBlock. Use getPastEvents for specific range.');\n    }\n\n    // prevent the event \"newListener\" and \"removeListener\" from being overwritten\n    this._checkListener('newListener', subOptions.event.name);\n    this._checkListener('removeListener', subOptions.event.name);\n\n    // TODO check if listener already exists? and reuse subscription if options are the same.\n\n    // create new subscription\n    var subscription = new Subscription({\n        subscription: {\n            params: 1,\n            inputFormatter: [formatters.inputLogFormatter],\n            outputFormatter: this._decodeEventABI.bind(subOptions.event),\n            // DUBLICATE, also in web3-eth\n            subscriptionHandler: function (output) {\n                if(output.removed) {\n                    this.emit('changed', output);\n                } else {\n                    this.emit('data', output);\n                }\n\n                if (_.isFunction(this.callback)) {\n                    this.callback(null, output, this);\n                }\n            }\n        },\n        type: 'eth',\n        requestManager: this._requestManager\n    });\n\n    subscription.subscribe('logs', subOptions.params, subOptions.callback || function () {});\n\n    return subscription;\n};\n\n/**\n * Get past events from contracts\n *\n * @method getPastEvents\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the promievent\n */\nContract.prototype.getPastEvents = function(){\n    var subOptions = this._generateEventOptions.apply(this, arguments);\n\n    var getPastLogs = new Method({\n        name: 'getPastLogs',\n        call: 'eth_getLogs',\n        params: 1,\n        inputFormatter: [formatters.inputLogFormatter],\n        outputFormatter: this._decodeEventABI.bind(subOptions.event)\n    });\n    getPastLogs.setRequestManager(this._requestManager);\n    var call = getPastLogs.buildCall();\n\n    getPastLogs = null;\n\n    return call(subOptions.params, subOptions.callback);\n};\n\n\n/**\n * returns the an object with call, send, estimate functions\n *\n * @method _createTxObject\n * @returns {Object} an object with functions to call the methods\n */\nContract.prototype._createTxObject =  function _createTxObject(){\n    var args = Array.prototype.slice.call(arguments);\n    var txObject = {};\n\n    if(this.method.type === 'function') {\n\n        txObject.call = this.parent._executeMethod.bind(txObject, 'call');\n        txObject.call.request = this.parent._executeMethod.bind(txObject, 'call', true); // to make batch requests\n\n    }\n\n    txObject.send = this.parent._executeMethod.bind(txObject, 'send');\n    txObject.send.request = this.parent._executeMethod.bind(txObject, 'send', true); // to make batch requests\n    txObject.encodeABI = this.parent._encodeMethodABI.bind(txObject);\n    txObject.estimateGas = this.parent._executeMethod.bind(txObject, 'estimate');\n\n    if (args && this.method.inputs && args.length !== this.method.inputs.length) {\n        if (this.nextMethod) {\n            return this.nextMethod.apply(null, args);\n        }\n        throw errors.InvalidNumberOfParams(args.length, this.method.inputs.length, this.method.name);\n    }\n\n    txObject.arguments = args || [];\n    txObject._method = this.method;\n    txObject._parent = this.parent;\n    txObject._ethAccounts = this.parent.constructor._ethAccounts || this._ethAccounts;\n\n    if(this.deployData) {\n        txObject._deployData = this.deployData;\n    }\n\n    return txObject;\n};\n\n\n/**\n * Generates the options for the execute call\n *\n * @method _processExecuteArguments\n * @param {Array} args\n * @param {Promise} defer\n */\nContract.prototype._processExecuteArguments = function _processExecuteArguments(args, defer) {\n    var processedArgs = {};\n\n    processedArgs.type = args.shift();\n\n    // get the callback\n    processedArgs.callback = this._parent._getCallback(args);\n\n    // get block number to use for call\n    if(processedArgs.type === 'call' && args[args.length - 1] !== true && (_.isString(args[args.length - 1]) || isFinite(args[args.length - 1])))\n        processedArgs.defaultBlock = args.pop();\n\n    // get the options\n    processedArgs.options = (_.isObject(args[args.length - 1])) ? args.pop() : {};\n\n    // get the generateRequest argument for batch requests\n    processedArgs.generateRequest = (args[args.length - 1] === true)? args.pop() : false;\n\n    processedArgs.options = this._parent._getOrSetDefaultOptions(processedArgs.options);\n    processedArgs.options.data = this.encodeABI();\n\n    // add contract address\n    if(!this._deployData && !utils.isAddress(this._parent.options.address))\n        throw errors.ContractNoAddressDefinedError();\n\n    if(!this._deployData)\n        processedArgs.options.to = this._parent.options.address;\n\n    // return error, if no \"data\" is specified\n    if(!processedArgs.options.data)\n        return utils._fireError(new Error('Couldn\\'t find a matching contract method, or the number of parameters is wrong.'), defer.eventEmitter, defer.reject, processedArgs.callback);\n\n    return processedArgs;\n};\n\n/**\n * Executes a call, transact or estimateGas on a contract function\n *\n * @method _executeMethod\n * @param {String} type the type this execute function should execute\n * @param {Boolean} makeRequest if true, it simply returns the request parameters, rather than executing it\n */\nContract.prototype._executeMethod = function _executeMethod(){\n    var _this = this,\n        args = this._parent._processExecuteArguments.call(this, Array.prototype.slice.call(arguments), defer),\n        defer = promiEvent((args.type !== 'send')),\n        ethAccounts = _this.constructor._ethAccounts || _this._ethAccounts;\n\n    // simple return request for batch requests\n    if(args.generateRequest) {\n\n        var payload = {\n            params: [formatters.inputCallFormatter.call(this._parent, args.options)],\n            callback: args.callback\n        };\n\n        if(args.type === 'call') {\n            payload.params.push(formatters.inputDefaultBlockNumberFormatter.call(this._parent, args.defaultBlock));\n            payload.method = 'eth_call';\n            payload.format = this._parent._decodeMethodReturn.bind(null, this._method.outputs);\n        } else {\n            payload.method = 'eth_sendTransaction';\n        }\n\n        return payload;\n\n    }\n\n    switch (args.type) {\n        case 'estimate':\n\n            var estimateGas = (new Method({\n                name: 'estimateGas',\n                call: 'eth_estimateGas',\n                params: 1,\n                inputFormatter: [formatters.inputCallFormatter],\n                outputFormatter: utils.hexToNumber,\n                requestManager: _this._parent._requestManager,\n                accounts: ethAccounts, // is eth.accounts (necessary for wallet signing)\n                defaultAccount: _this._parent.defaultAccount,\n                defaultBlock: _this._parent.defaultBlock\n            })).createFunction();\n\n            return estimateGas(args.options, args.callback);\n\n        case 'call':\n\n            // TODO check errors: missing \"from\" should give error on deploy and send, call ?\n\n            var call = (new Method({\n                name: 'call',\n                call: 'eth_call',\n                params: 2,\n                inputFormatter: [formatters.inputCallFormatter, formatters.inputDefaultBlockNumberFormatter],\n                // add output formatter for decoding\n                outputFormatter: function (result) {\n                    return _this._parent._decodeMethodReturn(_this._method.outputs, result);\n                },\n                requestManager: _this._parent._requestManager,\n                accounts: ethAccounts, // is eth.accounts (necessary for wallet signing)\n                defaultAccount: _this._parent.defaultAccount,\n                defaultBlock: _this._parent.defaultBlock,\n                handleRevert: _this._parent.handleRevert,\n                abiCoder: abi\n            })).createFunction();\n\n            return call(args.options, args.defaultBlock, args.callback);\n\n        case 'send':\n\n            // return error, if no \"from\" is specified\n            if(!utils.isAddress(args.options.from)) {\n                return utils._fireError(errors.ContractNoFromAddressDefinedError(), defer.eventEmitter, defer.reject, args.callback);\n            }\n\n            if (_.isBoolean(this._method.payable) && !this._method.payable && args.options.value && args.options.value > 0) {\n                return utils._fireError(new Error('Can not send value to non-payable contract method or constructor'), defer.eventEmitter, defer.reject, args.callback);\n            }\n\n\n            // make sure receipt logs are decoded\n            var extraFormatters = {\n                receiptFormatter: function (receipt) {\n                    if (_.isArray(receipt.logs)) {\n\n                        // decode logs\n                        var events = _.map(receipt.logs, function(log) {\n                            return _this._parent._decodeEventABI.call({\n                                name: 'ALLEVENTS',\n                                jsonInterface: _this._parent.options.jsonInterface\n                            }, log);\n                        });\n\n                        // make log names keys\n                        receipt.events = {};\n                        var count = 0;\n                        events.forEach(function (ev) {\n                            if (ev.event) {\n                                // if > 1 of the same event, don't overwrite any existing events\n                                if (receipt.events[ev.event]) {\n                                    if (Array.isArray(receipt.events[ ev.event ])) {\n                                        receipt.events[ ev.event ].push(ev);\n                                    } else {\n                                        receipt.events[ev.event] = [receipt.events[ev.event], ev];\n                                    }\n                                } else {\n                                    receipt.events[ ev.event ] = ev;\n                                }\n                            } else {\n                                receipt.events[count] = ev;\n                                count++;\n                            }\n                        });\n\n                        delete receipt.logs;\n                    }\n                    return receipt;\n                },\n                contractDeployFormatter: function (receipt) {\n                    var newContract = _this._parent.clone();\n                    newContract.options.address = receipt.contractAddress;\n                    return newContract;\n                }\n            };\n\n            var sendTransaction = (new Method({\n                name: 'sendTransaction',\n                call: 'eth_sendTransaction',\n                params: 1,\n                inputFormatter: [formatters.inputTransactionFormatter],\n                requestManager: _this._parent._requestManager,\n                accounts: _this.constructor._ethAccounts || _this._ethAccounts, // is eth.accounts (necessary for wallet signing)\n                defaultAccount: _this._parent.defaultAccount,\n                defaultBlock: _this._parent.defaultBlock,\n                transactionBlockTimeout: _this._parent.transactionBlockTimeout,\n                transactionConfirmationBlocks: _this._parent.transactionConfirmationBlocks,\n                transactionPollingTimeout: _this._parent.transactionPollingTimeout,\n                defaultCommon: _this._parent.defaultCommon,\n                defaultChain: _this._parent.defaultChain,\n                defaultHardfork: _this._parent.defaultHardfork,\n                handleRevert: _this._parent.handleRevert,\n                extraFormatters: extraFormatters,\n                abiCoder: abi\n            })).createFunction();\n\n            return sendTransaction(args.options, args.callback);\n\n        default:\n            throw new Error('Method \"' + args.type + '\" not implemented.');\n\n    }\n\n\n};\n\nmodule.exports = Contract;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}