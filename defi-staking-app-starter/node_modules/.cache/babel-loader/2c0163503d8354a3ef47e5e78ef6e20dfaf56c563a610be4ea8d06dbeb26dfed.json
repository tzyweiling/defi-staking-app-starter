{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Plugins = void 0;\nconst plugins = [];\nconst interactorsInitializers = new Map();\nconst updatersInitializers = new Map();\nconst interactors = new Map();\nconst updaters = new Map();\nconst presets = new Map();\nconst drawers = new Map();\nconst pathGenerators = new Map();\nclass Plugins {\n  static getPlugin(plugin) {\n    return plugins.find(t => t.id === plugin);\n  }\n  static addPlugin(plugin) {\n    if (!Plugins.getPlugin(plugin.id)) {\n      plugins.push(plugin);\n    }\n  }\n  static getAvailablePlugins(container) {\n    const res = new Map();\n    for (const plugin of plugins) {\n      if (!plugin.needsPlugin(container.actualOptions)) {\n        continue;\n      }\n      res.set(plugin.id, plugin.getPlugin(container));\n    }\n    return res;\n  }\n  static loadOptions(options, sourceOptions) {\n    for (const plugin of plugins) {\n      plugin.loadOptions(options, sourceOptions);\n    }\n  }\n  static getPreset(preset) {\n    return presets.get(preset);\n  }\n  static addPreset(presetKey, options) {\n    let override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (override || !Plugins.getPreset(presetKey)) {\n      presets.set(presetKey, options);\n    }\n  }\n  static addShapeDrawer(type, drawer) {\n    if (!Plugins.getShapeDrawer(type)) {\n      drawers.set(type, drawer);\n    }\n  }\n  static getShapeDrawer(type) {\n    return drawers.get(type);\n  }\n  static getSupportedShapes() {\n    return drawers.keys();\n  }\n  static getPathGenerator(type) {\n    return pathGenerators.get(type);\n  }\n  static addPathGenerator(type, pathGenerator) {\n    if (!Plugins.getPathGenerator(type)) {\n      pathGenerators.set(type, pathGenerator);\n    }\n  }\n  static getInteractors(container) {\n    let res = interactors.get(container);\n    if (!res) {\n      res = [...interactorsInitializers.values()].map(t => t(container));\n      interactors.set(container, res);\n    }\n    return res;\n  }\n  static addInteractor(name, initInteractor) {\n    interactorsInitializers.set(name, initInteractor);\n  }\n  static getUpdaters(container) {\n    let res = updaters.get(container);\n    if (!res) {\n      res = [...updatersInitializers.values()].map(t => t(container));\n      updaters.set(container, res);\n    }\n    return res;\n  }\n  static addParticleUpdater(name, initUpdater) {\n    updatersInitializers.set(name, initUpdater);\n  }\n}\nexports.Plugins = Plugins;","map":{"version":3,"names":["Object","defineProperty","exports","value","Plugins","plugins","interactorsInitializers","Map","updatersInitializers","interactors","updaters","presets","drawers","pathGenerators","getPlugin","plugin","find","t","id","addPlugin","push","getAvailablePlugins","container","res","needsPlugin","actualOptions","set","loadOptions","options","sourceOptions","getPreset","preset","get","addPreset","presetKey","override","arguments","length","undefined","addShapeDrawer","type","drawer","getShapeDrawer","getSupportedShapes","keys","getPathGenerator","addPathGenerator","pathGenerator","getInteractors","values","map","addInteractor","name","initInteractor","getUpdaters","addParticleUpdater","initUpdater"],"sources":["D:/Documents/defi-staking-app-starter/defi-staking-app-starter/node_modules/tsparticles/Utils/Plugins.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Plugins = void 0;\nconst plugins = [];\nconst interactorsInitializers = new Map();\nconst updatersInitializers = new Map();\nconst interactors = new Map();\nconst updaters = new Map();\nconst presets = new Map();\nconst drawers = new Map();\nconst pathGenerators = new Map();\nclass Plugins {\n    static getPlugin(plugin) {\n        return plugins.find((t) => t.id === plugin);\n    }\n    static addPlugin(plugin) {\n        if (!Plugins.getPlugin(plugin.id)) {\n            plugins.push(plugin);\n        }\n    }\n    static getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    static loadOptions(options, sourceOptions) {\n        for (const plugin of plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    static getPreset(preset) {\n        return presets.get(preset);\n    }\n    static addPreset(presetKey, options, override = false) {\n        if (override || !Plugins.getPreset(presetKey)) {\n            presets.set(presetKey, options);\n        }\n    }\n    static addShapeDrawer(type, drawer) {\n        if (!Plugins.getShapeDrawer(type)) {\n            drawers.set(type, drawer);\n        }\n    }\n    static getShapeDrawer(type) {\n        return drawers.get(type);\n    }\n    static getSupportedShapes() {\n        return drawers.keys();\n    }\n    static getPathGenerator(type) {\n        return pathGenerators.get(type);\n    }\n    static addPathGenerator(type, pathGenerator) {\n        if (!Plugins.getPathGenerator(type)) {\n            pathGenerators.set(type, pathGenerator);\n        }\n    }\n    static getInteractors(container) {\n        let res = interactors.get(container);\n        if (!res) {\n            res = [...interactorsInitializers.values()].map((t) => t(container));\n            interactors.set(container, res);\n        }\n        return res;\n    }\n    static addInteractor(name, initInteractor) {\n        interactorsInitializers.set(name, initInteractor);\n    }\n    static getUpdaters(container) {\n        let res = updaters.get(container);\n        if (!res) {\n            res = [...updatersInitializers.values()].map((t) => t(container));\n            updaters.set(container, res);\n        }\n        return res;\n    }\n    static addParticleUpdater(name, initUpdater) {\n        updatersInitializers.set(name, initUpdater);\n    }\n}\nexports.Plugins = Plugins;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,MAAMC,OAAO,GAAG,EAAE;AAClB,MAAMC,uBAAuB,GAAG,IAAIC,GAAG,CAAC,CAAC;AACzC,MAAMC,oBAAoB,GAAG,IAAID,GAAG,CAAC,CAAC;AACtC,MAAME,WAAW,GAAG,IAAIF,GAAG,CAAC,CAAC;AAC7B,MAAMG,QAAQ,GAAG,IAAIH,GAAG,CAAC,CAAC;AAC1B,MAAMI,OAAO,GAAG,IAAIJ,GAAG,CAAC,CAAC;AACzB,MAAMK,OAAO,GAAG,IAAIL,GAAG,CAAC,CAAC;AACzB,MAAMM,cAAc,GAAG,IAAIN,GAAG,CAAC,CAAC;AAChC,MAAMH,OAAO,CAAC;EACV,OAAOU,SAASA,CAACC,MAAM,EAAE;IACrB,OAAOV,OAAO,CAACW,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKH,MAAM,CAAC;EAC/C;EACA,OAAOI,SAASA,CAACJ,MAAM,EAAE;IACrB,IAAI,CAACX,OAAO,CAACU,SAAS,CAACC,MAAM,CAACG,EAAE,CAAC,EAAE;MAC/Bb,OAAO,CAACe,IAAI,CAACL,MAAM,CAAC;IACxB;EACJ;EACA,OAAOM,mBAAmBA,CAACC,SAAS,EAAE;IAClC,MAAMC,GAAG,GAAG,IAAIhB,GAAG,CAAC,CAAC;IACrB,KAAK,MAAMQ,MAAM,IAAIV,OAAO,EAAE;MAC1B,IAAI,CAACU,MAAM,CAACS,WAAW,CAACF,SAAS,CAACG,aAAa,CAAC,EAAE;QAC9C;MACJ;MACAF,GAAG,CAACG,GAAG,CAACX,MAAM,CAACG,EAAE,EAAEH,MAAM,CAACD,SAAS,CAACQ,SAAS,CAAC,CAAC;IACnD;IACA,OAAOC,GAAG;EACd;EACA,OAAOI,WAAWA,CAACC,OAAO,EAAEC,aAAa,EAAE;IACvC,KAAK,MAAMd,MAAM,IAAIV,OAAO,EAAE;MAC1BU,MAAM,CAACY,WAAW,CAACC,OAAO,EAAEC,aAAa,CAAC;IAC9C;EACJ;EACA,OAAOC,SAASA,CAACC,MAAM,EAAE;IACrB,OAAOpB,OAAO,CAACqB,GAAG,CAACD,MAAM,CAAC;EAC9B;EACA,OAAOE,SAASA,CAACC,SAAS,EAAEN,OAAO,EAAoB;IAAA,IAAlBO,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;IACjD,IAAID,QAAQ,IAAI,CAAC/B,OAAO,CAAC0B,SAAS,CAACI,SAAS,CAAC,EAAE;MAC3CvB,OAAO,CAACe,GAAG,CAACQ,SAAS,EAAEN,OAAO,CAAC;IACnC;EACJ;EACA,OAAOW,cAAcA,CAACC,IAAI,EAAEC,MAAM,EAAE;IAChC,IAAI,CAACrC,OAAO,CAACsC,cAAc,CAACF,IAAI,CAAC,EAAE;MAC/B5B,OAAO,CAACc,GAAG,CAACc,IAAI,EAAEC,MAAM,CAAC;IAC7B;EACJ;EACA,OAAOC,cAAcA,CAACF,IAAI,EAAE;IACxB,OAAO5B,OAAO,CAACoB,GAAG,CAACQ,IAAI,CAAC;EAC5B;EACA,OAAOG,kBAAkBA,CAAA,EAAG;IACxB,OAAO/B,OAAO,CAACgC,IAAI,CAAC,CAAC;EACzB;EACA,OAAOC,gBAAgBA,CAACL,IAAI,EAAE;IAC1B,OAAO3B,cAAc,CAACmB,GAAG,CAACQ,IAAI,CAAC;EACnC;EACA,OAAOM,gBAAgBA,CAACN,IAAI,EAAEO,aAAa,EAAE;IACzC,IAAI,CAAC3C,OAAO,CAACyC,gBAAgB,CAACL,IAAI,CAAC,EAAE;MACjC3B,cAAc,CAACa,GAAG,CAACc,IAAI,EAAEO,aAAa,CAAC;IAC3C;EACJ;EACA,OAAOC,cAAcA,CAAC1B,SAAS,EAAE;IAC7B,IAAIC,GAAG,GAAGd,WAAW,CAACuB,GAAG,CAACV,SAAS,CAAC;IACpC,IAAI,CAACC,GAAG,EAAE;MACNA,GAAG,GAAG,CAAC,GAAGjB,uBAAuB,CAAC2C,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEjC,CAAC,IAAKA,CAAC,CAACK,SAAS,CAAC,CAAC;MACpEb,WAAW,CAACiB,GAAG,CAACJ,SAAS,EAAEC,GAAG,CAAC;IACnC;IACA,OAAOA,GAAG;EACd;EACA,OAAO4B,aAAaA,CAACC,IAAI,EAAEC,cAAc,EAAE;IACvC/C,uBAAuB,CAACoB,GAAG,CAAC0B,IAAI,EAAEC,cAAc,CAAC;EACrD;EACA,OAAOC,WAAWA,CAAChC,SAAS,EAAE;IAC1B,IAAIC,GAAG,GAAGb,QAAQ,CAACsB,GAAG,CAACV,SAAS,CAAC;IACjC,IAAI,CAACC,GAAG,EAAE;MACNA,GAAG,GAAG,CAAC,GAAGf,oBAAoB,CAACyC,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEjC,CAAC,IAAKA,CAAC,CAACK,SAAS,CAAC,CAAC;MACjEZ,QAAQ,CAACgB,GAAG,CAACJ,SAAS,EAAEC,GAAG,CAAC;IAChC;IACA,OAAOA,GAAG;EACd;EACA,OAAOgC,kBAAkBA,CAACH,IAAI,EAAEI,WAAW,EAAE;IACzChD,oBAAoB,CAACkB,GAAG,CAAC0B,IAAI,EAAEI,WAAW,CAAC;EAC/C;AACJ;AACAtD,OAAO,CAACE,OAAO,GAAGA,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}