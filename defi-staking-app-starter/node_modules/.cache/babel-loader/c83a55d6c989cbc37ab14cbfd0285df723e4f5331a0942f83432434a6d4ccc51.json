{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file index.js\n * @authors:\n *   Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\nvar _ = require('underscore');\nvar errors = require('web3-core-helpers').errors;\nvar oboe = require('oboe');\nvar IpcProvider = function IpcProvider(path, net) {\n  var _this = this;\n  this.responseCallbacks = {};\n  this.notificationCallbacks = [];\n  this.path = path;\n  this.connected = false;\n  this.connection = net.connect({\n    path: this.path\n  });\n  this.addDefaultEvents();\n\n  // LISTEN FOR CONNECTION RESPONSES\n  var callback = function (result) {\n    /*jshint maxcomplexity: 6 */\n\n    var id = null;\n\n    // get the id which matches the returned id\n    if (_.isArray(result)) {\n      result.forEach(function (load) {\n        if (_this.responseCallbacks[load.id]) id = load.id;\n      });\n    } else {\n      id = result.id;\n    }\n\n    // notification\n    if (!id && result.method.indexOf('_subscription') !== -1) {\n      _this.notificationCallbacks.forEach(function (callback) {\n        if (_.isFunction(callback)) callback(result);\n      });\n\n      // fire the callback\n    } else if (_this.responseCallbacks[id]) {\n      _this.responseCallbacks[id](null, result);\n      delete _this.responseCallbacks[id];\n    }\n  };\n\n  // use oboe.js for Sockets\n  if (net.constructor.name === 'Socket') {\n    oboe(this.connection).done(callback);\n  } else {\n    this.connection.on('data', function (data) {\n      _this._parseResponse(data.toString()).forEach(callback);\n    });\n  }\n};\n\n/**\nWill add the error and end event to timeout existing calls\n\n@method addDefaultEvents\n*/\nIpcProvider.prototype.addDefaultEvents = function () {\n  var _this = this;\n  this.connection.on('connect', function () {\n    _this.connected = true;\n  });\n  this.connection.on('close', function () {\n    _this.connected = false;\n  });\n  this.connection.on('error', function () {\n    _this._timeout();\n  });\n  this.connection.on('end', function () {\n    _this._timeout();\n  });\n  this.connection.on('timeout', function () {\n    _this._timeout();\n  });\n};\n\n/**\n Will parse the response and make an array out of it.\n\n NOTE, this exists for backwards compatibility reasons.\n\n @method _parseResponse\n @param {String} data\n */\nIpcProvider.prototype._parseResponse = function (data) {\n  var _this = this,\n    returnValues = [];\n\n  // DE-CHUNKER\n  var dechunkedData = data.replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n  .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n  .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n  .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n  .split('|--|');\n  dechunkedData.forEach(function (data) {\n    // prepend the last chunk\n    if (_this.lastChunk) data = _this.lastChunk + data;\n    var result = null;\n    try {\n      result = JSON.parse(data);\n    } catch (e) {\n      _this.lastChunk = data;\n\n      // start timeout to cancel all requests\n      clearTimeout(_this.lastChunkTimeout);\n      _this.lastChunkTimeout = setTimeout(function () {\n        _this._timeout();\n        throw errors.InvalidResponse(data);\n      }, 1000 * 15);\n      return;\n    }\n\n    // cancel timeout and set chunk to null\n    clearTimeout(_this.lastChunkTimeout);\n    _this.lastChunk = null;\n    if (result) returnValues.push(result);\n  });\n  return returnValues;\n};\n\n/**\nGet the adds a callback to the responseCallbacks object,\nwhich will be called if a response matching the response Id will arrive.\n\n@method _addResponseCallback\n*/\nIpcProvider.prototype._addResponseCallback = function (payload, callback) {\n  var id = payload.id || payload[0].id;\n  var method = payload.method || payload[0].method;\n  this.responseCallbacks[id] = callback;\n  this.responseCallbacks[id].method = method;\n};\n\n/**\nTimeout all requests when the end/error event is fired\n\n@method _timeout\n*/\nIpcProvider.prototype._timeout = function () {\n  for (var key in this.responseCallbacks) {\n    if (this.responseCallbacks.hasOwnProperty(key)) {\n      this.responseCallbacks[key](errors.InvalidConnection('on IPC'));\n      delete this.responseCallbacks[key];\n    }\n  }\n};\n\n/**\n Try to reconnect\n\n @method reconnect\n */\nIpcProvider.prototype.reconnect = function () {\n  this.connection.connect({\n    path: this.path\n  });\n};\nIpcProvider.prototype.send = function (payload, callback) {\n  // try reconnect, when connection is gone\n  if (!this.connection.writable) this.connection.connect({\n    path: this.path\n  });\n  this.connection.write(JSON.stringify(payload));\n  this._addResponseCallback(payload, callback);\n};\n\n/**\nSubscribes to provider events.provider\n\n@method on\n@param {String} type    'notification', 'connect', 'error', 'end' or 'data'\n@param {Function} callback   the callback to call\n*/\nIpcProvider.prototype.on = function (type, callback) {\n  if (typeof callback !== 'function') throw new Error('The second parameter callback must be a function.');\n  switch (type) {\n    case 'data':\n      this.notificationCallbacks.push(callback);\n      break;\n\n    // adds error, end, timeout, connect\n    default:\n      this.connection.on(type, callback);\n      break;\n  }\n};\n\n/**\n Subscribes to provider events.provider\n\n @method on\n @param {String} type    'connect', 'error', 'end' or 'data'\n @param {Function} callback   the callback to call\n */\nIpcProvider.prototype.once = function (type, callback) {\n  if (typeof callback !== 'function') throw new Error('The second parameter callback must be a function.');\n  this.connection.once(type, callback);\n};\n\n/**\nRemoves event listener\n\n@method removeListener\n@param {String} type    'data', 'connect', 'error', 'end' or 'data'\n@param {Function} callback   the callback to call\n*/\nIpcProvider.prototype.removeListener = function (type, callback) {\n  var _this = this;\n  switch (type) {\n    case 'data':\n      this.notificationCallbacks.forEach(function (cb, index) {\n        if (cb === callback) _this.notificationCallbacks.splice(index, 1);\n      });\n      break;\n    default:\n      this.connection.removeListener(type, callback);\n      break;\n  }\n};\n\n/**\nRemoves all event listeners\n\n@method removeAllListeners\n@param {String} type    'data', 'connect', 'error', 'end' or 'data'\n*/\nIpcProvider.prototype.removeAllListeners = function (type) {\n  switch (type) {\n    case 'data':\n      this.notificationCallbacks = [];\n      break;\n    default:\n      this.connection.removeAllListeners(type);\n      break;\n  }\n};\n\n/**\nResets the providers, clears all callbacks\n\n@method reset\n*/\nIpcProvider.prototype.reset = function () {\n  this._timeout();\n  this.notificationCallbacks = [];\n  this.connection.removeAllListeners('error');\n  this.connection.removeAllListeners('end');\n  this.connection.removeAllListeners('timeout');\n  this.addDefaultEvents();\n};\n\n/**\n * Returns the desired boolean.\n *\n * @method supportsSubscriptions\n * @returns {boolean}\n */\nIpcProvider.prototype.supportsSubscriptions = function () {\n  return true;\n};\nmodule.exports = IpcProvider;","map":{"version":3,"names":["_","require","errors","oboe","IpcProvider","path","net","_this","responseCallbacks","notificationCallbacks","connected","connection","connect","addDefaultEvents","callback","result","id","isArray","forEach","load","method","indexOf","isFunction","constructor","name","done","on","data","_parseResponse","toString","prototype","_timeout","returnValues","dechunkedData","replace","split","lastChunk","JSON","parse","e","clearTimeout","lastChunkTimeout","setTimeout","InvalidResponse","push","_addResponseCallback","payload","key","hasOwnProperty","InvalidConnection","reconnect","send","writable","write","stringify","type","Error","once","removeListener","cb","index","splice","removeAllListeners","reset","supportsSubscriptions","module","exports"],"sources":["D:/Documents/defi-staking-app-starter/defi-staking-app-starter/node_modules/web3-providers-ipc/src/index.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file index.js\n * @authors:\n *   Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\nvar _ = require('underscore');\nvar errors = require('web3-core-helpers').errors;\nvar oboe = require('oboe');\n\n\nvar IpcProvider = function IpcProvider(path, net) {\n    var _this = this;\n    this.responseCallbacks = {};\n    this.notificationCallbacks = [];\n    this.path = path;\n    this.connected = false;\n\n    this.connection = net.connect({path: this.path});\n\n    this.addDefaultEvents();\n\n    // LISTEN FOR CONNECTION RESPONSES\n    var callback = function(result) {\n        /*jshint maxcomplexity: 6 */\n\n        var id = null;\n\n        // get the id which matches the returned id\n        if(_.isArray(result)) {\n            result.forEach(function(load){\n                if(_this.responseCallbacks[load.id])\n                    id = load.id;\n            });\n        } else {\n            id = result.id;\n        }\n\n        // notification\n        if(!id && result.method.indexOf('_subscription') !== -1) {\n            _this.notificationCallbacks.forEach(function(callback){\n                if(_.isFunction(callback))\n                    callback(result);\n            });\n\n            // fire the callback\n        } else if(_this.responseCallbacks[id]) {\n            _this.responseCallbacks[id](null, result);\n            delete _this.responseCallbacks[id];\n        }\n    };\n\n    // use oboe.js for Sockets\n    if (net.constructor.name === 'Socket') {\n        oboe(this.connection)\n        .done(callback);\n    } else {\n        this.connection.on('data', function(data){\n            _this._parseResponse(data.toString()).forEach(callback);\n        });\n    }\n};\n\n/**\nWill add the error and end event to timeout existing calls\n\n@method addDefaultEvents\n*/\nIpcProvider.prototype.addDefaultEvents = function(){\n    var _this = this;\n\n    this.connection.on('connect', function(){\n        _this.connected = true;\n    });\n\n    this.connection.on('close', function(){\n        _this.connected = false;\n    });\n\n    this.connection.on('error', function(){\n        _this._timeout();\n    });\n\n    this.connection.on('end', function(){\n        _this._timeout();\n    });\n\n    this.connection.on('timeout', function(){\n        _this._timeout();\n    });\n};\n\n\n/**\n Will parse the response and make an array out of it.\n\n NOTE, this exists for backwards compatibility reasons.\n\n @method _parseResponse\n @param {String} data\n */\nIpcProvider.prototype._parseResponse = function(data) {\n    var _this = this,\n        returnValues = [];\n\n    // DE-CHUNKER\n    var dechunkedData = data\n        .replace(/\\}[\\n\\r]?\\{/g,'}|--|{') // }{\n        .replace(/\\}\\][\\n\\r]?\\[\\{/g,'}]|--|[{') // }][{\n        .replace(/\\}[\\n\\r]?\\[\\{/g,'}|--|[{') // }[{\n        .replace(/\\}\\][\\n\\r]?\\{/g,'}]|--|{') // }]{\n        .split('|--|');\n\n    dechunkedData.forEach(function(data){\n\n        // prepend the last chunk\n        if(_this.lastChunk)\n            data = _this.lastChunk + data;\n\n        var result = null;\n\n        try {\n            result = JSON.parse(data);\n\n        } catch(e) {\n\n            _this.lastChunk = data;\n\n            // start timeout to cancel all requests\n            clearTimeout(_this.lastChunkTimeout);\n            _this.lastChunkTimeout = setTimeout(function(){\n                _this._timeout();\n                throw errors.InvalidResponse(data);\n            }, 1000 * 15);\n\n            return;\n        }\n\n        // cancel timeout and set chunk to null\n        clearTimeout(_this.lastChunkTimeout);\n        _this.lastChunk = null;\n\n        if(result)\n            returnValues.push(result);\n    });\n\n    return returnValues;\n};\n\n\n/**\nGet the adds a callback to the responseCallbacks object,\nwhich will be called if a response matching the response Id will arrive.\n\n@method _addResponseCallback\n*/\nIpcProvider.prototype._addResponseCallback = function(payload, callback) {\n    var id = payload.id || payload[0].id;\n    var method = payload.method || payload[0].method;\n\n    this.responseCallbacks[id] = callback;\n    this.responseCallbacks[id].method = method;\n};\n\n/**\nTimeout all requests when the end/error event is fired\n\n@method _timeout\n*/\nIpcProvider.prototype._timeout = function() {\n    for(var key in this.responseCallbacks) {\n        if(this.responseCallbacks.hasOwnProperty(key)){\n            this.responseCallbacks[key](errors.InvalidConnection('on IPC'));\n            delete this.responseCallbacks[key];\n        }\n    }\n};\n\n/**\n Try to reconnect\n\n @method reconnect\n */\nIpcProvider.prototype.reconnect = function() {\n    this.connection.connect({path: this.path});\n};\n\n\nIpcProvider.prototype.send = function (payload, callback) {\n    // try reconnect, when connection is gone\n    if(!this.connection.writable)\n        this.connection.connect({path: this.path});\n\n\n    this.connection.write(JSON.stringify(payload));\n    this._addResponseCallback(payload, callback);\n};\n\n/**\nSubscribes to provider events.provider\n\n@method on\n@param {String} type    'notification', 'connect', 'error', 'end' or 'data'\n@param {Function} callback   the callback to call\n*/\nIpcProvider.prototype.on = function (type, callback) {\n\n    if(typeof callback !== 'function')\n        throw new Error('The second parameter callback must be a function.');\n\n    switch(type){\n        case 'data':\n            this.notificationCallbacks.push(callback);\n            break;\n\n        // adds error, end, timeout, connect\n        default:\n            this.connection.on(type, callback);\n            break;\n    }\n};\n\n/**\n Subscribes to provider events.provider\n\n @method on\n @param {String} type    'connect', 'error', 'end' or 'data'\n @param {Function} callback   the callback to call\n */\nIpcProvider.prototype.once = function (type, callback) {\n\n    if(typeof callback !== 'function')\n        throw new Error('The second parameter callback must be a function.');\n\n    this.connection.once(type, callback);\n};\n\n/**\nRemoves event listener\n\n@method removeListener\n@param {String} type    'data', 'connect', 'error', 'end' or 'data'\n@param {Function} callback   the callback to call\n*/\nIpcProvider.prototype.removeListener = function (type, callback) {\n    var _this = this;\n\n    switch(type){\n        case 'data':\n            this.notificationCallbacks.forEach(function(cb, index){\n                if(cb === callback)\n                    _this.notificationCallbacks.splice(index, 1);\n            });\n            break;\n\n        default:\n            this.connection.removeListener(type, callback);\n            break;\n    }\n};\n\n/**\nRemoves all event listeners\n\n@method removeAllListeners\n@param {String} type    'data', 'connect', 'error', 'end' or 'data'\n*/\nIpcProvider.prototype.removeAllListeners = function (type) {\n    switch(type){\n        case 'data':\n            this.notificationCallbacks = [];\n            break;\n\n        default:\n            this.connection.removeAllListeners(type);\n            break;\n    }\n};\n\n/**\nResets the providers, clears all callbacks\n\n@method reset\n*/\nIpcProvider.prototype.reset = function () {\n    this._timeout();\n    this.notificationCallbacks = [];\n\n    this.connection.removeAllListeners('error');\n    this.connection.removeAllListeners('end');\n    this.connection.removeAllListeners('timeout');\n\n    this.addDefaultEvents();\n};\n\n/**\n * Returns the desired boolean.\n *\n * @method supportsSubscriptions\n * @returns {boolean}\n */\nIpcProvider.prototype.supportsSubscriptions = function () {\n    return true;\n};\n\nmodule.exports = IpcProvider;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}