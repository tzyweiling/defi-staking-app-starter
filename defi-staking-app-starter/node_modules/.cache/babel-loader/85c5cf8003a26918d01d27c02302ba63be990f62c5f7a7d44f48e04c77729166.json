{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file givenProvider.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\nvar givenProvider = null;\n\n// ADD GIVEN PROVIDER\n/* jshint ignore:start */\nvar global;\ntry {\n  global = Function('return this')();\n} catch (e) {\n  global = window;\n}\n\n// EIP-1193: window.ethereum\nif (typeof global.ethereum !== 'undefined') {\n  givenProvider = global.ethereum;\n\n  // Legacy web3.currentProvider\n} else if (typeof global.web3 !== 'undefined' && global.web3.currentProvider) {\n  if (global.web3.currentProvider.sendAsync) {\n    global.web3.currentProvider.send = global.web3.currentProvider.sendAsync;\n    delete global.web3.currentProvider.sendAsync;\n  }\n\n  // if connection is 'ipcProviderWrapper', add subscription support\n  if (!global.web3.currentProvider.on && global.web3.currentProvider.connection && global.web3.currentProvider.connection.constructor.name === 'ipcProviderWrapper') {\n    global.web3.currentProvider.on = function (type, callback) {\n      if (typeof callback !== 'function') throw new Error('The second parameter callback must be a function.');\n      switch (type) {\n        case 'data':\n          this.connection.on('data', function (data) {\n            var result = '';\n            data = data.toString();\n            try {\n              result = JSON.parse(data);\n            } catch (e) {\n              return callback(new Error('Couldn\\'t parse response data' + data));\n            }\n\n            // notification\n            if (!result.id && result.method.indexOf('_subscription') !== -1) {\n              callback(null, result);\n            }\n          });\n          break;\n        default:\n          this.connection.on(type, callback);\n          break;\n      }\n    };\n  }\n  givenProvider = global.web3.currentProvider;\n}\n/* jshint ignore:end */\n\nmodule.exports = givenProvider;","map":{"version":3,"names":["givenProvider","global","Function","e","window","ethereum","web3","currentProvider","sendAsync","send","on","connection","constructor","name","type","callback","Error","data","result","toString","JSON","parse","id","method","indexOf","module","exports"],"sources":["D:/Documents/defi-staking-app-starter/defi-staking-app-starter/node_modules/web3-core-requestmanager/src/givenProvider.js"],"sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file givenProvider.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\nvar givenProvider = null;\n\n// ADD GIVEN PROVIDER\n/* jshint ignore:start */\nvar global;\ntry {\n  global = Function('return this')();\n} catch (e) {\n  global = window;\n}\n\n// EIP-1193: window.ethereum\nif (typeof global.ethereum !== 'undefined') {\n    givenProvider = global.ethereum;\n\n// Legacy web3.currentProvider\n} else if(typeof global.web3 !== 'undefined' && global.web3.currentProvider) {\n\n    if(global.web3.currentProvider.sendAsync) {\n        global.web3.currentProvider.send = global.web3.currentProvider.sendAsync;\n        delete global.web3.currentProvider.sendAsync;\n    }\n\n    // if connection is 'ipcProviderWrapper', add subscription support\n    if(!global.web3.currentProvider.on &&\n        global.web3.currentProvider.connection &&\n        global.web3.currentProvider.connection.constructor.name === 'ipcProviderWrapper') {\n\n        global.web3.currentProvider.on = function (type, callback) {\n\n            if(typeof callback !== 'function')\n                throw new Error('The second parameter callback must be a function.');\n\n            switch(type){\n                case 'data':\n                    this.connection.on('data', function(data) {\n                        var result = '';\n\n                        data = data.toString();\n\n                        try {\n                            result = JSON.parse(data);\n                        } catch(e) {\n                            return callback(new Error('Couldn\\'t parse response data'+ data));\n                        }\n\n                        // notification\n                        if(!result.id && result.method.indexOf('_subscription') !== -1) {\n                            callback(null, result);\n                        }\n\n                    });\n                    break;\n\n                default:\n                    this.connection.on(type, callback);\n                    break;\n            }\n        };\n    }\n\n    givenProvider = global.web3.currentProvider;\n}\n/* jshint ignore:end */\n\n\nmodule.exports = givenProvider;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,aAAa,GAAG,IAAI;;AAExB;AACA;AACA,IAAIC,MAAM;AACV,IAAI;EACFA,MAAM,GAAGC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,OAAOC,CAAC,EAAE;EACVF,MAAM,GAAGG,MAAM;AACjB;;AAEA;AACA,IAAI,OAAOH,MAAM,CAACI,QAAQ,KAAK,WAAW,EAAE;EACxCL,aAAa,GAAGC,MAAM,CAACI,QAAQ;;EAEnC;AACA,CAAC,MAAM,IAAG,OAAOJ,MAAM,CAACK,IAAI,KAAK,WAAW,IAAIL,MAAM,CAACK,IAAI,CAACC,eAAe,EAAE;EAEzE,IAAGN,MAAM,CAACK,IAAI,CAACC,eAAe,CAACC,SAAS,EAAE;IACtCP,MAAM,CAACK,IAAI,CAACC,eAAe,CAACE,IAAI,GAAGR,MAAM,CAACK,IAAI,CAACC,eAAe,CAACC,SAAS;IACxE,OAAOP,MAAM,CAACK,IAAI,CAACC,eAAe,CAACC,SAAS;EAChD;;EAEA;EACA,IAAG,CAACP,MAAM,CAACK,IAAI,CAACC,eAAe,CAACG,EAAE,IAC9BT,MAAM,CAACK,IAAI,CAACC,eAAe,CAACI,UAAU,IACtCV,MAAM,CAACK,IAAI,CAACC,eAAe,CAACI,UAAU,CAACC,WAAW,CAACC,IAAI,KAAK,oBAAoB,EAAE;IAElFZ,MAAM,CAACK,IAAI,CAACC,eAAe,CAACG,EAAE,GAAG,UAAUI,IAAI,EAAEC,QAAQ,EAAE;MAEvD,IAAG,OAAOA,QAAQ,KAAK,UAAU,EAC7B,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;MAExE,QAAOF,IAAI;QACP,KAAK,MAAM;UACP,IAAI,CAACH,UAAU,CAACD,EAAE,CAAC,MAAM,EAAE,UAASO,IAAI,EAAE;YACtC,IAAIC,MAAM,GAAG,EAAE;YAEfD,IAAI,GAAGA,IAAI,CAACE,QAAQ,CAAC,CAAC;YAEtB,IAAI;cACAD,MAAM,GAAGE,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;YAC7B,CAAC,CAAC,OAAMd,CAAC,EAAE;cACP,OAAOY,QAAQ,CAAC,IAAIC,KAAK,CAAC,+BAA+B,GAAEC,IAAI,CAAC,CAAC;YACrE;;YAEA;YACA,IAAG,CAACC,MAAM,CAACI,EAAE,IAAIJ,MAAM,CAACK,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE;cAC5DT,QAAQ,CAAC,IAAI,EAAEG,MAAM,CAAC;YAC1B;UAEJ,CAAC,CAAC;UACF;QAEJ;UACI,IAAI,CAACP,UAAU,CAACD,EAAE,CAACI,IAAI,EAAEC,QAAQ,CAAC;UAClC;MACR;IACJ,CAAC;EACL;EAEAf,aAAa,GAAGC,MAAM,CAACK,IAAI,CAACC,eAAe;AAC/C;AACA;;AAGAkB,MAAM,CAACC,OAAO,GAAG1B,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}