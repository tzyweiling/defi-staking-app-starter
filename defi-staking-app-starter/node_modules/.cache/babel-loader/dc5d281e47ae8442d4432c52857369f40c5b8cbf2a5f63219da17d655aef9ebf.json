{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InfectionInstance = void 0;\nconst Infecter_1 = require(\"./Infecter\");\nconst Utils_1 = require(\"../../Utils\");\nclass InfectionInstance {\n  constructor(container) {\n    this.container = container;\n    this.container.infecter = new Infecter_1.Infecter(this.container);\n  }\n  particlesSetup() {\n    var _a;\n    const options = this.container.actualOptions;\n    for (let i = 0; i < options.infection.infections; i++) {\n      const notInfected = this.container.particles.array.filter(p => {\n        const infP = p;\n        if (!infP.infection) {\n          infP.infection = {};\n        }\n        return infP.infection.stage === undefined;\n      });\n      const infected = Utils_1.itemFromArray(notInfected);\n      (_a = this.container.infecter) === null || _a === void 0 ? void 0 : _a.startInfection(infected, 0);\n    }\n  }\n  particleFillColor(particle) {\n    const infParticle = particle;\n    const options = this.container.actualOptions;\n    if (!infParticle.infection) {\n      return;\n    }\n    const infectionStage = infParticle.infection.stage;\n    const infection = options.infection;\n    const infectionStages = infection.stages;\n    return infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n  }\n  particleStrokeColor(particle) {\n    return this.particleFillColor(particle);\n  }\n}\nexports.InfectionInstance = InfectionInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","InfectionInstance","Infecter_1","require","Utils_1","constructor","container","infecter","Infecter","particlesSetup","_a","options","actualOptions","i","infection","infections","notInfected","particles","array","filter","p","infP","stage","undefined","infected","itemFromArray","startInfection","particleFillColor","particle","infParticle","infectionStage","infectionStages","stages","color","particleStrokeColor"],"sources":["D:/Documents/defi-staking-app-starter/defi-staking-app-starter/node_modules/tsparticles/Plugins/Infection/InfectionInstance.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InfectionInstance = void 0;\nconst Infecter_1 = require(\"./Infecter\");\nconst Utils_1 = require(\"../../Utils\");\nclass InfectionInstance {\n    constructor(container) {\n        this.container = container;\n        this.container.infecter = new Infecter_1.Infecter(this.container);\n    }\n    particlesSetup() {\n        var _a;\n        const options = this.container.actualOptions;\n        for (let i = 0; i < options.infection.infections; i++) {\n            const notInfected = this.container.particles.array.filter((p) => {\n                const infP = p;\n                if (!infP.infection) {\n                    infP.infection = {};\n                }\n                return infP.infection.stage === undefined;\n            });\n            const infected = Utils_1.itemFromArray(notInfected);\n            (_a = this.container.infecter) === null || _a === void 0 ? void 0 : _a.startInfection(infected, 0);\n        }\n    }\n    particleFillColor(particle) {\n        const infParticle = particle;\n        const options = this.container.actualOptions;\n        if (!infParticle.infection) {\n            return;\n        }\n        const infectionStage = infParticle.infection.stage;\n        const infection = options.infection;\n        const infectionStages = infection.stages;\n        return infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n    }\n    particleStrokeColor(particle) {\n        return this.particleFillColor(particle);\n    }\n}\nexports.InfectionInstance = InfectionInstance;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,iBAAiB,GAAG,KAAK,CAAC;AAClC,MAAMC,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC;AACxC,MAAMC,OAAO,GAAGD,OAAO,CAAC,aAAa,CAAC;AACtC,MAAMF,iBAAiB,CAAC;EACpBI,WAAWA,CAACC,SAAS,EAAE;IACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACA,SAAS,CAACC,QAAQ,GAAG,IAAIL,UAAU,CAACM,QAAQ,CAAC,IAAI,CAACF,SAAS,CAAC;EACrE;EACAG,cAAcA,CAAA,EAAG;IACb,IAAIC,EAAE;IACN,MAAMC,OAAO,GAAG,IAAI,CAACL,SAAS,CAACM,aAAa;IAC5C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,CAACG,SAAS,CAACC,UAAU,EAAEF,CAAC,EAAE,EAAE;MACnD,MAAMG,WAAW,GAAG,IAAI,CAACV,SAAS,CAACW,SAAS,CAACC,KAAK,CAACC,MAAM,CAAEC,CAAC,IAAK;QAC7D,MAAMC,IAAI,GAAGD,CAAC;QACd,IAAI,CAACC,IAAI,CAACP,SAAS,EAAE;UACjBO,IAAI,CAACP,SAAS,GAAG,CAAC,CAAC;QACvB;QACA,OAAOO,IAAI,CAACP,SAAS,CAACQ,KAAK,KAAKC,SAAS;MAC7C,CAAC,CAAC;MACF,MAAMC,QAAQ,GAAGpB,OAAO,CAACqB,aAAa,CAACT,WAAW,CAAC;MACnD,CAACN,EAAE,GAAG,IAAI,CAACJ,SAAS,CAACC,QAAQ,MAAM,IAAI,IAAIG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACgB,cAAc,CAACF,QAAQ,EAAE,CAAC,CAAC;IACtG;EACJ;EACAG,iBAAiBA,CAACC,QAAQ,EAAE;IACxB,MAAMC,WAAW,GAAGD,QAAQ;IAC5B,MAAMjB,OAAO,GAAG,IAAI,CAACL,SAAS,CAACM,aAAa;IAC5C,IAAI,CAACiB,WAAW,CAACf,SAAS,EAAE;MACxB;IACJ;IACA,MAAMgB,cAAc,GAAGD,WAAW,CAACf,SAAS,CAACQ,KAAK;IAClD,MAAMR,SAAS,GAAGH,OAAO,CAACG,SAAS;IACnC,MAAMiB,eAAe,GAAGjB,SAAS,CAACkB,MAAM;IACxC,OAAOF,cAAc,KAAKP,SAAS,GAAGQ,eAAe,CAACD,cAAc,CAAC,CAACG,KAAK,GAAGV,SAAS;EAC3F;EACAW,mBAAmBA,CAACN,QAAQ,EAAE;IAC1B,OAAO,IAAI,CAACD,iBAAiB,CAACC,QAAQ,CAAC;EAC3C;AACJ;AACA7B,OAAO,CAACE,iBAAiB,GAAGA,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}